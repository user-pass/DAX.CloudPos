"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Commerce;
(function (Commerce) {
    var Proxy;
    (function (Proxy) {
        var Entities;
        (function (Entities) {
            var AutoExitMethodType;
            (function (AutoExitMethodType) {
                AutoExitMethodType[AutoExitMethodType["Logoff"] = 0] = "Logoff";
                AutoExitMethodType[AutoExitMethodType["Lock"] = 1] = "Lock";
                AutoExitMethodType[AutoExitMethodType["None"] = -1] = "None";
            })(AutoExitMethodType = Entities.AutoExitMethodType || (Entities.AutoExitMethodType = {}));
            var PublishingAction;
            (function (PublishingAction) {
                PublishingAction[PublishingAction["None"] = 0] = "None";
                PublishingAction[PublishingAction["Publish"] = 1] = "Publish";
                PublishingAction[PublishingAction["Delete"] = 2] = "Delete";
                PublishingAction[PublishingAction["Expire"] = 3] = "Expire";
            })(PublishingAction = Entities.PublishingAction || (Entities.PublishingAction = {}));
            var ListingPublishingActionStatus;
            (function (ListingPublishingActionStatus) {
                ListingPublishingActionStatus[ListingPublishingActionStatus["None"] = 0] = "None";
                ListingPublishingActionStatus[ListingPublishingActionStatus["Ready"] = 1] = "Ready";
                ListingPublishingActionStatus[ListingPublishingActionStatus["InProgress"] = 2] = "InProgress";
                ListingPublishingActionStatus[ListingPublishingActionStatus["Done"] = 3] = "Done";
                ListingPublishingActionStatus[ListingPublishingActionStatus["Failed"] = 4] = "Failed";
            })(ListingPublishingActionStatus = Entities.ListingPublishingActionStatus || (Entities.ListingPublishingActionStatus = {}));
            var AttributeDataType;
            (function (AttributeDataType) {
                AttributeDataType[AttributeDataType["None"] = 0] = "None";
                AttributeDataType[AttributeDataType["Currency"] = 1] = "Currency";
                AttributeDataType[AttributeDataType["DateTime"] = 2] = "DateTime";
                AttributeDataType[AttributeDataType["Decimal"] = 3] = "Decimal";
                AttributeDataType[AttributeDataType["Integer"] = 4] = "Integer";
                AttributeDataType[AttributeDataType["Text"] = 5] = "Text";
                AttributeDataType[AttributeDataType["TrueFalse"] = 6] = "TrueFalse";
                AttributeDataType[AttributeDataType["Video"] = 40] = "Video";
                AttributeDataType[AttributeDataType["Image"] = 41] = "Image";
            })(AttributeDataType = Entities.AttributeDataType || (Entities.AttributeDataType = {}));
            var OnlineChannelPublishStatusType;
            (function (OnlineChannelPublishStatusType) {
                OnlineChannelPublishStatusType[OnlineChannelPublishStatusType["None"] = 0] = "None";
                OnlineChannelPublishStatusType[OnlineChannelPublishStatusType["Draft"] = 1] = "Draft";
                OnlineChannelPublishStatusType[OnlineChannelPublishStatusType["InProgress"] = 2] = "InProgress";
                OnlineChannelPublishStatusType[OnlineChannelPublishStatusType["Published"] = 3] = "Published";
                OnlineChannelPublishStatusType[OnlineChannelPublishStatusType["Failed"] = 4] = "Failed";
            })(OnlineChannelPublishStatusType = Entities.OnlineChannelPublishStatusType || (Entities.OnlineChannelPublishStatusType = {}));
            var ReceiptTransactionType;
            (function (ReceiptTransactionType) {
                ReceiptTransactionType[ReceiptTransactionType["None"] = 0] = "None";
                ReceiptTransactionType[ReceiptTransactionType["Sale"] = 1] = "Sale";
                ReceiptTransactionType[ReceiptTransactionType["Return"] = 2] = "Return";
                ReceiptTransactionType[ReceiptTransactionType["Payment"] = 5] = "Payment";
                ReceiptTransactionType[ReceiptTransactionType["SalesOrder"] = 6] = "SalesOrder";
                ReceiptTransactionType[ReceiptTransactionType["Quote"] = 7] = "Quote";
                ReceiptTransactionType[ReceiptTransactionType["SuspendedTransaction"] = 9] = "SuspendedTransaction";
            })(ReceiptTransactionType = Entities.ReceiptTransactionType || (Entities.ReceiptTransactionType = {}));
            var EmployeePriceOverrideType;
            (function (EmployeePriceOverrideType) {
                EmployeePriceOverrideType[EmployeePriceOverrideType["HigherAndLower"] = 0] = "HigherAndLower";
                EmployeePriceOverrideType[EmployeePriceOverrideType["HigherOnly"] = 1] = "HigherOnly";
                EmployeePriceOverrideType[EmployeePriceOverrideType["LowerOnly"] = 2] = "LowerOnly";
                EmployeePriceOverrideType[EmployeePriceOverrideType["NotAllowed"] = 3] = "NotAllowed";
            })(EmployeePriceOverrideType = Entities.EmployeePriceOverrideType || (Entities.EmployeePriceOverrideType = {}));
            var KeyInPriceRestriction;
            (function (KeyInPriceRestriction) {
                KeyInPriceRestriction[KeyInPriceRestriction["None"] = 0] = "None";
                KeyInPriceRestriction[KeyInPriceRestriction["NewPrice"] = 1] = "NewPrice";
                KeyInPriceRestriction[KeyInPriceRestriction["HigherOrEqualPrice"] = 2] = "HigherOrEqualPrice";
                KeyInPriceRestriction[KeyInPriceRestriction["LowerOrEqualPrice"] = 3] = "LowerOrEqualPrice";
                KeyInPriceRestriction[KeyInPriceRestriction["NotAllowed"] = 4] = "NotAllowed";
            })(KeyInPriceRestriction = Entities.KeyInPriceRestriction || (Entities.KeyInPriceRestriction = {}));
            var KeyInQuantityRestriction;
            (function (KeyInQuantityRestriction) {
                KeyInQuantityRestriction[KeyInQuantityRestriction["None"] = 0] = "None";
                KeyInQuantityRestriction[KeyInQuantityRestriction["Required"] = 1] = "Required";
                KeyInQuantityRestriction[KeyInQuantityRestriction["NotAllowed"] = 2] = "NotAllowed";
            })(KeyInQuantityRestriction = Entities.KeyInQuantityRestriction || (Entities.KeyInQuantityRestriction = {}));
            var ProductDimensionType;
            (function (ProductDimensionType) {
                ProductDimensionType[ProductDimensionType["None"] = 0] = "None";
                ProductDimensionType[ProductDimensionType["Color"] = 1] = "Color";
                ProductDimensionType[ProductDimensionType["Configuration"] = 2] = "Configuration";
                ProductDimensionType[ProductDimensionType["Size"] = 3] = "Size";
                ProductDimensionType[ProductDimensionType["Style"] = 4] = "Style";
            })(ProductDimensionType = Entities.ProductDimensionType || (Entities.ProductDimensionType = {}));
            var ProductType;
            (function (ProductType) {
                ProductType[ProductType["None"] = 0] = "None";
                ProductType[ProductType["KitMaster"] = 1] = "KitMaster";
                ProductType[ProductType["KitVariant"] = 2] = "KitVariant";
                ProductType[ProductType["Master"] = 3] = "Master";
                ProductType[ProductType["Standalone"] = 4] = "Standalone";
                ProductType[ProductType["Variant"] = 5] = "Variant";
            })(ProductType = Entities.ProductType || (Entities.ProductType = {}));
            var NumberSequenceSeedType;
            (function (NumberSequenceSeedType) {
                NumberSequenceSeedType[NumberSequenceSeedType["None"] = 0] = "None";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptDefault"] = 1] = "ReceiptDefault";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptSale"] = 2] = "ReceiptSale";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptReturn"] = 3] = "ReceiptReturn";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptSalesOrder"] = 4] = "ReceiptSalesOrder";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptSalesInvoice"] = 5] = "ReceiptSalesInvoice";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptPayment"] = 6] = "ReceiptPayment";
                NumberSequenceSeedType[NumberSequenceSeedType["BatchId"] = 7] = "BatchId";
                NumberSequenceSeedType[NumberSequenceSeedType["TransactionId"] = 8] = "TransactionId";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptCustomerSalesOrder"] = 10] = "ReceiptCustomerSalesOrder";
                NumberSequenceSeedType[NumberSequenceSeedType["ReceiptCustomerQuote"] = 11] = "ReceiptCustomerQuote";
            })(NumberSequenceSeedType = Entities.NumberSequenceSeedType || (Entities.NumberSequenceSeedType = {}));
            var ReasonCodeSourceType;
            (function (ReasonCodeSourceType) {
                ReasonCodeSourceType[ReasonCodeSourceType["None"] = 0] = "None";
                ReasonCodeSourceType[ReasonCodeSourceType["AddSalesperson"] = 1] = "AddSalesperson";
                ReasonCodeSourceType[ReasonCodeSourceType["EndOfTransaction"] = 2] = "EndOfTransaction";
                ReasonCodeSourceType[ReasonCodeSourceType["ItemDiscount"] = 3] = "ItemDiscount";
                ReasonCodeSourceType[ReasonCodeSourceType["ItemNotOnFile"] = 4] = "ItemNotOnFile";
                ReasonCodeSourceType[ReasonCodeSourceType["LineItemTaxChange"] = 5] = "LineItemTaxChange";
                ReasonCodeSourceType[ReasonCodeSourceType["Markup"] = 6] = "Markup";
                ReasonCodeSourceType[ReasonCodeSourceType["NegativeAdjustment"] = 7] = "NegativeAdjustment";
                ReasonCodeSourceType[ReasonCodeSourceType["NfcEContingencyModeEnabled"] = 8] = "NfcEContingencyModeEnabled";
                ReasonCodeSourceType[ReasonCodeSourceType["NfcEVoided"] = 9] = "NfcEVoided";
                ReasonCodeSourceType[ReasonCodeSourceType["OpenDrawer"] = 10] = "OpenDrawer";
                ReasonCodeSourceType[ReasonCodeSourceType["OverridePrice"] = 11] = "OverridePrice";
                ReasonCodeSourceType[ReasonCodeSourceType["ReturnItem"] = 12] = "ReturnItem";
                ReasonCodeSourceType[ReasonCodeSourceType["ReturnTransaction"] = 13] = "ReturnTransaction";
                ReasonCodeSourceType[ReasonCodeSourceType["SerialNumber"] = 14] = "SerialNumber";
                ReasonCodeSourceType[ReasonCodeSourceType["StartOfTransaction"] = 15] = "StartOfTransaction";
                ReasonCodeSourceType[ReasonCodeSourceType["TenderDeclaration"] = 16] = "TenderDeclaration";
                ReasonCodeSourceType[ReasonCodeSourceType["TotalDiscount"] = 17] = "TotalDiscount";
                ReasonCodeSourceType[ReasonCodeSourceType["TransactionTaxChange"] = 18] = "TransactionTaxChange";
                ReasonCodeSourceType[ReasonCodeSourceType["VoidItem"] = 19] = "VoidItem";
                ReasonCodeSourceType[ReasonCodeSourceType["VoidPayment"] = 20] = "VoidPayment";
                ReasonCodeSourceType[ReasonCodeSourceType["VoidTransaction"] = 21] = "VoidTransaction";
                ReasonCodeSourceType[ReasonCodeSourceType["OrderFulfillment"] = 22] = "OrderFulfillment";
                ReasonCodeSourceType[ReasonCodeSourceType["ManualCharge"] = 23] = "ManualCharge";
            })(ReasonCodeSourceType = Entities.ReasonCodeSourceType || (Entities.ReasonCodeSourceType = {}));
            var TriggerFunctionType;
            (function (TriggerFunctionType) {
                TriggerFunctionType[TriggerFunctionType["None"] = 0] = "None";
                TriggerFunctionType[TriggerFunctionType["Item"] = 1] = "Item";
                TriggerFunctionType[TriggerFunctionType["InfoCode"] = 2] = "InfoCode";
            })(TriggerFunctionType = Entities.TriggerFunctionType || (Entities.TriggerFunctionType = {}));
            var QueryType;
            (function (QueryType) {
                QueryType[QueryType["None"] = 0] = "None";
                QueryType[QueryType["NameAndDescription"] = 1] = "NameAndDescription";
                QueryType[QueryType["AotObject"] = 2] = "AotObject";
            })(QueryType = Entities.QueryType || (Entities.QueryType = {}));
            var ChangeAction;
            (function (ChangeAction) {
                ChangeAction[ChangeAction["None"] = 0] = "None";
                ChangeAction[ChangeAction["Insert"] = 1] = "Insert";
                ChangeAction[ChangeAction["Update"] = 2] = "Update";
                ChangeAction[ChangeAction["Delete"] = 3] = "Delete";
            })(ChangeAction = Entities.ChangeAction || (Entities.ChangeAction = {}));
            var PeriodicDiscountOfferType;
            (function (PeriodicDiscountOfferType) {
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["MultipleBuy"] = 0] = "MultipleBuy";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["MixAndMatch"] = 1] = "MixAndMatch";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["Offer"] = 2] = "Offer";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["Promotion"] = 3] = "Promotion";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["Threshold"] = 4] = "Threshold";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["LeastExpensiveFavorRetailer"] = 5] = "LeastExpensiveFavorRetailer";
                PeriodicDiscountOfferType[PeriodicDiscountOfferType["OfferLineQuantityLimit"] = 6] = "OfferLineQuantityLimit";
            })(PeriodicDiscountOfferType = Entities.PeriodicDiscountOfferType || (Entities.PeriodicDiscountOfferType = {}));
            var SearchFilterType;
            (function (SearchFilterType) {
                SearchFilterType[SearchFilterType["None"] = 0] = "None";
                SearchFilterType[SearchFilterType["Text"] = 1] = "Text";
            })(SearchFilterType = Entities.SearchFilterType || (Entities.SearchFilterType = {}));
            var InfoCodeActivity;
            (function (InfoCodeActivity) {
                InfoCodeActivity[InfoCodeActivity["Transaction"] = 0] = "Transaction";
                InfoCodeActivity[InfoCodeActivity["OrderFulfillment"] = 1] = "OrderFulfillment";
            })(InfoCodeActivity = Entities.InfoCodeActivity || (Entities.InfoCodeActivity = {}));
            var SrsReportFileFormat;
            (function (SrsReportFileFormat) {
                SrsReportFileFormat[SrsReportFileFormat["CSV"] = 0] = "CSV";
                SrsReportFileFormat[SrsReportFileFormat["Excel"] = 1] = "Excel";
                SrsReportFileFormat[SrsReportFileFormat["HTML4_0"] = 2] = "HTML4_0";
                SrsReportFileFormat[SrsReportFileFormat["Image"] = 3] = "Image";
                SrsReportFileFormat[SrsReportFileFormat["MHTML"] = 4] = "MHTML";
                SrsReportFileFormat[SrsReportFileFormat["PDF"] = 5] = "PDF";
                SrsReportFileFormat[SrsReportFileFormat["XML"] = 6] = "XML";
            })(SrsReportFileFormat = Entities.SrsReportFileFormat || (Entities.SrsReportFileFormat = {}));
            var ShiftReconciliationLineStatus;
            (function (ShiftReconciliationLineStatus) {
                ShiftReconciliationLineStatus[ShiftReconciliationLineStatus["None"] = 0] = "None";
                ShiftReconciliationLineStatus[ShiftReconciliationLineStatus["Pending"] = 1] = "Pending";
                ShiftReconciliationLineStatus[ShiftReconciliationLineStatus["Reconciled"] = 2] = "Reconciled";
                ShiftReconciliationLineStatus[ShiftReconciliationLineStatus["Closed"] = 3] = "Closed";
            })(ShiftReconciliationLineStatus = Entities.ShiftReconciliationLineStatus || (Entities.ShiftReconciliationLineStatus = {}));
            var AddressType;
            (function (AddressType) {
                AddressType[AddressType["None"] = 0] = "None";
                AddressType[AddressType["Invoice"] = 1] = "Invoice";
                AddressType[AddressType["Delivery"] = 2] = "Delivery";
                AddressType[AddressType["AltDlv"] = 3] = "AltDlv";
                AddressType[AddressType["SWIFT"] = 4] = "SWIFT";
                AddressType[AddressType["Payment"] = 5] = "Payment";
                AddressType[AddressType["Service"] = 6] = "Service";
                AddressType[AddressType["Home"] = 7] = "Home";
                AddressType[AddressType["Other"] = 8] = "Other";
                AddressType[AddressType["Business"] = 9] = "Business";
                AddressType[AddressType["RemitTo"] = 10] = "RemitTo";
                AddressType[AddressType["ShipCarrierThirdPartyShipping"] = 11] = "ShipCarrierThirdPartyShipping";
                AddressType[AddressType["Statement"] = 12] = "Statement";
                AddressType[AddressType["FixedAsset"] = 15] = "FixedAsset";
                AddressType[AddressType["Onetime"] = 16] = "Onetime";
                AddressType[AddressType["Recruit"] = 17] = "Recruit";
                AddressType[AddressType["SMS"] = 18] = "SMS";
                AddressType[AddressType["Lading_W"] = 101] = "Lading_W";
                AddressType[AddressType["Unlading_W"] = 102] = "Unlading_W";
                AddressType[AddressType["Consignment_IN"] = 103] = "Consignment_IN";
            })(AddressType = Entities.AddressType || (Entities.AddressType = {}));
            var BarcodeEntryMethodType;
            (function (BarcodeEntryMethodType) {
                BarcodeEntryMethodType[BarcodeEntryMethodType["SingleScanned"] = 0] = "SingleScanned";
                BarcodeEntryMethodType[BarcodeEntryMethodType["MultipleScanned"] = 1] = "MultipleScanned";
                BarcodeEntryMethodType[BarcodeEntryMethodType["ManuallyEntered"] = 2] = "ManuallyEntered";
                BarcodeEntryMethodType[BarcodeEntryMethodType["Selected"] = 3] = "Selected";
            })(BarcodeEntryMethodType = Entities.BarcodeEntryMethodType || (Entities.BarcodeEntryMethodType = {}));
            var BarcodeMaskType;
            (function (BarcodeMaskType) {
                BarcodeMaskType[BarcodeMaskType["None"] = 0] = "None";
                BarcodeMaskType[BarcodeMaskType["Item"] = 1] = "Item";
                BarcodeMaskType[BarcodeMaskType["Customer"] = 2] = "Customer";
                BarcodeMaskType[BarcodeMaskType["Employee"] = 3] = "Employee";
                BarcodeMaskType[BarcodeMaskType["Coupon"] = 4] = "Coupon";
                BarcodeMaskType[BarcodeMaskType["DataEntry"] = 5] = "DataEntry";
                BarcodeMaskType[BarcodeMaskType["Salesperson"] = 6] = "Salesperson";
                BarcodeMaskType[BarcodeMaskType["Pharmacy"] = 7] = "Pharmacy";
                BarcodeMaskType[BarcodeMaskType["DiscountCode"] = 8] = "DiscountCode";
                BarcodeMaskType[BarcodeMaskType["GiftCard"] = 9] = "GiftCard";
                BarcodeMaskType[BarcodeMaskType["LoyaltyCard"] = 10] = "LoyaltyCard";
            })(BarcodeMaskType = Entities.BarcodeMaskType || (Entities.BarcodeMaskType = {}));
            var TransactionStatus;
            (function (TransactionStatus) {
                TransactionStatus[TransactionStatus["Normal"] = 0] = "Normal";
                TransactionStatus[TransactionStatus["Voided"] = 1] = "Voided";
                TransactionStatus[TransactionStatus["Posted"] = 2] = "Posted";
                TransactionStatus[TransactionStatus["Concluded"] = 3] = "Concluded";
                TransactionStatus[TransactionStatus["Canceled"] = 4] = "Canceled";
                TransactionStatus[TransactionStatus["OnHold"] = 5] = "OnHold";
                TransactionStatus[TransactionStatus["Training"] = 6] = "Training";
                TransactionStatus[TransactionStatus["Aborted"] = 7] = "Aborted";
            })(TransactionStatus = Entities.TransactionStatus || (Entities.TransactionStatus = {}));
            var SalesStatus;
            (function (SalesStatus) {
                SalesStatus[SalesStatus["Unknown"] = 0] = "Unknown";
                SalesStatus[SalesStatus["Created"] = 1] = "Created";
                SalesStatus[SalesStatus["Processing"] = 2] = "Processing";
                SalesStatus[SalesStatus["Delivered"] = 3] = "Delivered";
                SalesStatus[SalesStatus["Invoiced"] = 4] = "Invoiced";
                SalesStatus[SalesStatus["Confirmed"] = 5] = "Confirmed";
                SalesStatus[SalesStatus["Sent"] = 6] = "Sent";
                SalesStatus[SalesStatus["Canceled"] = 7] = "Canceled";
                SalesStatus[SalesStatus["Lost"] = 8] = "Lost";
            })(SalesStatus = Entities.SalesStatus || (Entities.SalesStatus = {}));
            var GiftCardOperationType;
            (function (GiftCardOperationType) {
                GiftCardOperationType[GiftCardOperationType["None"] = 0] = "None";
                GiftCardOperationType[GiftCardOperationType["Issue"] = 1] = "Issue";
                GiftCardOperationType[GiftCardOperationType["AddTo"] = 2] = "AddTo";
                GiftCardOperationType[GiftCardOperationType["CashOut"] = 3] = "CashOut";
            })(GiftCardOperationType = Entities.GiftCardOperationType || (Entities.GiftCardOperationType = {}));
            var DiscountLineType;
            (function (DiscountLineType) {
                DiscountLineType[DiscountLineType["None"] = 0] = "None";
                DiscountLineType[DiscountLineType["CustomerDiscount"] = 1] = "CustomerDiscount";
                DiscountLineType[DiscountLineType["PeriodicDiscount"] = 2] = "PeriodicDiscount";
                DiscountLineType[DiscountLineType["ManualDiscount"] = 3] = "ManualDiscount";
                DiscountLineType[DiscountLineType["LoyaltyDiscount"] = 4] = "LoyaltyDiscount";
            })(DiscountLineType = Entities.DiscountLineType || (Entities.DiscountLineType = {}));
            var ManualDiscountType;
            (function (ManualDiscountType) {
                ManualDiscountType[ManualDiscountType["None"] = 0] = "None";
                ManualDiscountType[ManualDiscountType["LineDiscountAmount"] = 1] = "LineDiscountAmount";
                ManualDiscountType[ManualDiscountType["LineDiscountPercent"] = 2] = "LineDiscountPercent";
                ManualDiscountType[ManualDiscountType["TotalDiscountAmount"] = 3] = "TotalDiscountAmount";
                ManualDiscountType[ManualDiscountType["TotalDiscountPercent"] = 4] = "TotalDiscountPercent";
            })(ManualDiscountType = Entities.ManualDiscountType || (Entities.ManualDiscountType = {}));
            var CustomerDiscountType;
            (function (CustomerDiscountType) {
                CustomerDiscountType[CustomerDiscountType["None"] = 0] = "None";
                CustomerDiscountType[CustomerDiscountType["LineDiscount"] = 1] = "LineDiscount";
                CustomerDiscountType[CustomerDiscountType["MultilineDiscount"] = 2] = "MultilineDiscount";
                CustomerDiscountType[CustomerDiscountType["TotalDiscount"] = 3] = "TotalDiscount";
            })(CustomerDiscountType = Entities.CustomerDiscountType || (Entities.CustomerDiscountType = {}));
            var ConcurrencyMode;
            (function (ConcurrencyMode) {
                ConcurrencyMode[ConcurrencyMode["Exclusive"] = 0] = "Exclusive";
                ConcurrencyMode[ConcurrencyMode["BestPrice"] = 1] = "BestPrice";
                ConcurrencyMode[ConcurrencyMode["Compounded"] = 2] = "Compounded";
            })(ConcurrencyMode = Entities.ConcurrencyMode || (Entities.ConcurrencyMode = {}));
            var ReasonCodeInputType;
            (function (ReasonCodeInputType) {
                ReasonCodeInputType[ReasonCodeInputType["None"] = 0] = "None";
                ReasonCodeInputType[ReasonCodeInputType["SubCode"] = 1] = "SubCode";
                ReasonCodeInputType[ReasonCodeInputType["Date"] = 2] = "Date";
                ReasonCodeInputType[ReasonCodeInputType["Numeric"] = 3] = "Numeric";
                ReasonCodeInputType[ReasonCodeInputType["Item"] = 4] = "Item";
                ReasonCodeInputType[ReasonCodeInputType["Customer"] = 5] = "Customer";
                ReasonCodeInputType[ReasonCodeInputType["Staff"] = 6] = "Staff";
                ReasonCodeInputType[ReasonCodeInputType["Text"] = 9] = "Text";
                ReasonCodeInputType[ReasonCodeInputType["SubCodeButtons"] = 10] = "SubCodeButtons";
                ReasonCodeInputType[ReasonCodeInputType["AgeLimit"] = 11] = "AgeLimit";
                ReasonCodeInputType[ReasonCodeInputType["CompositeSubCodes"] = 12] = "CompositeSubCodes";
            })(ReasonCodeInputType = Entities.ReasonCodeInputType || (Entities.ReasonCodeInputType = {}));
            var ReasonCodeLineType;
            (function (ReasonCodeLineType) {
                ReasonCodeLineType[ReasonCodeLineType["Header"] = 0] = "Header";
                ReasonCodeLineType[ReasonCodeLineType["Sales"] = 1] = "Sales";
                ReasonCodeLineType[ReasonCodeLineType["Payment"] = 2] = "Payment";
                ReasonCodeLineType[ReasonCodeLineType["IncomeExpense"] = 3] = "IncomeExpense";
                ReasonCodeLineType[ReasonCodeLineType["NoSale"] = 4] = "NoSale";
                ReasonCodeLineType[ReasonCodeLineType["Affiliation"] = 5] = "Affiliation";
                ReasonCodeLineType[ReasonCodeLineType["Fiscal"] = 6] = "Fiscal";
            })(ReasonCodeLineType = Entities.ReasonCodeLineType || (Entities.ReasonCodeLineType = {}));
            var ChargeModule;
            (function (ChargeModule) {
                ChargeModule[ChargeModule["None"] = 0] = "None";
                ChargeModule[ChargeModule["Sales"] = 1] = "Sales";
                ChargeModule[ChargeModule["Retail"] = 3] = "Retail";
            })(ChargeModule = Entities.ChargeModule || (Entities.ChargeModule = {}));
            var ChargeType;
            (function (ChargeType) {
                ChargeType[ChargeType["ManualCharge"] = 0] = "ManualCharge";
                ChargeType[ChargeType["PriceCharge"] = 1] = "PriceCharge";
                ChargeType[ChargeType["AutoCharge"] = 2] = "AutoCharge";
            })(ChargeType = Entities.ChargeType || (Entities.ChargeType = {}));
            var ChargeMethod;
            (function (ChargeMethod) {
                ChargeMethod[ChargeMethod["Fixed"] = 0] = "Fixed";
                ChargeMethod[ChargeMethod["Pieces"] = 1] = "Pieces";
                ChargeMethod[ChargeMethod["Percent"] = 2] = "Percent";
                ChargeMethod[ChargeMethod["InterCompanyPercent"] = 3] = "InterCompanyPercent";
                ChargeMethod[ChargeMethod["External"] = 4] = "External";
                ChargeMethod[ChargeMethod["Proportional"] = 5] = "Proportional";
            })(ChargeMethod = Entities.ChargeMethod || (Entities.ChargeMethod = {}));
            var CardType;
            (function (CardType) {
                CardType[CardType["InternationalCreditCard"] = 0] = "InternationalCreditCard";
                CardType[CardType["InternationalDebitCard"] = 1] = "InternationalDebitCard";
                CardType[CardType["LoyaltyCard"] = 2] = "LoyaltyCard";
                CardType[CardType["CorporateCard"] = 3] = "CorporateCard";
                CardType[CardType["CustomerCard"] = 4] = "CustomerCard";
                CardType[CardType["EmployeeCard"] = 5] = "EmployeeCard";
                CardType[CardType["SalespersonCard"] = 6] = "SalespersonCard";
                CardType[CardType["GiftCard"] = 7] = "GiftCard";
                CardType[CardType["Unknown"] = -1] = "Unknown";
            })(CardType = Entities.CardType || (Entities.CardType = {}));
            var CashType;
            (function (CashType) {
                CashType[CashType["Coin"] = 0] = "Coin";
                CashType[CashType["Note"] = 1] = "Note";
            })(CashType = Entities.CashType || (Entities.CashType = {}));
            var IncomeExpenseAccountType;
            (function (IncomeExpenseAccountType) {
                IncomeExpenseAccountType[IncomeExpenseAccountType["Income"] = 0] = "Income";
                IncomeExpenseAccountType[IncomeExpenseAccountType["Expense"] = 1] = "Expense";
                IncomeExpenseAccountType[IncomeExpenseAccountType["None"] = -1] = "None";
            })(IncomeExpenseAccountType = Entities.IncomeExpenseAccountType || (Entities.IncomeExpenseAccountType = {}));
            var TenderLineStatus;
            (function (TenderLineStatus) {
                TenderLineStatus[TenderLineStatus["None"] = 0] = "None";
                TenderLineStatus[TenderLineStatus["NotProcessed"] = 1] = "NotProcessed";
                TenderLineStatus[TenderLineStatus["PendingCommit"] = 2] = "PendingCommit";
                TenderLineStatus[TenderLineStatus["Voided"] = 3] = "Voided";
                TenderLineStatus[TenderLineStatus["Committed"] = 4] = "Committed";
                TenderLineStatus[TenderLineStatus["Historical"] = 5] = "Historical";
            })(TenderLineStatus = Entities.TenderLineStatus || (Entities.TenderLineStatus = {}));
            var TenderLineVoidStatus;
            (function (TenderLineVoidStatus) {
                TenderLineVoidStatus[TenderLineVoidStatus["None"] = 0] = "None";
                TenderLineVoidStatus[TenderLineVoidStatus["NormalVoid"] = 1] = "NormalVoid";
                TenderLineVoidStatus[TenderLineVoidStatus["ForceVoided"] = 2] = "ForceVoided";
                TenderLineVoidStatus[TenderLineVoidStatus["ForceVoidReconciled"] = 3] = "ForceVoidReconciled";
            })(TenderLineVoidStatus = Entities.TenderLineVoidStatus || (Entities.TenderLineVoidStatus = {}));
            var PaymentProcessingType;
            (function (PaymentProcessingType) {
                PaymentProcessingType[PaymentProcessingType["Immediate"] = 0] = "Immediate";
                PaymentProcessingType[PaymentProcessingType["Deferred"] = 1] = "Deferred";
            })(PaymentProcessingType = Entities.PaymentProcessingType || (Entities.PaymentProcessingType = {}));
            var CreditCardProcessorStatus;
            (function (CreditCardProcessorStatus) {
                CreditCardProcessorStatus[CreditCardProcessorStatus["NA"] = 0] = "NA";
                CreditCardProcessorStatus[CreditCardProcessorStatus["Approved"] = 1] = "Approved";
                CreditCardProcessorStatus[CreditCardProcessorStatus["Declined"] = 2] = "Declined";
                CreditCardProcessorStatus[CreditCardProcessorStatus["Error"] = 3] = "Error";
            })(CreditCardProcessorStatus = Entities.CreditCardProcessorStatus || (Entities.CreditCardProcessorStatus = {}));
            var ContactInformationType;
            (function (ContactInformationType) {
                ContactInformationType[ContactInformationType["None"] = 0] = "None";
                ContactInformationType[ContactInformationType["Phone"] = 1] = "Phone";
                ContactInformationType[ContactInformationType["Email"] = 2] = "Email";
                ContactInformationType[ContactInformationType["Url"] = 3] = "Url";
                ContactInformationType[ContactInformationType["Telex"] = 4] = "Telex";
                ContactInformationType[ContactInformationType["Fax"] = 5] = "Fax";
                ContactInformationType[ContactInformationType["CellularPhone"] = 6] = "CellularPhone";
            })(ContactInformationType = Entities.ContactInformationType || (Entities.ContactInformationType = {}));
            var CommerceEntityDataLevel;
            (function (CommerceEntityDataLevel) {
                CommerceEntityDataLevel[CommerceEntityDataLevel["Identity"] = 0] = "Identity";
                CommerceEntityDataLevel[CommerceEntityDataLevel["Minimal"] = 1] = "Minimal";
                CommerceEntityDataLevel[CommerceEntityDataLevel["Standard"] = 2] = "Standard";
                CommerceEntityDataLevel[CommerceEntityDataLevel["Extended"] = 3] = "Extended";
                CommerceEntityDataLevel[CommerceEntityDataLevel["Complete"] = 4] = "Complete";
            })(CommerceEntityDataLevel = Entities.CommerceEntityDataLevel || (Entities.CommerceEntityDataLevel = {}));
            var TransactionType;
            (function (TransactionType) {
                TransactionType[TransactionType["LogOff"] = 0] = "LogOff";
                TransactionType[TransactionType["LogOn"] = 1] = "LogOn";
                TransactionType[TransactionType["Sales"] = 2] = "Sales";
                TransactionType[TransactionType["Payment"] = 3] = "Payment";
                TransactionType[TransactionType["RemoveTender"] = 4] = "RemoveTender";
                TransactionType[TransactionType["FloatEntry"] = 5] = "FloatEntry";
                TransactionType[TransactionType["ChangeTender"] = 6] = "ChangeTender";
                TransactionType[TransactionType["TenderDeclaration"] = 7] = "TenderDeclaration";
                TransactionType[TransactionType["OpenDrawer"] = 9] = "OpenDrawer";
                TransactionType[TransactionType["SalesOrder"] = 14] = "SalesOrder";
                TransactionType[TransactionType["SalesInvoice"] = 15] = "SalesInvoice";
                TransactionType[TransactionType["BankDrop"] = 16] = "BankDrop";
                TransactionType[TransactionType["SafeDrop"] = 17] = "SafeDrop";
                TransactionType[TransactionType["IncomeExpense"] = 18] = "IncomeExpense";
                TransactionType[TransactionType["CustomerOrder"] = 19] = "CustomerOrder";
                TransactionType[TransactionType["StartingAmount"] = 20] = "StartingAmount";
                TransactionType[TransactionType["SuspendShift"] = 21] = "SuspendShift";
                TransactionType[TransactionType["BlindCloseShift"] = 22] = "BlindCloseShift";
                TransactionType[TransactionType["CloseShift"] = 23] = "CloseShift";
                TransactionType[TransactionType["PrintX"] = 24] = "PrintX";
                TransactionType[TransactionType["PrintZ"] = 25] = "PrintZ";
                TransactionType[TransactionType["PendingSalesOrder"] = 27] = "PendingSalesOrder";
                TransactionType[TransactionType["KitDisassembly"] = 28] = "KitDisassembly";
                TransactionType[TransactionType["AsyncCustomerQuote"] = 31] = "AsyncCustomerQuote";
                TransactionType[TransactionType["AsyncCustomerOrder"] = 33] = "AsyncCustomerOrder";
                TransactionType[TransactionType["ForceDeleteShift"] = 34] = "ForceDeleteShift";
                TransactionType[TransactionType["GiftCardInquiry"] = 35] = "GiftCardInquiry";
                TransactionType[TransactionType["SuspendedTransaction"] = 36] = "SuspendedTransaction";
                TransactionType[TransactionType["None"] = -1] = "None";
            })(TransactionType = Entities.TransactionType || (Entities.TransactionType = {}));
            var CashManagementTransactionContext;
            (function (CashManagementTransactionContext) {
                CashManagementTransactionContext[CashManagementTransactionContext["Unknown"] = 0] = "Unknown";
                CashManagementTransactionContext[CashManagementTransactionContext["Shift"] = 1] = "Shift";
                CashManagementTransactionContext[CashManagementTransactionContext["Safe"] = 2] = "Safe";
                CashManagementTransactionContext[CashManagementTransactionContext["Bank"] = 3] = "Bank";
            })(CashManagementTransactionContext = Entities.CashManagementTransactionContext || (Entities.CashManagementTransactionContext = {}));
            var EmployeePermissionsAllowPrintingReceiptCopy;
            (function (EmployeePermissionsAllowPrintingReceiptCopy) {
                EmployeePermissionsAllowPrintingReceiptCopy[EmployeePermissionsAllowPrintingReceiptCopy["Always"] = 0] = "Always";
                EmployeePermissionsAllowPrintingReceiptCopy[EmployeePermissionsAllowPrintingReceiptCopy["OnlyOnce"] = 1] = "OnlyOnce";
                EmployeePermissionsAllowPrintingReceiptCopy[EmployeePermissionsAllowPrintingReceiptCopy["OnlyOnceHqAvailable"] = 2] = "OnlyOnceHqAvailable";
                EmployeePermissionsAllowPrintingReceiptCopy[EmployeePermissionsAllowPrintingReceiptCopy["Never"] = 3] = "Never";
            })(EmployeePermissionsAllowPrintingReceiptCopy = Entities.EmployeePermissionsAllowPrintingReceiptCopy || (Entities.EmployeePermissionsAllowPrintingReceiptCopy = {}));
            var AddressFormatLineType;
            (function (AddressFormatLineType) {
                AddressFormatLineType[AddressFormatLineType["None"] = 0] = "None";
                AddressFormatLineType[AddressFormatLineType["ZipCode"] = 1] = "ZipCode";
                AddressFormatLineType[AddressFormatLineType["City"] = 2] = "City";
                AddressFormatLineType[AddressFormatLineType["County"] = 3] = "County";
                AddressFormatLineType[AddressFormatLineType["State"] = 4] = "State";
                AddressFormatLineType[AddressFormatLineType["CountryRegion"] = 5] = "CountryRegion";
                AddressFormatLineType[AddressFormatLineType["StreetName"] = 6] = "StreetName";
                AddressFormatLineType[AddressFormatLineType["District"] = 7] = "District";
                AddressFormatLineType[AddressFormatLineType["StreetNumber"] = 8] = "StreetNumber";
                AddressFormatLineType[AddressFormatLineType["BuildingCompliment"] = 9] = "BuildingCompliment";
                AddressFormatLineType[AddressFormatLineType["Postbox"] = 10] = "Postbox";
                AddressFormatLineType[AddressFormatLineType["House_RU"] = 21] = "House_RU";
                AddressFormatLineType[AddressFormatLineType["Flat_RU"] = 22] = "Flat_RU";
                AddressFormatLineType[AddressFormatLineType["CountryOKSMCode_RU"] = 23] = "CountryOKSMCode_RU";
            })(AddressFormatLineType = Entities.AddressFormatLineType || (Entities.AddressFormatLineType = {}));
            var StatementMethod;
            (function (StatementMethod) {
                StatementMethod[StatementMethod["Staff"] = 0] = "Staff";
                StatementMethod[StatementMethod["PosTerminal"] = 1] = "PosTerminal";
                StatementMethod[StatementMethod["Total"] = 2] = "Total";
                StatementMethod[StatementMethod["None"] = -1] = "None";
            })(StatementMethod = Entities.StatementMethod || (Entities.StatementMethod = {}));
            var SalesRepPromptType;
            (function (SalesRepPromptType) {
                SalesRepPromptType[SalesRepPromptType["NoPrompt"] = 0] = "NoPrompt";
                SalesRepPromptType[SalesRepPromptType["PromptOnCartCreation"] = 1] = "PromptOnCartCreation";
                SalesRepPromptType[SalesRepPromptType["PromptOnCartLineCreation"] = 2] = "PromptOnCartLineCreation";
                SalesRepPromptType[SalesRepPromptType["None"] = -1] = "None";
            })(SalesRepPromptType = Entities.SalesRepPromptType || (Entities.SalesRepPromptType = {}));
            var RetailProductSearchType;
            (function (RetailProductSearchType) {
                RetailProductSearchType[RetailProductSearchType["MatchAnySearchTerms"] = 0] = "MatchAnySearchTerms";
                RetailProductSearchType[RetailProductSearchType["MatchAllSearchTerms"] = 1] = "MatchAllSearchTerms";
            })(RetailProductSearchType = Entities.RetailProductSearchType || (Entities.RetailProductSearchType = {}));
            var RetailDenominationsToDisplay;
            (function (RetailDenominationsToDisplay) {
                RetailDenominationsToDisplay[RetailDenominationsToDisplay["GreaterOrEqualToAmountDue"] = 0] = "GreaterOrEqualToAmountDue";
                RetailDenominationsToDisplay[RetailDenominationsToDisplay["AllDenominations"] = 1] = "AllDenominations";
            })(RetailDenominationsToDisplay = Entities.RetailDenominationsToDisplay || (Entities.RetailDenominationsToDisplay = {}));
            var EmployeeLogonType;
            (function (EmployeeLogonType) {
                EmployeeLogonType[EmployeeLogonType["RetailIdentityProvider"] = 0] = "RetailIdentityProvider";
                EmployeeLogonType[EmployeeLogonType["AzureActiveDirectory"] = 1] = "AzureActiveDirectory";
            })(EmployeeLogonType = Entities.EmployeeLogonType || (Entities.EmployeeLogonType = {}));
            var DeviceActivationStatus;
            (function (DeviceActivationStatus) {
                DeviceActivationStatus[DeviceActivationStatus["Pending"] = 0] = "Pending";
                DeviceActivationStatus[DeviceActivationStatus["Activated"] = 1] = "Activated";
                DeviceActivationStatus[DeviceActivationStatus["Deactivated"] = 2] = "Deactivated";
                DeviceActivationStatus[DeviceActivationStatus["Disabled"] = 3] = "Disabled";
                DeviceActivationStatus[DeviceActivationStatus["None"] = -1] = "None";
            })(DeviceActivationStatus = Entities.DeviceActivationStatus || (Entities.DeviceActivationStatus = {}));
            var DeviceType;
            (function (DeviceType) {
                DeviceType[DeviceType["None"] = 0] = "None";
                DeviceType[DeviceType["OPOS"] = 1] = "OPOS";
                DeviceType[DeviceType["WindowsPrinter"] = 2] = "WindowsPrinter";
                DeviceType[DeviceType["Network"] = 3] = "Network";
            })(DeviceType = Entities.DeviceType || (Entities.DeviceType = {}));
            var DualDisplayType;
            (function (DualDisplayType) {
                DualDisplayType[DualDisplayType["Logo"] = 0] = "Logo";
                DualDisplayType[DualDisplayType["ImageRotator"] = 1] = "ImageRotator";
                DualDisplayType[DualDisplayType["WebBrowser"] = 2] = "WebBrowser";
                DualDisplayType[DualDisplayType["None"] = -1] = "None";
            })(DualDisplayType = Entities.DualDisplayType || (Entities.DualDisplayType = {}));
            var FiscalRegisterType;
            (function (FiscalRegisterType) {
                FiscalRegisterType[FiscalRegisterType["None"] = 0] = "None";
                FiscalRegisterType[FiscalRegisterType["Manufacturer"] = 1] = "Manufacturer";
            })(FiscalRegisterType = Entities.FiscalRegisterType || (Entities.FiscalRegisterType = {}));
            var PrinterLogotype;
            (function (PrinterLogotype) {
                PrinterLogotype[PrinterLogotype["None"] = 0] = "None";
                PrinterLogotype[PrinterLogotype["Download"] = 1] = "Download";
                PrinterLogotype[PrinterLogotype["EpsonFlash"] = 2] = "EpsonFlash";
            })(PrinterLogotype = Entities.PrinterLogotype || (Entities.PrinterLogotype = {}));
            var PrinterLogoAlignmentType;
            (function (PrinterLogoAlignmentType) {
                PrinterLogoAlignmentType[PrinterLogoAlignmentType["Left"] = 0] = "Left";
                PrinterLogoAlignmentType[PrinterLogoAlignmentType["Center"] = 1] = "Center";
                PrinterLogoAlignmentType[PrinterLogoAlignmentType["Right"] = 2] = "Right";
                PrinterLogoAlignmentType[PrinterLogoAlignmentType["None"] = -1] = "None";
            })(PrinterLogoAlignmentType = Entities.PrinterLogoAlignmentType || (Entities.PrinterLogoAlignmentType = {}));
            var FiscalIntegrationConnectorType;
            (function (FiscalIntegrationConnectorType) {
                FiscalIntegrationConnectorType[FiscalIntegrationConnectorType["Local"] = 0] = "Local";
                FiscalIntegrationConnectorType[FiscalIntegrationConnectorType["External"] = 1] = "External";
                FiscalIntegrationConnectorType[FiscalIntegrationConnectorType["Internal"] = 2] = "Internal";
            })(FiscalIntegrationConnectorType = Entities.FiscalIntegrationConnectorType || (Entities.FiscalIntegrationConnectorType = {}));
            var ReceiptType;
            (function (ReceiptType) {
                ReceiptType[ReceiptType["Unknown"] = 0] = "Unknown";
                ReceiptType[ReceiptType["SalesReceipt"] = 1] = "SalesReceipt";
                ReceiptType[ReceiptType["CardReceiptForShop"] = 2] = "CardReceiptForShop";
                ReceiptType[ReceiptType["CardReceiptForCustomer"] = 3] = "CardReceiptForCustomer";
                ReceiptType[ReceiptType["CardReceiptForShopReturn"] = 4] = "CardReceiptForShopReturn";
                ReceiptType[ReceiptType["CardReceiptForCustomerReturn"] = 5] = "CardReceiptForCustomerReturn";
                ReceiptType[ReceiptType["CustomerAccountReceiptForShop"] = 7] = "CustomerAccountReceiptForShop";
                ReceiptType[ReceiptType["CustomerAccountReceiptForCustomer"] = 8] = "CustomerAccountReceiptForCustomer";
                ReceiptType[ReceiptType["CustomerAccountReceiptForShopReturn"] = 9] = "CustomerAccountReceiptForShopReturn";
                ReceiptType[ReceiptType["CustomerAccountReceiptForCustomerReturn"] = 10] = "CustomerAccountReceiptForCustomerReturn";
                ReceiptType[ReceiptType["CustomerAccountDeposit"] = 14] = "CustomerAccountDeposit";
                ReceiptType[ReceiptType["CreditMemo"] = 15] = "CreditMemo";
                ReceiptType[ReceiptType["SalesOrderReceipt"] = 18] = "SalesOrderReceipt";
                ReceiptType[ReceiptType["GiftCertificate"] = 20] = "GiftCertificate";
                ReceiptType[ReceiptType["QuotationReceipt"] = 21] = "QuotationReceipt";
                ReceiptType[ReceiptType["PackingSlip"] = 22] = "PackingSlip";
                ReceiptType[ReceiptType["PickupReceipt"] = 23] = "PickupReceipt";
                ReceiptType[ReceiptType["XReport"] = 24] = "XReport";
                ReceiptType[ReceiptType["ZReport"] = 25] = "ZReport";
                ReceiptType[ReceiptType["SafeDrop"] = 26] = "SafeDrop";
                ReceiptType[ReceiptType["BankDrop"] = 27] = "BankDrop";
                ReceiptType[ReceiptType["TenderDeclaration"] = 28] = "TenderDeclaration";
                ReceiptType[ReceiptType["RemoveTender"] = 29] = "RemoveTender";
                ReceiptType[ReceiptType["FloatEntry"] = 30] = "FloatEntry";
                ReceiptType[ReceiptType["StartingAmount"] = 31] = "StartingAmount";
                ReceiptType[ReceiptType["OrderSummaryReceipt"] = 32] = "OrderSummaryReceipt";
                ReceiptType[ReceiptType["GiftReceipt"] = 33] = "GiftReceipt";
                ReceiptType[ReceiptType["ReturnLabel"] = 34] = "ReturnLabel";
                ReceiptType[ReceiptType["EFDocDANFESimplified"] = 35] = "EFDocDANFESimplified";
                ReceiptType[ReceiptType["EFDocDANFEDetailed"] = 36] = "EFDocDANFEDetailed";
                ReceiptType[ReceiptType["PickingList"] = 37] = "PickingList";
                ReceiptType[ReceiptType["OpenDrawer"] = 38] = "OpenDrawer";
                ReceiptType[ReceiptType["SuspendedTransaction"] = 39] = "SuspendedTransaction";
                ReceiptType[ReceiptType["GiftCardInquiry"] = 40] = "GiftCardInquiry";
                ReceiptType[ReceiptType["CardTerminationReceiptForShop"] = 41] = "CardTerminationReceiptForShop";
                ReceiptType[ReceiptType["CardTerminationReceiptForCustomer"] = 42] = "CardTerminationReceiptForCustomer";
                ReceiptType[ReceiptType["CustomReceipt1"] = 101] = "CustomReceipt1";
                ReceiptType[ReceiptType["CustomReceipt2"] = 102] = "CustomReceipt2";
                ReceiptType[ReceiptType["CustomReceipt3"] = 103] = "CustomReceipt3";
                ReceiptType[ReceiptType["CustomReceipt4"] = 104] = "CustomReceipt4";
                ReceiptType[ReceiptType["CustomReceipt5"] = 105] = "CustomReceipt5";
                ReceiptType[ReceiptType["CustomReceipt6"] = 106] = "CustomReceipt6";
                ReceiptType[ReceiptType["CustomReceipt7"] = 107] = "CustomReceipt7";
                ReceiptType[ReceiptType["CustomReceipt8"] = 108] = "CustomReceipt8";
                ReceiptType[ReceiptType["CustomReceipt9"] = 109] = "CustomReceipt9";
                ReceiptType[ReceiptType["CustomReceipt10"] = 110] = "CustomReceipt10";
                ReceiptType[ReceiptType["CustomReceipt11"] = 111] = "CustomReceipt11";
                ReceiptType[ReceiptType["CustomReceipt12"] = 112] = "CustomReceipt12";
                ReceiptType[ReceiptType["CustomReceipt13"] = 113] = "CustomReceipt13";
                ReceiptType[ReceiptType["CustomReceipt14"] = 114] = "CustomReceipt14";
                ReceiptType[ReceiptType["CustomReceipt15"] = 115] = "CustomReceipt15";
                ReceiptType[ReceiptType["CustomReceipt16"] = 116] = "CustomReceipt16";
                ReceiptType[ReceiptType["CustomReceipt17"] = 117] = "CustomReceipt17";
                ReceiptType[ReceiptType["CustomReceipt18"] = 118] = "CustomReceipt18";
                ReceiptType[ReceiptType["CustomReceipt19"] = 119] = "CustomReceipt19";
                ReceiptType[ReceiptType["CustomReceipt20"] = 120] = "CustomReceipt20";
            })(ReceiptType = Entities.ReceiptType || (Entities.ReceiptType = {}));
            var PrintBehavior;
            (function (PrintBehavior) {
                PrintBehavior[PrintBehavior["Always"] = 0] = "Always";
                PrintBehavior[PrintBehavior["Never"] = 1] = "Never";
                PrintBehavior[PrintBehavior["Prompt"] = 2] = "Prompt";
                PrintBehavior[PrintBehavior["AsRequired"] = 3] = "AsRequired";
            })(PrintBehavior = Entities.PrintBehavior || (Entities.PrintBehavior = {}));
            var ProductPropertyType;
            (function (ProductPropertyType) {
                ProductPropertyType[ProductPropertyType["None"] = 0] = "None";
                ProductPropertyType[ProductPropertyType["Currency"] = 1] = "Currency";
                ProductPropertyType[ProductPropertyType["DateTime"] = 2] = "DateTime";
                ProductPropertyType[ProductPropertyType["Decimal"] = 3] = "Decimal";
                ProductPropertyType[ProductPropertyType["Integer"] = 4] = "Integer";
                ProductPropertyType[ProductPropertyType["Text"] = 5] = "Text";
                ProductPropertyType[ProductPropertyType["Boolean"] = 6] = "Boolean";
                ProductPropertyType[ProductPropertyType["Video"] = 40] = "Video";
                ProductPropertyType[ProductPropertyType["Image"] = 41] = "Image";
            })(ProductPropertyType = Entities.ProductPropertyType || (Entities.ProductPropertyType = {}));
            var AttributeGroupType;
            (function (AttributeGroupType) {
                AttributeGroupType[AttributeGroupType["Default"] = 0] = "Default";
                AttributeGroupType[AttributeGroupType["Specification"] = 1] = "Specification";
            })(AttributeGroupType = Entities.AttributeGroupType || (Entities.AttributeGroupType = {}));
            var ProductSource;
            (function (ProductSource) {
                ProductSource[ProductSource["None"] = 0] = "None";
                ProductSource[ProductSource["Local"] = 1] = "Local";
                ProductSource[ProductSource["Remote"] = 2] = "Remote";
            })(ProductSource = Entities.ProductSource || (Entities.ProductSource = {}));
            var RoundingMethod;
            (function (RoundingMethod) {
                RoundingMethod[RoundingMethod["None"] = 0] = "None";
                RoundingMethod[RoundingMethod["Nearest"] = 1] = "Nearest";
                RoundingMethod[RoundingMethod["Up"] = 2] = "Up";
                RoundingMethod[RoundingMethod["Down"] = 3] = "Down";
            })(RoundingMethod = Entities.RoundingMethod || (Entities.RoundingMethod = {}));
            var PriceMethod;
            (function (PriceMethod) {
                PriceMethod[PriceMethod["None"] = 0] = "None";
                PriceMethod[PriceMethod["Fixed"] = 1] = "Fixed";
                PriceMethod[PriceMethod["AmountOff"] = 2] = "AmountOff";
                PriceMethod[PriceMethod["PercentOff"] = 3] = "PercentOff";
            })(PriceMethod = Entities.PriceMethod || (Entities.PriceMethod = {}));
            var LineMultilineDiscountOnItem;
            (function (LineMultilineDiscountOnItem) {
                LineMultilineDiscountOnItem[LineMultilineDiscountOnItem["None"] = 0] = "None";
                LineMultilineDiscountOnItem[LineMultilineDiscountOnItem["Line"] = 1] = "Line";
                LineMultilineDiscountOnItem[LineMultilineDiscountOnItem["Multiline"] = 2] = "Multiline";
                LineMultilineDiscountOnItem[LineMultilineDiscountOnItem["Both"] = 3] = "Both";
            })(LineMultilineDiscountOnItem = Entities.LineMultilineDiscountOnItem || (Entities.LineMultilineDiscountOnItem = {}));
            var LoyaltyRewardPointEntryType;
            (function (LoyaltyRewardPointEntryType) {
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["None"] = 0] = "None";
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["Earn"] = 1] = "Earn";
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["Redeem"] = 2] = "Redeem";
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["ReturnEarned"] = 3] = "ReturnEarned";
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["Adjust"] = 4] = "Adjust";
                LoyaltyRewardPointEntryType[LoyaltyRewardPointEntryType["Refund"] = 5] = "Refund";
            })(LoyaltyRewardPointEntryType = Entities.LoyaltyRewardPointEntryType || (Entities.LoyaltyRewardPointEntryType = {}));
            var LoyaltyRewardPointType;
            (function (LoyaltyRewardPointType) {
                LoyaltyRewardPointType[LoyaltyRewardPointType["None"] = 0] = "None";
                LoyaltyRewardPointType[LoyaltyRewardPointType["Quantity"] = 1] = "Quantity";
                LoyaltyRewardPointType[LoyaltyRewardPointType["Amount"] = 2] = "Amount";
            })(LoyaltyRewardPointType = Entities.LoyaltyRewardPointType || (Entities.LoyaltyRewardPointType = {}));
            var DistanceUnit;
            (function (DistanceUnit) {
                DistanceUnit[DistanceUnit["Miles"] = 0] = "Miles";
                DistanceUnit[DistanceUnit["Kilometers"] = 1] = "Kilometers";
            })(DistanceUnit = Entities.DistanceUnit || (Entities.DistanceUnit = {}));
            var StockCountStatus;
            (function (StockCountStatus) {
                StockCountStatus[StockCountStatus["Unchanged"] = 0] = "Unchanged";
                StockCountStatus[StockCountStatus["PendingUpdate"] = 1] = "PendingUpdate";
            })(StockCountStatus = Entities.StockCountStatus || (Entities.StockCountStatus = {}));
            var CommerceListInvitationStatus;
            (function (CommerceListInvitationStatus) {
                CommerceListInvitationStatus[CommerceListInvitationStatus["None"] = 0] = "None";
                CommerceListInvitationStatus[CommerceListInvitationStatus["Pending"] = 1] = "Pending";
                CommerceListInvitationStatus[CommerceListInvitationStatus["Accepted"] = 2] = "Accepted";
            })(CommerceListInvitationStatus = Entities.CommerceListInvitationStatus || (Entities.CommerceListInvitationStatus = {}));
            var CommerceListInvitationType;
            (function (CommerceListInvitationType) {
                CommerceListInvitationType[CommerceListInvitationType["None"] = 0] = "None";
                CommerceListInvitationType[CommerceListInvitationType["Public"] = 1] = "Public";
                CommerceListInvitationType[CommerceListInvitationType["Email"] = 2] = "Email";
            })(CommerceListInvitationType = Entities.CommerceListInvitationType || (Entities.CommerceListInvitationType = {}));
            var SearchLocation;
            (function (SearchLocation) {
                SearchLocation[SearchLocation["None"] = 0] = "None";
                SearchLocation[SearchLocation["Local"] = 1] = "Local";
                SearchLocation[SearchLocation["Remote"] = 2] = "Remote";
                SearchLocation[SearchLocation["All"] = 3] = "All";
            })(SearchLocation = Entities.SearchLocation || (Entities.SearchLocation = {}));
            var OrderSearchType;
            (function (OrderSearchType) {
                OrderSearchType[OrderSearchType["None"] = 0] = "None";
                OrderSearchType[OrderSearchType["SalesOrder"] = 1] = "SalesOrder";
                OrderSearchType[OrderSearchType["SalesTransaction"] = 2] = "SalesTransaction";
                OrderSearchType[OrderSearchType["ConsolidateOrder"] = 3] = "ConsolidateOrder";
            })(OrderSearchType = Entities.OrderSearchType || (Entities.OrderSearchType = {}));
            var SalesTransactionType;
            (function (SalesTransactionType) {
                SalesTransactionType[SalesTransactionType["Sales"] = 2] = "Sales";
                SalesTransactionType[SalesTransactionType["CustomerAccountDeposit"] = 3] = "CustomerAccountDeposit";
                SalesTransactionType[SalesTransactionType["SalesInvoice"] = 15] = "SalesInvoice";
                SalesTransactionType[SalesTransactionType["IncomeExpense"] = 18] = "IncomeExpense";
                SalesTransactionType[SalesTransactionType["CustomerOrder"] = 19] = "CustomerOrder";
                SalesTransactionType[SalesTransactionType["PendingSalesOrder"] = 27] = "PendingSalesOrder";
                SalesTransactionType[SalesTransactionType["AsyncCustomerQuote"] = 31] = "AsyncCustomerQuote";
                SalesTransactionType[SalesTransactionType["AsyncCustomerOrder"] = 33] = "AsyncCustomerOrder";
                SalesTransactionType[SalesTransactionType["SuspendedSalesTransaction"] = 36] = "SuspendedSalesTransaction";
                SalesTransactionType[SalesTransactionType["None"] = -1] = "None";
            })(SalesTransactionType = Entities.SalesTransactionType || (Entities.SalesTransactionType = {}));
            var RetailAffiliationType;
            (function (RetailAffiliationType) {
                RetailAffiliationType[RetailAffiliationType["General"] = 0] = "General";
                RetailAffiliationType[RetailAffiliationType["Loyalty"] = 1] = "Loyalty";
                RetailAffiliationType[RetailAffiliationType["Unknown"] = -1] = "Unknown";
            })(RetailAffiliationType = Entities.RetailAffiliationType || (Entities.RetailAffiliationType = {}));
            var ProductRefinerSource;
            (function (ProductRefinerSource) {
                ProductRefinerSource[ProductRefinerSource["None"] = 0] = "None";
                ProductRefinerSource[ProductRefinerSource["Attribute"] = 1] = "Attribute";
                ProductRefinerSource[ProductRefinerSource["Category"] = 2] = "Category";
                ProductRefinerSource[ProductRefinerSource["Price"] = 3] = "Price";
            })(ProductRefinerSource = Entities.ProductRefinerSource || (Entities.ProductRefinerSource = {}));
            var RefinerType;
            (function (RefinerType) {
                RefinerType[RefinerType["SingleSelect"] = 0] = "SingleSelect";
                RefinerType[RefinerType["MultiSelect"] = 1] = "MultiSelect";
            })(RefinerType = Entities.RefinerType || (Entities.RefinerType = {}));
            var DisplayTemplate;
            (function (DisplayTemplate) {
                DisplayTemplate[DisplayTemplate["List"] = 0] = "List";
                DisplayTemplate[DisplayTemplate["Slider"] = 1] = "Slider";
                DisplayTemplate[DisplayTemplate["SliderWithBars"] = 2] = "SliderWithBars";
                DisplayTemplate[DisplayTemplate["Range"] = 3] = "Range";
            })(DisplayTemplate = Entities.DisplayTemplate || (Entities.DisplayTemplate = {}));
            var LoyaltyCardTenderType;
            (function (LoyaltyCardTenderType) {
                LoyaltyCardTenderType[LoyaltyCardTenderType["AsCardTender"] = 0] = "AsCardTender";
                LoyaltyCardTenderType[LoyaltyCardTenderType["AsContactTender"] = 1] = "AsContactTender";
                LoyaltyCardTenderType[LoyaltyCardTenderType["NoTender"] = 2] = "NoTender";
                LoyaltyCardTenderType[LoyaltyCardTenderType["Blocked"] = 3] = "Blocked";
            })(LoyaltyCardTenderType = Entities.LoyaltyCardTenderType || (Entities.LoyaltyCardTenderType = {}));
            var RetailChannelType;
            (function (RetailChannelType) {
                RetailChannelType[RetailChannelType["RetailStore"] = 0] = "RetailStore";
                RetailChannelType[RetailChannelType["OnlineStore"] = 1] = "OnlineStore";
                RetailChannelType[RetailChannelType["OnlineMarketplace"] = 2] = "OnlineMarketplace";
                RetailChannelType[RetailChannelType["SharePointOnlineStore"] = 3] = "SharePointOnlineStore";
                RetailChannelType[RetailChannelType["None"] = -1] = "None";
            })(RetailChannelType = Entities.RetailChannelType || (Entities.RetailChannelType = {}));
            var LogOnConfiguration;
            (function (LogOnConfiguration) {
                LogOnConfiguration[LogOnConfiguration["LocalDatabase"] = 0] = "LocalDatabase";
                LogOnConfiguration[LogOnConfiguration["RealTimeService"] = 1] = "RealTimeService";
            })(LogOnConfiguration = Entities.LogOnConfiguration || (Entities.LogOnConfiguration = {}));
            var TransactionServiceAuthenticationType;
            (function (TransactionServiceAuthenticationType) {
                TransactionServiceAuthenticationType[TransactionServiceAuthenticationType["CertificateAuthentication"] = 0] = "CertificateAuthentication";
                TransactionServiceAuthenticationType[TransactionServiceAuthenticationType["ServiceToServiceAuthentication"] = 1] = "ServiceToServiceAuthentication";
                TransactionServiceAuthenticationType[TransactionServiceAuthenticationType["AdfsServiceToServiceClientSecretAuthentication"] = 2] = "AdfsServiceToServiceClientSecretAuthentication";
            })(TransactionServiceAuthenticationType = Entities.TransactionServiceAuthenticationType || (Entities.TransactionServiceAuthenticationType = {}));
            var EmployeeActivityType;
            (function (EmployeeActivityType) {
                EmployeeActivityType[EmployeeActivityType["ClockIn"] = 0] = "ClockIn";
                EmployeeActivityType[EmployeeActivityType["JobStop"] = 1] = "JobStop";
                EmployeeActivityType[EmployeeActivityType["JobStart"] = 2] = "JobStart";
                EmployeeActivityType[EmployeeActivityType["TeamStop"] = 3] = "TeamStop";
                EmployeeActivityType[EmployeeActivityType["TeamStart"] = 4] = "TeamStart";
                EmployeeActivityType[EmployeeActivityType["BreakFlowStart"] = 5] = "BreakFlowStart";
                EmployeeActivityType[EmployeeActivityType["BreakCancelOne"] = 6] = "BreakCancelOne";
                EmployeeActivityType[EmployeeActivityType["BreakCancelAll"] = 7] = "BreakCancelAll";
                EmployeeActivityType[EmployeeActivityType["BreakFlowStop"] = 8] = "BreakFlowStop";
                EmployeeActivityType[EmployeeActivityType["FinishQuantity"] = 9] = "FinishQuantity";
                EmployeeActivityType[EmployeeActivityType["ClockOut"] = 10] = "ClockOut";
                EmployeeActivityType[EmployeeActivityType["EventCode"] = 11] = "EventCode";
                EmployeeActivityType[EmployeeActivityType["BreakFromWork"] = 12] = "BreakFromWork";
                EmployeeActivityType[EmployeeActivityType["BreakForLunch"] = 13] = "BreakForLunch";
                EmployeeActivityType[EmployeeActivityType["Logbook"] = 14] = "Logbook";
                EmployeeActivityType[EmployeeActivityType["None"] = -1] = "None";
            })(EmployeeActivityType = Entities.EmployeeActivityType || (Entities.EmployeeActivityType = {}));
            var DeliveryPreferenceType;
            (function (DeliveryPreferenceType) {
                DeliveryPreferenceType[DeliveryPreferenceType["None"] = 0] = "None";
                DeliveryPreferenceType[DeliveryPreferenceType["ShipToAddress"] = 1] = "ShipToAddress";
                DeliveryPreferenceType[DeliveryPreferenceType["PickupFromStore"] = 2] = "PickupFromStore";
                DeliveryPreferenceType[DeliveryPreferenceType["ElectronicDelivery"] = 3] = "ElectronicDelivery";
                DeliveryPreferenceType[DeliveryPreferenceType["DeliverItemsIndividually"] = 4] = "DeliverItemsIndividually";
            })(DeliveryPreferenceType = Entities.DeliveryPreferenceType || (Entities.DeliveryPreferenceType = {}));
            var LayoutType;
            (function (LayoutType) {
                LayoutType[LayoutType["None"] = 0] = "None";
                LayoutType[LayoutType["ModernPosCompact"] = 1] = "ModernPosCompact";
                LayoutType[LayoutType["ModernPosFull"] = 2] = "ModernPosFull";
                LayoutType[LayoutType["Epos"] = 3] = "Epos";
            })(LayoutType = Entities.LayoutType || (Entities.LayoutType = {}));
            var SalesInvoiceType;
            (function (SalesInvoiceType) {
                SalesInvoiceType[SalesInvoiceType["Journal"] = 0] = "Journal";
                SalesInvoiceType[SalesInvoiceType["Quotation"] = 1] = "Quotation";
                SalesInvoiceType[SalesInvoiceType["Subscription"] = 2] = "Subscription";
                SalesInvoiceType[SalesInvoiceType["Sales"] = 3] = "Sales";
                SalesInvoiceType[SalesInvoiceType["ReturnItem"] = 4] = "ReturnItem";
                SalesInvoiceType[SalesInvoiceType["Blanket"] = 5] = "Blanket";
                SalesInvoiceType[SalesInvoiceType["ItemRequirements"] = 6] = "ItemRequirements";
            })(SalesInvoiceType = Entities.SalesInvoiceType || (Entities.SalesInvoiceType = {}));
            var InvoiceType;
            (function (InvoiceType) {
                InvoiceType[InvoiceType["None"] = 0] = "None";
                InvoiceType[InvoiceType["SalesOrderInvoice"] = 1] = "SalesOrderInvoice";
                InvoiceType[InvoiceType["FreeTextInvoice"] = 2] = "FreeTextInvoice";
                InvoiceType[InvoiceType["ProjectInvoice"] = 3] = "ProjectInvoice";
                InvoiceType[InvoiceType["CreditNoteInvoice"] = 4] = "CreditNoteInvoice";
                InvoiceType[InvoiceType["FreeTextCreditNoteInvoice"] = 5] = "FreeTextCreditNoteInvoice";
                InvoiceType[InvoiceType["ProjectCreditNoteInvoice"] = 6] = "ProjectCreditNoteInvoice";
            })(InvoiceType = Entities.InvoiceType || (Entities.InvoiceType = {}));
            var TaxOverrideType;
            (function (TaxOverrideType) {
                TaxOverrideType[TaxOverrideType["ItemSalesTaxGroup"] = 0] = "ItemSalesTaxGroup";
                TaxOverrideType[TaxOverrideType["SalesTaxGroup"] = 1] = "SalesTaxGroup";
                TaxOverrideType[TaxOverrideType["None"] = -1] = "None";
            })(TaxOverrideType = Entities.TaxOverrideType || (Entities.TaxOverrideType = {}));
            var TaxOverrideBy;
            (function (TaxOverrideBy) {
                TaxOverrideBy[TaxOverrideBy["Line"] = 0] = "Line";
                TaxOverrideBy[TaxOverrideBy["Cart"] = 1] = "Cart";
                TaxOverrideBy[TaxOverrideBy["None"] = -1] = "None";
            })(TaxOverrideBy = Entities.TaxOverrideBy || (Entities.TaxOverrideBy = {}));
            var RetailOperation;
            (function (RetailOperation) {
                RetailOperation[RetailOperation["None"] = 0] = "None";
                RetailOperation[RetailOperation["ItemSale"] = 100] = "ItemSale";
                RetailOperation[RetailOperation["PriceCheck"] = 101] = "PriceCheck";
                RetailOperation[RetailOperation["VoidItem"] = 102] = "VoidItem";
                RetailOperation[RetailOperation["ItemComment"] = 103] = "ItemComment";
                RetailOperation[RetailOperation["PriceOverride"] = 104] = "PriceOverride";
                RetailOperation[RetailOperation["SetQuantity"] = 105] = "SetQuantity";
                RetailOperation[RetailOperation["ClearQuantity"] = 106] = "ClearQuantity";
                RetailOperation[RetailOperation["ItemSearch"] = 108] = "ItemSearch";
                RetailOperation[RetailOperation["ReturnItem"] = 109] = "ReturnItem";
                RetailOperation[RetailOperation["WeighItem"] = 110] = "WeighItem";
                RetailOperation[RetailOperation["LinkedItemsAdd"] = 112] = "LinkedItemsAdd";
                RetailOperation[RetailOperation["SetDimensions"] = 113] = "SetDimensions";
                RetailOperation[RetailOperation["ReturnTransaction"] = 114] = "ReturnTransaction";
                RetailOperation[RetailOperation["ShowJournal"] = 115] = "ShowJournal";
                RetailOperation[RetailOperation["SetCostPrice"] = 116] = "SetCostPrice";
                RetailOperation[RetailOperation["LoyaltyRequest"] = 117] = "LoyaltyRequest";
                RetailOperation[RetailOperation["ProcessInput"] = 118] = "ProcessInput";
                RetailOperation[RetailOperation["SalespersonBarcode"] = 119] = "SalespersonBarcode";
                RetailOperation[RetailOperation["SalespersonCard"] = 120] = "SalespersonCard";
                RetailOperation[RetailOperation["SalespersonClear"] = 121] = "SalespersonClear";
                RetailOperation[RetailOperation["InvoiceComment"] = 122] = "InvoiceComment";
                RetailOperation[RetailOperation["ChangeUnitOfMeasure"] = 123] = "ChangeUnitOfMeasure";
                RetailOperation[RetailOperation["ItemSaleMultiple"] = 124] = "ItemSaleMultiple";
                RetailOperation[RetailOperation["RFIDSale"] = 125] = "RFIDSale";
                RetailOperation[RetailOperation["SalesHistory"] = 126] = "SalesHistory";
                RetailOperation[RetailOperation["OverrideTaxTransaction"] = 127] = "OverrideTaxTransaction";
                RetailOperation[RetailOperation["OverrideTaxTransactionList"] = 128] = "OverrideTaxTransactionList";
                RetailOperation[RetailOperation["OverrideTaxLine"] = 129] = "OverrideTaxLine";
                RetailOperation[RetailOperation["OverrideTaxLineList"] = 130] = "OverrideTaxLineList";
                RetailOperation[RetailOperation["PackSlip"] = 131] = "PackSlip";
                RetailOperation[RetailOperation["DepositOverride"] = 132] = "DepositOverride";
                RetailOperation[RetailOperation["BuyWarranty"] = 133] = "BuyWarranty";
                RetailOperation[RetailOperation["AddAffiliation"] = 134] = "AddAffiliation";
                RetailOperation[RetailOperation["AddAffiliationFromList"] = 135] = "AddAffiliationFromList";
                RetailOperation[RetailOperation["AddSerialNumber"] = 136] = "AddSerialNumber";
                RetailOperation[RetailOperation["AddAffiliationToCustomer"] = 137] = "AddAffiliationToCustomer";
                RetailOperation[RetailOperation["RemoveAffiliationFromCustomer"] = 138] = "RemoveAffiliationFromCustomer";
                RetailOperation[RetailOperation["ConcludeTransaction"] = 139] = "ConcludeTransaction";
                RetailOperation[RetailOperation["AddLineCharge"] = 140] = "AddLineCharge";
                RetailOperation[RetailOperation["AddHeaderCharge"] = 141] = "AddHeaderCharge";
                RetailOperation[RetailOperation["ManageCharges"] = 142] = "ManageCharges";
                RetailOperation[RetailOperation["RecalculateCharges"] = 143] = "RecalculateCharges";
                RetailOperation[RetailOperation["PayCash"] = 200] = "PayCash";
                RetailOperation[RetailOperation["PayCard"] = 201] = "PayCard";
                RetailOperation[RetailOperation["PayCustomerAccount"] = 202] = "PayCustomerAccount";
                RetailOperation[RetailOperation["PayCurrency"] = 203] = "PayCurrency";
                RetailOperation[RetailOperation["PayCheck"] = 204] = "PayCheck";
                RetailOperation[RetailOperation["PayCashQuick"] = 206] = "PayCashQuick";
                RetailOperation[RetailOperation["PayLoyalty"] = 207] = "PayLoyalty";
                RetailOperation[RetailOperation["PayCorporateCard"] = 208] = "PayCorporateCard";
                RetailOperation[RetailOperation["ChangeBack"] = 210] = "ChangeBack";
                RetailOperation[RetailOperation["VoidPayment"] = 211] = "VoidPayment";
                RetailOperation[RetailOperation["FleetCardInfo"] = 212] = "FleetCardInfo";
                RetailOperation[RetailOperation["PayCreditMemo"] = 213] = "PayCreditMemo";
                RetailOperation[RetailOperation["PayGiftCertificate"] = 214] = "PayGiftCertificate";
                RetailOperation[RetailOperation["CashOutGiftCard"] = 215] = "CashOutGiftCard";
                RetailOperation[RetailOperation["LineDiscountAmount"] = 300] = "LineDiscountAmount";
                RetailOperation[RetailOperation["LineDiscountPercent"] = 301] = "LineDiscountPercent";
                RetailOperation[RetailOperation["TotalDiscountAmount"] = 302] = "TotalDiscountAmount";
                RetailOperation[RetailOperation["TotalDiscountPercent"] = 303] = "TotalDiscountPercent";
                RetailOperation[RetailOperation["DiscountCodeBarcode"] = 304] = "DiscountCodeBarcode";
                RetailOperation[RetailOperation["CalculateFullDiscounts"] = 310] = "CalculateFullDiscounts";
                RetailOperation[RetailOperation["PopupMenu"] = 400] = "PopupMenu";
                RetailOperation[RetailOperation["Submenu"] = 401] = "Submenu";
                RetailOperation[RetailOperation["VoidTransaction"] = 500] = "VoidTransaction";
                RetailOperation[RetailOperation["TransactionComment"] = 501] = "TransactionComment";
                RetailOperation[RetailOperation["SalesPerson"] = 502] = "SalesPerson";
                RetailOperation[RetailOperation["SuspendTransaction"] = 503] = "SuspendTransaction";
                RetailOperation[RetailOperation["RecallTransaction"] = 504] = "RecallTransaction";
                RetailOperation[RetailOperation["RecallUnconcludedTransaction"] = 505] = "RecallUnconcludedTransaction";
                RetailOperation[RetailOperation["CardSwipe"] = 506] = "CardSwipe";
                RetailOperation[RetailOperation["PharmacyPrescriptionAdd"] = 507] = "PharmacyPrescriptionAdd";
                RetailOperation[RetailOperation["PharmacyPrescriptionCancel"] = 508] = "PharmacyPrescriptionCancel";
                RetailOperation[RetailOperation["PharmacyPrescriptionPaid"] = 509] = "PharmacyPrescriptionPaid";
                RetailOperation[RetailOperation["PharmacyPrescriptions"] = 510] = "PharmacyPrescriptions";
                RetailOperation[RetailOperation["IssueCreditMemo"] = 511] = "IssueCreditMemo";
                RetailOperation[RetailOperation["IssueGiftCertificate"] = 512] = "IssueGiftCertificate";
                RetailOperation[RetailOperation["DisplayTotal"] = 513] = "DisplayTotal";
                RetailOperation[RetailOperation["RecallSalesOrder"] = 515] = "RecallSalesOrder";
                RetailOperation[RetailOperation["SalesInvoice"] = 516] = "SalesInvoice";
                RetailOperation[RetailOperation["IncomeAccounts"] = 517] = "IncomeAccounts";
                RetailOperation[RetailOperation["ExpenseAccounts"] = 518] = "ExpenseAccounts";
                RetailOperation[RetailOperation["AddToGiftCard"] = 519] = "AddToGiftCard";
                RetailOperation[RetailOperation["GiftCardBalance"] = 520] = "GiftCardBalance";
                RetailOperation[RetailOperation["LoyaltyCardPointsBalance"] = 521] = "LoyaltyCardPointsBalance";
                RetailOperation[RetailOperation["CashChangerRegisterAmount"] = 550] = "CashChangerRegisterAmount";
                RetailOperation[RetailOperation["CashChangerReset"] = 551] = "CashChangerReset";
                RetailOperation[RetailOperation["CashChangerRegret"] = 552] = "CashChangerRegret";
                RetailOperation[RetailOperation["CashChangerExit"] = 553] = "CashChangerExit";
                RetailOperation[RetailOperation["CashChangerChange"] = 554] = "CashChangerChange";
                RetailOperation[RetailOperation["CashChangerLogOn"] = 555] = "CashChangerLogOn";
                RetailOperation[RetailOperation["CashChangerInit"] = 556] = "CashChangerInit";
                RetailOperation[RetailOperation["SetCustomer"] = 600] = "SetCustomer";
                RetailOperation[RetailOperation["CustomerSearch"] = 602] = "CustomerSearch";
                RetailOperation[RetailOperation["CustomerClear"] = 603] = "CustomerClear";
                RetailOperation[RetailOperation["CustomerCard"] = 604] = "CustomerCard";
                RetailOperation[RetailOperation["CustomerTransactions"] = 609] = "CustomerTransactions";
                RetailOperation[RetailOperation["CustomerTransactionsReport"] = 610] = "CustomerTransactionsReport";
                RetailOperation[RetailOperation["CustomerBalanceReport"] = 611] = "CustomerBalanceReport";
                RetailOperation[RetailOperation["CustomerAdd"] = 612] = "CustomerAdd";
                RetailOperation[RetailOperation["CustomerBarcode"] = 613] = "CustomerBarcode";
                RetailOperation[RetailOperation["EditCustomerOrder"] = 614] = "EditCustomerOrder";
                RetailOperation[RetailOperation["EditQuotation"] = 615] = "EditQuotation";
                RetailOperation[RetailOperation["CreateCustomerOrder"] = 620] = "CreateCustomerOrder";
                RetailOperation[RetailOperation["CreateQuotation"] = 621] = "CreateQuotation";
                RetailOperation[RetailOperation["Search"] = 622] = "Search";
                RetailOperation[RetailOperation["CustomerEdit"] = 623] = "CustomerEdit";
                RetailOperation[RetailOperation["LoyaltyIssueCard"] = 625] = "LoyaltyIssueCard";
                RetailOperation[RetailOperation["RecalculateCustomerOrder"] = 627] = "RecalculateCustomerOrder";
                RetailOperation[RetailOperation["ShipSelectedProducts"] = 629] = "ShipSelectedProducts";
                RetailOperation[RetailOperation["ShipAllProducts"] = 630] = "ShipAllProducts";
                RetailOperation[RetailOperation["PickupSelectedProducts"] = 631] = "PickupSelectedProducts";
                RetailOperation[RetailOperation["PickupAllProducts"] = 632] = "PickupAllProducts";
                RetailOperation[RetailOperation["SetQuotationExpirationDate"] = 633] = "SetQuotationExpirationDate";
                RetailOperation[RetailOperation["PaymentsHistory"] = 634] = "PaymentsHistory";
                RetailOperation[RetailOperation["ReturnChargesOverride"] = 635] = "ReturnChargesOverride";
                RetailOperation[RetailOperation["CreateRetailTransaction"] = 636] = "CreateRetailTransaction";
                RetailOperation[RetailOperation["SetCommissionSalesGroupOnTransaction"] = 637] = "SetCommissionSalesGroupOnTransaction";
                RetailOperation[RetailOperation["SetCommissionSalesGroupOnLine"] = 638] = "SetCommissionSalesGroupOnLine";
                RetailOperation[RetailOperation["ClearCommissionSalesGroupOnTransaction"] = 639] = "ClearCommissionSalesGroupOnTransaction";
                RetailOperation[RetailOperation["ClearCommissionSalesGroupOnLine"] = 640] = "ClearCommissionSalesGroupOnLine";
                RetailOperation[RetailOperation["CarryoutSelectedProducts"] = 641] = "CarryoutSelectedProducts";
                RetailOperation[RetailOperation["CarryoutAllProducts"] = 642] = "CarryoutAllProducts";
                RetailOperation[RetailOperation["AddCoupons"] = 643] = "AddCoupons";
                RetailOperation[RetailOperation["RemoveCoupons"] = 644] = "RemoveCoupons";
                RetailOperation[RetailOperation["LogOn"] = 700] = "LogOn";
                RetailOperation[RetailOperation["LogOff"] = 701] = "LogOff";
                RetailOperation[RetailOperation["ChangeUser"] = 702] = "ChangeUser";
                RetailOperation[RetailOperation["LockTerminal"] = 703] = "LockTerminal";
                RetailOperation[RetailOperation["LogOffForce"] = 704] = "LogOffForce";
                RetailOperation[RetailOperation["EmployeeCard"] = 705] = "EmployeeCard";
                RetailOperation[RetailOperation["EmployeeBarcode"] = 706] = "EmployeeBarcode";
                RetailOperation[RetailOperation["ActivateDevice"] = 707] = "ActivateDevice";
                RetailOperation[RetailOperation["DeactivateDevice"] = 708] = "DeactivateDevice";
                RetailOperation[RetailOperation["ChangeHardwareStation"] = 709] = "ChangeHardwareStation";
                RetailOperation[RetailOperation["PairHardwareStation"] = 710] = "PairHardwareStation";
                RetailOperation[RetailOperation["MassActivateDevice"] = 711] = "MassActivateDevice";
                RetailOperation[RetailOperation["NegativeAdjustment"] = 800] = "NegativeAdjustment";
                RetailOperation[RetailOperation["InventoryLookup"] = 801] = "InventoryLookup";
                RetailOperation[RetailOperation["StockCount"] = 802] = "StockCount";
                RetailOperation[RetailOperation["PickingAndReceiving"] = 803] = "PickingAndReceiving";
                RetailOperation[RetailOperation["ApplicationExit"] = 900] = "ApplicationExit";
                RetailOperation[RetailOperation["PrintTaxFree"] = 906] = "PrintTaxFree";
                RetailOperation[RetailOperation["PrintPreviousSlip"] = 907] = "PrintPreviousSlip";
                RetailOperation[RetailOperation["PrintPreviousInvoice"] = 908] = "PrintPreviousInvoice";
                RetailOperation[RetailOperation["UploadPrinterLogo"] = 909] = "UploadPrinterLogo";
                RetailOperation[RetailOperation["RestartComputer"] = 910] = "RestartComputer";
                RetailOperation[RetailOperation["ShutdownComputer"] = 911] = "ShutdownComputer";
                RetailOperation[RetailOperation["DesignModeEnable"] = 912] = "DesignModeEnable";
                RetailOperation[RetailOperation["DesignModeDisable"] = 913] = "DesignModeDisable";
                RetailOperation[RetailOperation["MinimizePOSWindow"] = 914] = "MinimizePOSWindow";
                RetailOperation[RetailOperation["BlankOperation"] = 915] = "BlankOperation";
                RetailOperation[RetailOperation["WindowsWorkflowOperation"] = 916] = "WindowsWorkflowOperation";
                RetailOperation[RetailOperation["DatabaseConnectionStatus"] = 917] = "DatabaseConnectionStatus";
                RetailOperation[RetailOperation["ShowBlindClosedShifts"] = 918] = "ShowBlindClosedShifts";
                RetailOperation[RetailOperation["ExtendedLogOn"] = 919] = "ExtendedLogOn";
                RetailOperation[RetailOperation["TimeRegistration"] = 920] = "TimeRegistration";
                RetailOperation[RetailOperation["ViewTimeClockEntries"] = 921] = "ViewTimeClockEntries";
                RetailOperation[RetailOperation["ViewProductDetails"] = 922] = "ViewProductDetails";
                RetailOperation[RetailOperation["ViewOrderFulfillmentLines"] = 928] = "ViewOrderFulfillmentLines";
                RetailOperation[RetailOperation["OpenDrawer"] = 1000] = "OpenDrawer";
                RetailOperation[RetailOperation["ViewReport"] = 1003] = "ViewReport";
                RetailOperation[RetailOperation["TenderDeclaration"] = 1052] = "TenderDeclaration";
                RetailOperation[RetailOperation["BlindCloseShift"] = 1053] = "BlindCloseShift";
                RetailOperation[RetailOperation["SuspendShift"] = 1054] = "SuspendShift";
                RetailOperation[RetailOperation["CloseShift"] = 1055] = "CloseShift";
                RetailOperation[RetailOperation["PrintX"] = 1056] = "PrintX";
                RetailOperation[RetailOperation["PrintZ"] = 1057] = "PrintZ";
                RetailOperation[RetailOperation["PrintFiscalX"] = 1058] = "PrintFiscalX";
                RetailOperation[RetailOperation["PrintFiscalZ"] = 1059] = "PrintFiscalZ";
                RetailOperation[RetailOperation["CustomerAccountDeposit"] = 1100] = "CustomerAccountDeposit";
                RetailOperation[RetailOperation["DeclareStartAmount"] = 1200] = "DeclareStartAmount";
                RetailOperation[RetailOperation["FloatEntry"] = 1201] = "FloatEntry";
                RetailOperation[RetailOperation["TenderRemoval"] = 1210] = "TenderRemoval";
                RetailOperation[RetailOperation["SafeDrop"] = 1211] = "SafeDrop";
                RetailOperation[RetailOperation["BankDrop"] = 1212] = "BankDrop";
                RetailOperation[RetailOperation["ShippingAddressSearch"] = 1213] = "ShippingAddressSearch";
                RetailOperation[RetailOperation["ShippingAddressAdd"] = 1214] = "ShippingAddressAdd";
                RetailOperation[RetailOperation["ChangePassword"] = 1215] = "ChangePassword";
                RetailOperation[RetailOperation["ResetPassword"] = 1216] = "ResetPassword";
                RetailOperation[RetailOperation["KitDisassembly"] = 1217] = "KitDisassembly";
                RetailOperation[RetailOperation["ForceUnlockPeripheral"] = 1218] = "ForceUnlockPeripheral";
                RetailOperation[RetailOperation["OpenURL"] = 1219] = "OpenURL";
                RetailOperation[RetailOperation["ManageSafe"] = 1220] = "ManageSafe";
                RetailOperation[RetailOperation["SkipFiscalRegistration"] = 1300] = "SkipFiscalRegistration";
                RetailOperation[RetailOperation["MarkFiscalEventRegistered"] = 1301] = "MarkFiscalEventRegistered";
                RetailOperation[RetailOperation["Invalid"] = 65535] = "Invalid";
            })(RetailOperation = Entities.RetailOperation || (Entities.RetailOperation = {}));
            var ReasonCodeInputRequiredType;
            (function (ReasonCodeInputRequiredType) {
                ReasonCodeInputRequiredType[ReasonCodeInputRequiredType["None"] = 0] = "None";
                ReasonCodeInputRequiredType[ReasonCodeInputRequiredType["Always"] = 1] = "Always";
                ReasonCodeInputRequiredType[ReasonCodeInputRequiredType["Positive"] = 2] = "Positive";
                ReasonCodeInputRequiredType[ReasonCodeInputRequiredType["Negative"] = 3] = "Negative";
            })(ReasonCodeInputRequiredType = Entities.ReasonCodeInputRequiredType || (Entities.ReasonCodeInputRequiredType = {}));
            var RecordingValueType;
            (function (RecordingValueType) {
                RecordingValueType[RecordingValueType["Preferred"] = 0] = "Preferred";
                RecordingValueType[RecordingValueType["Example"] = 1] = "Example";
            })(RecordingValueType = Entities.RecordingValueType || (Entities.RecordingValueType = {}));
            var UserActionType;
            (function (UserActionType) {
                UserActionType[UserActionType["Input"] = 1] = "Input";
                UserActionType[UserActionType["Output"] = 16] = "Output";
                UserActionType[UserActionType["Validation"] = 256] = "Validation";
            })(UserActionType = Entities.UserActionType || (Entities.UserActionType = {}));
            var ArtifactType;
            (function (ArtifactType) {
                ArtifactType[ArtifactType["None"] = 0] = "None";
                ArtifactType[ArtifactType["Ax7Bpm"] = 1] = "Ax7Bpm";
                ArtifactType[ArtifactType["Visio"] = 2] = "Visio";
                ArtifactType[ArtifactType["TaskGuide"] = 3] = "TaskGuide";
                ArtifactType[ArtifactType["Ax6Bpm"] = 4] = "Ax6Bpm";
                ArtifactType[ArtifactType["TaskGuideResources"] = 5] = "TaskGuideResources";
                ArtifactType[ArtifactType["TaskXml"] = 6] = "TaskXml";
                ArtifactType[ArtifactType["VideoWma"] = 7] = "VideoWma";
                ArtifactType[ArtifactType["ProcessXml"] = 8] = "ProcessXml";
                ArtifactType[ArtifactType["Trace"] = 9] = "Trace";
                ArtifactType[ArtifactType["RapidStartXml"] = 10] = "RapidStartXml";
                ArtifactType[ArtifactType["UserDrawing"] = 100] = "UserDrawing";
            })(ArtifactType = Entities.ArtifactType || (Entities.ArtifactType = {}));
            var FrameworkAccess;
            (function (FrameworkAccess) {
                FrameworkAccess[FrameworkAccess["None"] = 0] = "None";
                FrameworkAccess[FrameworkAccess["Global"] = 1] = "Global";
                FrameworkAccess[FrameworkAccess["Corporate"] = 2] = "Corporate";
                FrameworkAccess[FrameworkAccess["Private"] = 3] = "Private";
                FrameworkAccess[FrameworkAccess["BoxPackage"] = 4] = "BoxPackage";
            })(FrameworkAccess = Entities.FrameworkAccess || (Entities.FrameworkAccess = {}));
            var MetadataControl;
            (function (MetadataControl) {
                MetadataControl[MetadataControl["None"] = 0] = "None";
                MetadataControl[MetadataControl["SingleValue"] = 1] = "SingleValue";
                MetadataControl[MetadataControl["MultiValue"] = 2] = "MultiValue";
                MetadataControl[MetadataControl["Tags"] = 3] = "Tags";
                MetadataControl[MetadataControl["Links"] = 4] = "Links";
                MetadataControl[MetadataControl["ComboBox"] = 5] = "ComboBox";
                MetadataControl[MetadataControl["MultiSelect"] = 6] = "MultiSelect";
            })(MetadataControl = Entities.MetadataControl || (Entities.MetadataControl = {}));
            var FiscalIntegrationRegistrationStatus;
            (function (FiscalIntegrationRegistrationStatus) {
                FiscalIntegrationRegistrationStatus[FiscalIntegrationRegistrationStatus["None"] = 0] = "None";
                FiscalIntegrationRegistrationStatus[FiscalIntegrationRegistrationStatus["Completed"] = 1] = "Completed";
                FiscalIntegrationRegistrationStatus[FiscalIntegrationRegistrationStatus["Skipped"] = 2] = "Skipped";
                FiscalIntegrationRegistrationStatus[FiscalIntegrationRegistrationStatus["MarkedAsRegistered"] = 3] = "MarkedAsRegistered";
            })(FiscalIntegrationRegistrationStatus = Entities.FiscalIntegrationRegistrationStatus || (Entities.FiscalIntegrationRegistrationStatus = {}));
            var CartType;
            (function (CartType) {
                CartType[CartType["None"] = 0] = "None";
                CartType[CartType["Shopping"] = 1] = "Shopping";
                CartType[CartType["Checkout"] = 2] = "Checkout";
                CartType[CartType["CustomerOrder"] = 3] = "CustomerOrder";
                CartType[CartType["IncomeExpense"] = 4] = "IncomeExpense";
                CartType[CartType["AccountDeposit"] = 5] = "AccountDeposit";
            })(CartType = Entities.CartType || (Entities.CartType = {}));
            var CustomerOrderMode;
            (function (CustomerOrderMode) {
                CustomerOrderMode[CustomerOrderMode["None"] = 0] = "None";
                CustomerOrderMode[CustomerOrderMode["CustomerOrderCreateOrEdit"] = 1] = "CustomerOrderCreateOrEdit";
                CustomerOrderMode[CustomerOrderMode["OrderRecalled"] = 2] = "OrderRecalled";
                CustomerOrderMode[CustomerOrderMode["Pickup"] = 3] = "Pickup";
                CustomerOrderMode[CustomerOrderMode["Return"] = 4] = "Return";
                CustomerOrderMode[CustomerOrderMode["Cancellation"] = 5] = "Cancellation";
                CustomerOrderMode[CustomerOrderMode["QuoteCreateOrEdit"] = 6] = "QuoteCreateOrEdit";
            })(CustomerOrderMode = Entities.CustomerOrderMode || (Entities.CustomerOrderMode = {}));
            var CartStatus;
            (function (CartStatus) {
                CartStatus[CartStatus["None"] = 0] = "None";
                CartStatus[CartStatus["Created"] = 1] = "Created";
                CartStatus[CartStatus["Suspended"] = 2] = "Suspended";
                CartStatus[CartStatus["Voided"] = 3] = "Voided";
            })(CartStatus = Entities.CartStatus || (Entities.CartStatus = {}));
            var CustomerType;
            (function (CustomerType) {
                CustomerType[CustomerType["None"] = 0] = "None";
                CustomerType[CustomerType["Person"] = 1] = "Person";
                CustomerType[CustomerType["Organization"] = 2] = "Organization";
            })(CustomerType = Entities.CustomerType || (Entities.CustomerType = {}));
            var DocumentStatus;
            (function (DocumentStatus) {
                DocumentStatus[DocumentStatus["None"] = 0] = "None";
                DocumentStatus[DocumentStatus["Quotation"] = 1] = "Quotation";
                DocumentStatus[DocumentStatus["PurchaseOrder"] = 2] = "PurchaseOrder";
                DocumentStatus[DocumentStatus["Confirmation"] = 3] = "Confirmation";
                DocumentStatus[DocumentStatus["PickingList"] = 4] = "PickingList";
                DocumentStatus[DocumentStatus["PackingSlip"] = 5] = "PackingSlip";
                DocumentStatus[DocumentStatus["ReceiptsList"] = 6] = "ReceiptsList";
                DocumentStatus[DocumentStatus["Invoice"] = 7] = "Invoice";
                DocumentStatus[DocumentStatus["ApproveJournal"] = 8] = "ApproveJournal";
                DocumentStatus[DocumentStatus["ProjectInvoice"] = 9] = "ProjectInvoice";
                DocumentStatus[DocumentStatus["ProjectPackingSlip"] = 10] = "ProjectPackingSlip";
                DocumentStatus[DocumentStatus["CRMQuotation"] = 11] = "CRMQuotation";
                DocumentStatus[DocumentStatus["Lost"] = 12] = "Lost";
                DocumentStatus[DocumentStatus["Canceled"] = 13] = "Canceled";
                DocumentStatus[DocumentStatus["FreeTextInvoice"] = 14] = "FreeTextInvoice";
                DocumentStatus[DocumentStatus["RFQ"] = 15] = "RFQ";
                DocumentStatus[DocumentStatus["RFQAccept"] = 16] = "RFQAccept";
                DocumentStatus[DocumentStatus["RFQReject"] = 17] = "RFQReject";
                DocumentStatus[DocumentStatus["PurchaseRequest"] = 18] = "PurchaseRequest";
                DocumentStatus[DocumentStatus["RFQResend"] = 19] = "RFQResend";
            })(DocumentStatus = Entities.DocumentStatus || (Entities.DocumentStatus = {}));
            var CustomerOrderType;
            (function (CustomerOrderType) {
                CustomerOrderType[CustomerOrderType["SalesOrder"] = 0] = "SalesOrder";
                CustomerOrderType[CustomerOrderType["Quote"] = 1] = "Quote";
            })(CustomerOrderType = Entities.CustomerOrderType || (Entities.CustomerOrderType = {}));
            var LineDiscountCalculationType;
            (function (LineDiscountCalculationType) {
                LineDiscountCalculationType[LineDiscountCalculationType["Line"] = 0] = "Line";
                LineDiscountCalculationType[LineDiscountCalculationType["Multiline"] = 1] = "Multiline";
                LineDiscountCalculationType[LineDiscountCalculationType["MaxLineMultiline"] = 2] = "MaxLineMultiline";
                LineDiscountCalculationType[LineDiscountCalculationType["MinLineMultiline"] = 3] = "MinLineMultiline";
                LineDiscountCalculationType[LineDiscountCalculationType["LinePlusMultiline"] = 4] = "LinePlusMultiline";
                LineDiscountCalculationType[LineDiscountCalculationType["LineMultiplyMultiline"] = 5] = "LineMultiplyMultiline";
            })(LineDiscountCalculationType = Entities.LineDiscountCalculationType || (Entities.LineDiscountCalculationType = {}));
            var TaxCalculationType;
            (function (TaxCalculationType) {
                TaxCalculationType[TaxCalculationType["Regular"] = 0] = "Regular";
                TaxCalculationType[TaxCalculationType["GTE"] = 1] = "GTE";
            })(TaxCalculationType = Entities.TaxCalculationType || (Entities.TaxCalculationType = {}));
            var ShiftStatus;
            (function (ShiftStatus) {
                ShiftStatus[ShiftStatus["None"] = 0] = "None";
                ShiftStatus[ShiftStatus["Open"] = 1] = "Open";
                ShiftStatus[ShiftStatus["Closed"] = 2] = "Closed";
                ShiftStatus[ShiftStatus["BlindClosed"] = 3] = "BlindClosed";
                ShiftStatus[ShiftStatus["Suspended"] = 4] = "Suspended";
                ShiftStatus[ShiftStatus["Invalid"] = 5] = "Invalid";
            })(ShiftStatus = Entities.ShiftStatus || (Entities.ShiftStatus = {}));
            var CommerceListType;
            (function (CommerceListType) {
                CommerceListType[CommerceListType["None"] = 0] = "None";
                CommerceListType[CommerceListType["WishList"] = 1] = "WishList";
            })(CommerceListType = Entities.CommerceListType || (Entities.CommerceListType = {}));
            var PurchaseTransferOrderType;
            (function (PurchaseTransferOrderType) {
                PurchaseTransferOrderType[PurchaseTransferOrderType["Unknown"] = 0] = "Unknown";
                PurchaseTransferOrderType[PurchaseTransferOrderType["PurchaseOrder"] = 1] = "PurchaseOrder";
                PurchaseTransferOrderType[PurchaseTransferOrderType["TransferIn"] = 2] = "TransferIn";
                PurchaseTransferOrderType[PurchaseTransferOrderType["TransferOut"] = 3] = "TransferOut";
                PurchaseTransferOrderType[PurchaseTransferOrderType["TransferOrder"] = 4] = "TransferOrder";
                PurchaseTransferOrderType[PurchaseTransferOrderType["PickingList"] = 5] = "PickingList";
            })(PurchaseTransferOrderType = Entities.PurchaseTransferOrderType || (Entities.PurchaseTransferOrderType = {}));
            var DownloadSessionStatus;
            (function (DownloadSessionStatus) {
                DownloadSessionStatus[DownloadSessionStatus["Started"] = 0] = "Started";
                DownloadSessionStatus[DownloadSessionStatus["Available"] = 1] = "Available";
                DownloadSessionStatus[DownloadSessionStatus["Requested"] = 2] = "Requested";
                DownloadSessionStatus[DownloadSessionStatus["Downloaded"] = 3] = "Downloaded";
                DownloadSessionStatus[DownloadSessionStatus["Applied"] = 4] = "Applied";
                DownloadSessionStatus[DownloadSessionStatus["Canceled"] = 5] = "Canceled";
                DownloadSessionStatus[DownloadSessionStatus["CreateFailed"] = 6] = "CreateFailed";
                DownloadSessionStatus[DownloadSessionStatus["DownloadFailed"] = 7] = "DownloadFailed";
                DownloadSessionStatus[DownloadSessionStatus["ApplyFailed"] = 8] = "ApplyFailed";
            })(DownloadSessionStatus = Entities.DownloadSessionStatus || (Entities.DownloadSessionStatus = {}));
            var HardwareStationType;
            (function (HardwareStationType) {
                HardwareStationType[HardwareStationType["None"] = 0] = "None";
                HardwareStationType[HardwareStationType["Shared"] = 1] = "Shared";
                HardwareStationType[HardwareStationType["Dedicated"] = 2] = "Dedicated";
            })(HardwareStationType = Entities.HardwareStationType || (Entities.HardwareStationType = {}));
            var AuditEventUploadType;
            (function (AuditEventUploadType) {
                AuditEventUploadType[AuditEventUploadType["Async"] = 0] = "Async";
                AuditEventUploadType[AuditEventUploadType["RealTime"] = 1] = "RealTime";
            })(AuditEventUploadType = Entities.AuditEventUploadType || (Entities.AuditEventUploadType = {}));
            var AuditEventType;
            (function (AuditEventType) {
                AuditEventType[AuditEventType["Unknown"] = 0] = "Unknown";
                AuditEventType[AuditEventType["UserLogOn"] = 1] = "UserLogOn";
                AuditEventType[AuditEventType["UserLogOff"] = 2] = "UserLogOff";
                AuditEventType[AuditEventType["ManagerOverride"] = 3] = "ManagerOverride";
                AuditEventType[AuditEventType["ItemVoid"] = 4] = "ItemVoid";
                AuditEventType[AuditEventType["TransactionVoid"] = 5] = "TransactionVoid";
                AuditEventType[AuditEventType["PrintReceiptCopy"] = 6] = "PrintReceiptCopy";
                AuditEventType[AuditEventType["PriceCheck"] = 7] = "PriceCheck";
                AuditEventType[AuditEventType["TaxOverride"] = 8] = "TaxOverride";
                AuditEventType[AuditEventType["QuantityCorrection"] = 9] = "QuantityCorrection";
                AuditEventType[AuditEventType["PurgeTransactionsData"] = 10] = "PurgeTransactionsData";
            })(AuditEventType = Entities.AuditEventType || (Entities.AuditEventType = {}));
            var AuditLogTraceLevel;
            (function (AuditLogTraceLevel) {
                AuditLogTraceLevel[AuditLogTraceLevel["Trace"] = 0] = "Trace";
                AuditLogTraceLevel[AuditLogTraceLevel["Debug"] = 1] = "Debug";
                AuditLogTraceLevel[AuditLogTraceLevel["Error"] = 2] = "Error";
            })(AuditLogTraceLevel = Entities.AuditLogTraceLevel || (Entities.AuditLogTraceLevel = {}));
            var FiscalIntegrationEventType;
            (function (FiscalIntegrationEventType) {
                FiscalIntegrationEventType[FiscalIntegrationEventType["None"] = 0] = "None";
                FiscalIntegrationEventType[FiscalIntegrationEventType["Sale"] = 1] = "Sale";
                FiscalIntegrationEventType[FiscalIntegrationEventType["PrintReceiptCopy"] = 2] = "PrintReceiptCopy";
                FiscalIntegrationEventType[FiscalIntegrationEventType["ZReport"] = 3] = "ZReport";
                FiscalIntegrationEventType[FiscalIntegrationEventType["XReport"] = 4] = "XReport";
                FiscalIntegrationEventType[FiscalIntegrationEventType["CloseShift"] = 5] = "CloseShift";
                FiscalIntegrationEventType[FiscalIntegrationEventType["BankDrop"] = 6] = "BankDrop";
                FiscalIntegrationEventType[FiscalIntegrationEventType["TenderDeclaration"] = 7] = "TenderDeclaration";
                FiscalIntegrationEventType[FiscalIntegrationEventType["RemoveTender"] = 8] = "RemoveTender";
                FiscalIntegrationEventType[FiscalIntegrationEventType["FloatEntry"] = 9] = "FloatEntry";
                FiscalIntegrationEventType[FiscalIntegrationEventType["SafeDrop"] = 10] = "SafeDrop";
                FiscalIntegrationEventType[FiscalIntegrationEventType["StartingAmount"] = 11] = "StartingAmount";
                FiscalIntegrationEventType[FiscalIntegrationEventType["PackingSlip"] = 12] = "PackingSlip";
                FiscalIntegrationEventType[FiscalIntegrationEventType["GiftReceipt"] = 13] = "GiftReceipt";
                FiscalIntegrationEventType[FiscalIntegrationEventType["CustomerAccountDeposit"] = 14] = "CustomerAccountDeposit";
                FiscalIntegrationEventType[FiscalIntegrationEventType["CreditMemo"] = 15] = "CreditMemo";
                FiscalIntegrationEventType[FiscalIntegrationEventType["EditCustomerOrder"] = 16] = "EditCustomerOrder";
                FiscalIntegrationEventType[FiscalIntegrationEventType["CreateCustomerOrder"] = 17] = "CreateCustomerOrder";
                FiscalIntegrationEventType[FiscalIntegrationEventType["DepositOverride"] = 18] = "DepositOverride";
                FiscalIntegrationEventType[FiscalIntegrationEventType["FiscalXReport"] = 19] = "FiscalXReport";
                FiscalIntegrationEventType[FiscalIntegrationEventType["FiscalZReport"] = 20] = "FiscalZReport";
                FiscalIntegrationEventType[FiscalIntegrationEventType["AuditEvent"] = 21] = "AuditEvent";
                FiscalIntegrationEventType[FiscalIntegrationEventType["OpenDrawer"] = 22] = "OpenDrawer";
                FiscalIntegrationEventType[FiscalIntegrationEventType["CancelCustomerOrder"] = 23] = "CancelCustomerOrder";
            })(FiscalIntegrationEventType = Entities.FiscalIntegrationEventType || (Entities.FiscalIntegrationEventType = {}));
            var FiscalIntegrationDocumentGenerationResultType;
            (function (FiscalIntegrationDocumentGenerationResultType) {
                FiscalIntegrationDocumentGenerationResultType[FiscalIntegrationDocumentGenerationResultType["None"] = 0] = "None";
                FiscalIntegrationDocumentGenerationResultType[FiscalIntegrationDocumentGenerationResultType["Succeeded"] = 1] = "Succeeded";
                FiscalIntegrationDocumentGenerationResultType[FiscalIntegrationDocumentGenerationResultType["NotSupported"] = 2] = "NotSupported";
                FiscalIntegrationDocumentGenerationResultType[FiscalIntegrationDocumentGenerationResultType["NotRequired"] = 3] = "NotRequired";
                FiscalIntegrationDocumentGenerationResultType[FiscalIntegrationDocumentGenerationResultType["Failed"] = 4] = "Failed";
            })(FiscalIntegrationDocumentGenerationResultType = Entities.FiscalIntegrationDocumentGenerationResultType || (Entities.FiscalIntegrationDocumentGenerationResultType = {}));
            var AttachedServiceStatus;
            (function (AttachedServiceStatus) {
                AttachedServiceStatus[AttachedServiceStatus["None"] = 0] = "None";
                AttachedServiceStatus[AttachedServiceStatus["Disabled"] = 1] = "Disabled";
                AttachedServiceStatus[AttachedServiceStatus["InProgress"] = 2] = "InProgress";
                AttachedServiceStatus[AttachedServiceStatus["Enabled"] = 3] = "Enabled";
                AttachedServiceStatus[AttachedServiceStatus["Submitted"] = 4] = "Submitted";
            })(AttachedServiceStatus = Entities.AttachedServiceStatus || (Entities.AttachedServiceStatus = {}));
            var CommunicationErrors;
            (function (CommunicationErrors) {
                CommunicationErrors[CommunicationErrors["None"] = 0] = "None";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_HeadquarterResponseParsingError"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_HeadquarterResponseParsingError";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_AggregateCommunicationError"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_AggregateCommunicationError";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_ExternalProviderError"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_ExternalProviderError";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceTimeOut"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceTimeOut";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceException"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceException";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceAuthenticationFailedFault"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceAuthenticationFailedFault";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceForbiddenFault"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceForbiddenFault";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceSenderFault"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceSenderFault";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidS2SClientId"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_InvalidS2SClientId";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidS2SSecret"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_InvalidS2SSecret";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidS2STenant"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_InvalidS2STenant";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidS2SApplicationName"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_InvalidS2SApplicationName";
                CommunicationErrors[CommunicationErrors["Microsoft_Dynamics_Commerce_Runtime_TransactionServiceLoyaltySenderFault"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_TransactionServiceLoyaltySenderFault";
            })(CommunicationErrors = Entities.CommunicationErrors || (Entities.CommunicationErrors = {}));
            var ConfigurationErrors;
            (function (ConfigurationErrors) {
                ConfigurationErrors[ConfigurationErrors["None"] = 0] = "None";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingNotFound"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationKeyFormat"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationKeyFormat";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_ApplicationCompositionFailed"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_ApplicationCompositionFailed";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidChannelConfiguration"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_InvalidChannelConfiguration";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidPipelineConfiguration"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_InvalidPipelineConfiguration";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidProviderConfiguration"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_InvalidProviderConfiguration";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryPreferences"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryPreferences";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindConfigForTenderType"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindConfigForTenderType";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_ConnectionIsNotOverridden"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_ConnectionIsNotOverridden";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentConnectorNotFound"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_PaymentConnectorNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceConfigurationNotFound"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_DeviceConfigurationNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_HardwareProfileNotFound"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_HardwareProfileNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_LayoutNotFound"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_LayoutNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_VersionedEdmResourceFileNotFound"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_VersionedEdmResourceFileNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_RetailServerConfigurationNotFound"] = 16] = "Microsoft_Dynamics_Commerce_Runtime_RetailServerConfigurationNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_RetailServerCertificateNotFound"] = 17] = "Microsoft_Dynamics_Commerce_Runtime_RetailServerCertificateNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_ActivatedDeviceMissingTokenIssueDatetime"] = 18] = "Microsoft_Dynamics_Commerce_Runtime_ActivatedDeviceMissingTokenIssueDatetime";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_LCSLibrariesNotConfigured"] = 19] = "Microsoft_Dynamics_Commerce_Runtime_LCSLibrariesNotConfigured";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_UnknownRequestResponsePair"] = 20] = "Microsoft_Dynamics_Commerce_Runtime_UnknownRequestResponsePair";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_ProductRecommendationsDisabled"] = 21] = "Microsoft_Dynamics_Commerce_Runtime_ProductRecommendationsDisabled";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveRecommendationServiceCredentials"] = 22] = "Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveRecommendationServiceCredentials";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_CommerceIssuerNotFound"] = 23] = "Microsoft_Dynamics_Commerce_Runtime_CommerceIssuerNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_SecretProviderNotAvailable"] = 24] = "Microsoft_Dynamics_Commerce_Runtime_SecretProviderNotAvailable";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_SecretNotFound"] = 25] = "Microsoft_Dynamics_Commerce_Runtime_SecretNotFound";
                ConfigurationErrors[ConfigurationErrors["Microsoft_Dynamics_Commerce_Runtime_NotValidProfilesConfiguration"] = 26] = "Microsoft_Dynamics_Commerce_Runtime_NotValidProfilesConfiguration";
            })(ConfigurationErrors = Entities.ConfigurationErrors || (Entities.ConfigurationErrors = {}));
            var DataValidationErrors;
            (function (DataValidationErrors) {
                DataValidationErrors[DataValidationErrors["None"] = 0] = "None";
                DataValidationErrors[DataValidationErrors["RegexAttribute_ValidationError"] = 1] = "RegexAttribute_ValidationError";
                DataValidationErrors[DataValidationErrors["RequiredAttribute_ValidationError"] = 2] = "RequiredAttribute_ValidationError";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AuthenticationGrantTypeNotSupported"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_AuthenticationGrantTypeNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_LoyaltyCardNotFound"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_LoyaltyCardNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ProductMasterPageRequired"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_ProductMasterPageRequired";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RequiredValueNotFound"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_RequiredValueNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowed"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RemoteProductsNotSupportedWithCurrentTransactionType"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_RemoteProductsNotSupportedWithCurrentTransactionType";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountIsBlocked"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountIsBlocked";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerInvoiceAccountIsBlocked"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_CustomerInvoiceAccountIsBlocked";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ProductIsNotActive"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_ProductIsNotActive";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ProductIsBlocked"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_ProductIsBlocked";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ValueOutOfRange"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_ValueOutOfRange";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ObjectNotFound"] = 16] = "Microsoft_Dynamics_Commerce_Runtime_ObjectNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DuplicateObject"] = 17] = "Microsoft_Dynamics_Commerce_Runtime_DuplicateObject";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidFormat"] = 18] = "Microsoft_Dynamics_Commerce_Runtime_InvalidFormat";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MissingStockCountTransactions"] = 19] = "Microsoft_Dynamics_Commerce_Runtime_MissingStockCountTransactions";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MissingParameter"] = 20] = "Microsoft_Dynamics_Commerce_Runtime_MissingParameter";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidProductDimensionCombinations"] = 21] = "Microsoft_Dynamics_Commerce_Runtime_InvalidProductDimensionCombinations";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_EmployeeDiscountExceeded"] = 22] = "Microsoft_Dynamics_Commerce_Runtime_EmployeeDiscountExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_EmployeeDetailsNotFound"] = 23] = "Microsoft_Dynamics_Commerce_Runtime_EmployeeDetailsNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_BarcodeNotFound"] = 24] = "Microsoft_Dynamics_Commerce_Runtime_BarcodeNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerNotFound"] = 25] = "Microsoft_Dynamics_Commerce_Runtime_CustomerNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ExistingCustomerAlreadyMappedToExternalIdentity"] = 26] = "Microsoft_Dynamics_Commerce_Runtime_ExistingCustomerAlreadyMappedToExternalIdentity";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnsupportedLanguage"] = 27] = "Microsoft_Dynamics_Commerce_Runtime_UnsupportedLanguage";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnknownRequest"] = 28] = "Microsoft_Dynamics_Commerce_Runtime_UnknownRequest";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnSupportedType"] = 29] = "Microsoft_Dynamics_Commerce_Runtime_UnSupportedType";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AggregateValidationError"] = 30] = "Microsoft_Dynamics_Commerce_Runtime_AggregateValidationError";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IdMismatch"] = 31] = "Microsoft_Dynamics_Commerce_Runtime_IdMismatch";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidRequest"] = 32] = "Microsoft_Dynamics_Commerce_Runtime_InvalidRequest";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeLineDiscountsNotAllowed"] = 33] = "Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeLineDiscountsNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeTotalDiscountsNotAllowed"] = 34] = "Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeTotalDiscountsNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseAccountsInSameCart"] = 35] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseAccountsInSameCart";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowDiscounts"] = 36] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowDiscounts";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowSalesLine"] = 37] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowSalesLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowCustomer"] = 38] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowCustomer";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowGiftCardLine"] = 39] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowGiftCardLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseLineDoesNotAllowSettingTransactionStatus"] = 40] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseLineDoesNotAllowSettingTransactionStatus";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowAffiliation"] = 41] = "Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowAffiliation";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InsufficientQuantityAvailable"] = 42] = "Microsoft_Dynamics_Commerce_Runtime_InsufficientQuantityAvailable";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidUnitOfMeasure"] = 43] = "Microsoft_Dynamics_Commerce_Runtime_InvalidUnitOfMeasure";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnitOfMeasureConversionNotFound"] = 44] = "Microsoft_Dynamics_Commerce_Runtime_UnitOfMeasureConversionNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryMode"] = 45] = "Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryMode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DeliveryModeMissing"] = 46] = "Microsoft_Dynamics_Commerce_Runtime_DeliveryModeMissing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidEmailAddress"] = 47] = "Microsoft_Dynamics_Commerce_Runtime_InvalidEmailAddress";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryPreferenceType"] = 48] = "Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryPreferenceType";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidShippingAddress"] = 49] = "Microsoft_Dynamics_Commerce_Runtime_InvalidShippingAddress";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCountryRegion"] = 50] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCountryRegion";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidStateProvince"] = 51] = "Microsoft_Dynamics_Commerce_Runtime_InvalidStateProvince";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCounty"] = 52] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCounty";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCity"] = 53] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCity";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidDistrict"] = 54] = "Microsoft_Dynamics_Commerce_Runtime_InvalidDistrict";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidZipPostalCode"] = 55] = "Microsoft_Dynamics_Commerce_Runtime_InvalidZipPostalCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAddress"] = 56] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAddress";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidShippingDate"] = 57] = "Microsoft_Dynamics_Commerce_Runtime_InvalidShippingDate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DiscountAmountInvalidated"] = 58] = "Microsoft_Dynamics_Commerce_Runtime_DiscountAmountInvalidated";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidPriceEncountered"] = 59] = "Microsoft_Dynamics_Commerce_Runtime_InvalidPriceEncountered";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ItemDiscontinuedFromChannel"] = 60] = "Microsoft_Dynamics_Commerce_Runtime_ItemDiscontinuedFromChannel";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DiscontinuedProductsRemovedFromCart"] = 61] = "Microsoft_Dynamics_Commerce_Runtime_DiscontinuedProductsRemovedFromCart";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_GrossWeightForItemNotFound"] = 62] = "Microsoft_Dynamics_Commerce_Runtime_GrossWeightForItemNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ListingIdNotFound"] = 63] = "Microsoft_Dynamics_Commerce_Runtime_ListingIdNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RequiredReasonCodesMissing"] = 64] = "Microsoft_Dynamics_Commerce_Runtime_RequiredReasonCodesMissing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CartNotActive"] = 65] = "Microsoft_Dynamics_Commerce_Runtime_CartNotActive";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidStatus"] = 66] = "Microsoft_Dynamics_Commerce_Runtime_InvalidStatus";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_VoidTransactionContainsTenderedLines"] = 67] = "Microsoft_Dynamics_Commerce_Runtime_VoidTransactionContainsTenderedLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForVoidProducts"] = 68] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForVoidProducts";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturn"] = 69] = "Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturn";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptTemplate"] = 70] = "Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptTemplate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptItem"] = 71] = "Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptItem";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ItemIdBarcodeMissing"] = 72] = "Microsoft_Dynamics_Commerce_Runtime_ItemIdBarcodeMissing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultipleItemsForItemId"] = 73] = "Microsoft_Dynamics_Commerce_Runtime_MultipleItemsForItemId";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeChange"] = 74] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeChange";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForReturnTransaction"] = 75] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForReturnTransaction";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForAddCartLine"] = 76] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForAddCartLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotAddProductHavingRefundChargeAmount"] = 77] = "Microsoft_Dynamics_Commerce_Runtime_CannotAddProductHavingRefundChargeAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotChangeCustomerIdWhenEditingCustomerOrder"] = 78] = "Microsoft_Dynamics_Commerce_Runtime_CannotChangeCustomerIdWhenEditingCustomerOrder";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveAnyPayment"] = 79] = "Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveAnyPayment";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_QuoteMustHaveValidQuotationExpiryDate"] = 80] = "Microsoft_Dynamics_Commerce_Runtime_QuoteMustHaveValidQuotationExpiryDate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveDepositOverride"] = 81] = "Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveDepositOverride";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DepositMustBeGreaterThanZero"] = 82] = "Microsoft_Dynamics_Commerce_Runtime_DepositMustBeGreaterThanZero";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanTotalAmount"] = 83] = "Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanTotalAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanMaximumOverrideAmount"] = 84] = "Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanMaximumOverrideAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidPickupDepositOverrideAmount"] = 85] = "Microsoft_Dynamics_Commerce_Runtime_InvalidPickupDepositOverrideAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_OrderWasNotCreatedWithDepositOverride"] = 86] = "Microsoft_Dynamics_Commerce_Runtime_OrderWasNotCreatedWithDepositOverride";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeChanged"] = 87] = "Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeChanged";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeCleared"] = 88] = "Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeCleared";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AmountDueMustBePaidBeforeCheckout"] = 89] = "Microsoft_Dynamics_Commerce_Runtime_AmountDueMustBePaidBeforeCheckout";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DiscountMustBeCalculatedBeforeCheckout"] = 90] = "Microsoft_Dynamics_Commerce_Runtime_DiscountMustBeCalculatedBeforeCheckout";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_TotalsMustBeCalculatedBeforeCheckout"] = 91] = "Microsoft_Dynamics_Commerce_Runtime_TotalsMustBeCalculatedBeforeCheckout";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_IncorrectPaymentAmountSign"] = 92] = "Microsoft_Dynamics_Commerce_Runtime_IncorrectPaymentAmountSign";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerLine"] = 93] = "Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerLine"] = 94] = "Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerTransaction"] = 95] = "Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerTransaction";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerTransaction"] = 96] = "Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerTransaction";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ChangebackIsNotAllowed"] = 97] = "Microsoft_Dynamics_Commerce_Runtime_ChangebackIsNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_OvertenderAmountExceedsMaximumAllowedValue"] = 98] = "Microsoft_Dynamics_Commerce_Runtime_OvertenderAmountExceedsMaximumAllowedValue";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_BalanceAmountExceedsMaximumAllowedValue"] = 99] = "Microsoft_Dynamics_Commerce_Runtime_BalanceAmountExceedsMaximumAllowedValue";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentMustBeUsedToFinalizeTransaction"] = 100] = "Microsoft_Dynamics_Commerce_Runtime_PaymentMustBeUsedToFinalizeTransaction";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindListing"] = 101] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindListing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindEmployeeActivityBreakCategory"] = 102] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindEmployeeActivityBreakCategory";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToFindVariant"] = 103] = "Microsoft_Dynamics_Commerce_Runtime_UnableToFindVariant";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidStoreNumber"] = 104] = "Microsoft_Dynamics_Commerce_Runtime_InvalidStoreNumber";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SalesLineMustHavePickupDeliveryMode"] = 105] = "Microsoft_Dynamics_Commerce_Runtime_SalesLineMustHavePickupDeliveryMode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToPickupMoreThanQtyRemaining"] = 106] = "Microsoft_Dynamics_Commerce_Runtime_UnableToPickupMoreThanQtyRemaining";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryCharge"] = 107] = "Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryCharge";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CurrencyConversionFailed"] = 108] = "Microsoft_Dynamics_Commerce_Runtime_CurrencyConversionFailed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CurrencyChannelOrderMismatch"] = 109] = "Microsoft_Dynamics_Commerce_Runtime_CurrencyChannelOrderMismatch";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CurrencyNotFound"] = 110] = "Microsoft_Dynamics_Commerce_Runtime_CurrencyNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCancellationCharge"] = 111] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCancellationCharge";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ChargeNotConfiguredOnHeadquarters"] = 112] = "Microsoft_Dynamics_Commerce_Runtime_ChargeNotConfiguredOnHeadquarters";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundCannotBePositive"] = 113] = "Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundCannotBePositive";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundIsNotAllowed"] = 114] = "Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundIsNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotApplyHeaderChargesWhenShippingRefundAppliedOnCartLines"] = 115] = "Microsoft_Dynamics_Commerce_Runtime_CannotApplyHeaderChargesWhenShippingRefundAppliedOnCartLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotApplyRefundChargeOnProductForSale"] = 116] = "Microsoft_Dynamics_Commerce_Runtime_CannotApplyRefundChargeOnProductForSale";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PickupModeOfDeliveryNotConfiguredOnHeadquarters"] = 117] = "Microsoft_Dynamics_Commerce_Runtime_PickupModeOfDeliveryNotConfiguredOnHeadquarters";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissing"] = 118] = "Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SerialNumberCannotBeChanged"] = 119] = "Microsoft_Dynamics_Commerce_Runtime_SerialNumberCannotBeChanged";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissingInCustomerOrder"] = 120] = "Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissingInCustomerOrder";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SerializedQuantityGreaterThanOne"] = 121] = "Microsoft_Dynamics_Commerce_Runtime_SerializedQuantityGreaterThanOne";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultipleCreditCardPaymentNotSupported"] = 122] = "Microsoft_Dynamics_Commerce_Runtime_MultipleCreditCardPaymentNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCardExpirationDate"] = 123] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCardExpirationDate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderMissing"] = 124] = "Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderMissing";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NotAllLinesSaved"] = 125] = "Microsoft_Dynamics_Commerce_Runtime_NotAllLinesSaved";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderRequired"] = 126] = "Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderRequired";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SalesMustHaveQuantityGreaterThanZero"] = 127] = "Microsoft_Dynamics_Commerce_Runtime_SalesMustHaveQuantityGreaterThanZero";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnsMustHaveQuantityLesserThanZero"] = 128] = "Microsoft_Dynamics_Commerce_Runtime_ReturnsMustHaveQuantityLesserThanZero";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanPurchased"] = 129] = "Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanPurchased";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanInvoicedMinusReturned"] = 130] = "Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanInvoicedMinusReturned";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotReturnMultipleTransactions"] = 131] = "Microsoft_Dynamics_Commerce_Runtime_CannotReturnMultipleTransactions";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PropertyUpdateNotAllowed"] = 132] = "Microsoft_Dynamics_Commerce_Runtime_PropertyUpdateNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardDiscountNotAllowed"] = 133] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardDiscountNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_LoadingActiveCartFromAnotherTerminalNotAllowed"] = 134] = "Microsoft_Dynamics_Commerce_Runtime_LoadingActiveCartFromAnotherTerminalNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftAlreadyOpenOnDifferentTerminal"] = 135] = "Microsoft_Dynamics_Commerce_Runtime_ShiftAlreadyOpenOnDifferentTerminal";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_TerminalHasAnOpenShift"] = 136] = "Microsoft_Dynamics_Commerce_Runtime_TerminalHasAnOpenShift";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CashDrawerHasAnOpenShift"] = 137] = "Microsoft_Dynamics_Commerce_Runtime_CashDrawerHasAnOpenShift";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftStartingAmountNotEntered"] = 138] = "Microsoft_Dynamics_Commerce_Runtime_ShiftStartingAmountNotEntered";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftTenderDeclarationAmountNotEntered"] = 139] = "Microsoft_Dynamics_Commerce_Runtime_ShiftTenderDeclarationAmountNotEntered";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftHasUnreconciledLines"] = 140] = "Microsoft_Dynamics_Commerce_Runtime_ShiftHasUnreconciledLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReconciliationLineStatusMustBePending"] = 141] = "Microsoft_Dynamics_Commerce_Runtime_ReconciliationLineStatusMustBePending";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported"] = 142] = "Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotFound"] = 143] = "Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MoreThanOneTenderTypeForTenderTypeId"] = 144] = "Microsoft_Dynamics_Commerce_Runtime_MoreThanOneTenderTypeForTenderTypeId";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_TimeClockNotEnabled"] = 145] = "Microsoft_Dynamics_Commerce_Runtime_TimeClockNotEnabled";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ViewTimeClockNotEnabled"] = 146] = "Microsoft_Dynamics_Commerce_Runtime_ViewTimeClockNotEnabled";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneOperationWithAGiftCard"] = 147] = "Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneOperationWithAGiftCard";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardUnlockFailed"] = 148] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardUnlockFailed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardLineVoidReversalNotSupported"] = 149] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardLineVoidReversalNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SalesInvoiceLineVoidReversalNotSupported"] = 150] = "Microsoft_Dynamics_Commerce_Runtime_SalesInvoiceLineVoidReversalNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveTenderLines"] = 151] = "Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveTenderLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveGiftCardSalesLines"] = 152] = "Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveGiftCardSalesLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotUpdateUnitOfMeasureOnPriceOverriddenLine"] = 153] = "Microsoft_Dynamics_Commerce_Runtime_CannotUpdateUnitOfMeasureOnPriceOverriddenLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SettleInvoiceFailed"] = 154] = "Microsoft_Dynamics_Commerce_Runtime_SettleInvoiceFailed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_TerminalNotFound"] = 155] = "Microsoft_Dynamics_Commerce_Runtime_TerminalNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidQuantity"] = 156] = "Microsoft_Dynamics_Commerce_Runtime_InvalidQuantity";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ItemQuantityExceeded"] = 157] = "Microsoft_Dynamics_Commerce_Runtime_ItemQuantityExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForReturns"] = 158] = "Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForReturns";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForGiftCards"] = 159] = "Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForGiftCards";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForInvoiceLines"] = 160] = "Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForInvoiceLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotAddNonProductItemToCustomerOrder"] = 161] = "Microsoft_Dynamics_Commerce_Runtime_CannotAddNonProductItemToCustomerOrder";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded"] = 162] = "Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded"] = 163] = "Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftNotFound"] = 164] = "Microsoft_Dynamics_Commerce_Runtime_ShiftNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShiftValidationError"] = 165] = "Microsoft_Dynamics_Commerce_Runtime_ShiftValidationError";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CredentialIdentifierAlreadyInUse"] = 166] = "Microsoft_Dynamics_Commerce_Runtime_CredentialIdentifierAlreadyInUse";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CreditVoucherNull"] = 167] = "Microsoft_Dynamics_Commerce_Runtime_CreditVoucherNull";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CartNotFound"] = 168] = "Microsoft_Dynamics_Commerce_Runtime_CartNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositMultipleCartLinesNotAllowed"] = 169] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositMultipleCartLinesNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountNumberIsNotSet"] = 170] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountNumberIsNotSet";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotPayForCustomerAccountDepositWithCustomerAccountPaymentMethod"] = 171] = "Microsoft_Dynamics_Commerce_Runtime_CannotPayForCustomerAccountDepositWithCustomerAccountPaymentMethod";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeNegative"] = 172] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeNegative";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeVoided"] = 173] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeVoided";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_OfflineDatabaseChunkFileNotFound"] = 174] = "Microsoft_Dynamics_Commerce_Runtime_OfflineDatabaseChunkFileNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ChannelIsNotPublished"] = 175] = "Microsoft_Dynamics_Commerce_Runtime_ChannelIsNotPublished";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidOperation"] = 176] = "Microsoft_Dynamics_Commerce_Runtime_InvalidOperation";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MaxCountingDifferenceExceeded"] = 177] = "Microsoft_Dynamics_Commerce_Runtime_MaxCountingDifferenceExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_EmployeeNotAllowedManageSharedShift"] = 178] = "Microsoft_Dynamics_Commerce_Runtime_EmployeeNotAllowedManageSharedShift";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAmount"] = 179] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidBagNumber"] = 180] = "Microsoft_Dynamics_Commerce_Runtime_InvalidBagNumber";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoPrintersReturned"] = 181] = "Microsoft_Dynamics_Commerce_Runtime_NoPrintersReturned";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_EnteringPriceNotAllowed"] = 182] = "Microsoft_Dynamics_Commerce_Runtime_EnteringPriceNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualHigherPrice"] = 183] = "Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualHigherPrice";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualLowerPrice"] = 184] = "Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualLowerPrice";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MustKeyInNewPrice"] = 185] = "Microsoft_Dynamics_Commerce_Runtime_MustKeyInNewPrice";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ConflictingClaimsPresentOnUserContext"] = 186] = "Microsoft_Dynamics_Commerce_Runtime_ConflictingClaimsPresentOnUserContext";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineAdd"] = 187] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineAdd";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineUpdate"] = 188] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineUpdate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartState"] = 189] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartState";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidProduct"] = 190] = "Microsoft_Dynamics_Commerce_Runtime_InvalidProduct";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ConflictingCartLineOperation"] = 191] = "Microsoft_Dynamics_Commerce_Runtime_ConflictingCartLineOperation";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartLinesAggregateError"] = 192] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartLinesAggregateError";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartInventoryLocationId"] = 193] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartInventoryLocationId";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCartVersion"] = 194] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCartVersion";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerOrDirectoryPartyNotFound"] = 195] = "Microsoft_Dynamics_Commerce_Runtime_CustomerOrDirectoryPartyNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CannotUpdateCustomerAndLoyaltyCardAtTheSameTime"] = 196] = "Microsoft_Dynamics_Commerce_Runtime_CannotUpdateCustomerAndLoyaltyCardAtTheSameTime";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ConflictLoyaltyCardCustomerAndTransactionCustomer"] = 197] = "Microsoft_Dynamics_Commerce_Runtime_ConflictLoyaltyCardCustomerAndTransactionCustomer";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount"] = 198] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult"] = 199] = "Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PreValidationForAsyncAddressFailed"] = 200] = "Microsoft_Dynamics_Commerce_Runtime_PreValidationForAsyncAddressFailed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ZeroPriceIsNotAllowed"] = 201] = "Microsoft_Dynamics_Commerce_Runtime_ZeroPriceIsNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_OperationNotAllowedOnLinkedProduct"] = 202] = "Microsoft_Dynamics_Commerce_Runtime_OperationNotAllowedOnLinkedProduct";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountMismatchBetweenTransactionAndDepositLine"] = 203] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountMismatchBetweenTransactionAndDepositLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLineDoesNotAllowSettingTransactionStatus"] = 204] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLineDoesNotAllowSettingTransactionStatus";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLinesNotAllowed"] = 205] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLinesNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnLineNumberNotFound"] = 206] = "Microsoft_Dynamics_Commerce_Runtime_ReturnLineNumberNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerNameExceedsMaximumLength"] = 207] = "Microsoft_Dynamics_Commerce_Runtime_CustomerNameExceedsMaximumLength";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerPhoneNumberExceedsMaximumLength"] = 208] = "Microsoft_Dynamics_Commerce_Runtime_CustomerPhoneNumberExceedsMaximumLength";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerEmailExceedsMaximumLength"] = 209] = "Microsoft_Dynamics_Commerce_Runtime_CustomerEmailExceedsMaximumLength";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidShiftStatusChange"] = 210] = "Microsoft_Dynamics_Commerce_Runtime_InvalidShiftStatusChange";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AmountExceedsMaximumAllowed"] = 211] = "Microsoft_Dynamics_Commerce_Runtime_AmountExceedsMaximumAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PrintXZReportNotConfigured"] = 212] = "Microsoft_Dynamics_Commerce_Runtime_PrintXZReportNotConfigured";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ColumnsNameBadFormat"] = 213] = "Microsoft_Dynamics_Commerce_Runtime_ColumnsNameBadFormat";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SelectedValuesDidNotMatchExactlyOneProduct"] = 214] = "Microsoft_Dynamics_Commerce_Runtime_SelectedValuesDidNotMatchExactlyOneProduct";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ProductNotFound"] = 215] = "Microsoft_Dynamics_Commerce_Runtime_ProductNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_DiscountNotAllowed"] = 216] = "Microsoft_Dynamics_Commerce_Runtime_DiscountNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_FailedToRecallTransaction"] = 217] = "Microsoft_Dynamics_Commerce_Runtime_FailedToRecallTransaction";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryAddresses"] = 218] = "Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryAddresses";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SortingColumnsNotSupported"] = 219] = "Microsoft_Dynamics_Commerce_Runtime_SortingColumnsNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_WorkerDoesNotHaveAllowSaleOutsideAssortmentPermission"] = 220] = "Microsoft_Dynamics_Commerce_Runtime_WorkerDoesNotHaveAllowSaleOutsideAssortmentPermission";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidOrderInvoiceData"] = 221] = "Microsoft_Dynamics_Commerce_Runtime_InvalidOrderInvoiceData";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NoSalesInvoiceReturned"] = 222] = "Microsoft_Dynamics_Commerce_Runtime_NoSalesInvoiceReturned";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardLineNotAllowedWithInvoiceLine"] = 223] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardLineNotAllowedWithInvoiceLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCustomerOrder"] = 224] = "Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCustomerOrder";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerOrderNotAllowedToContainInvoiceLine"] = 225] = "Microsoft_Dynamics_Commerce_Runtime_CustomerOrderNotAllowedToContainInvoiceLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedWithItemLines"] = 226] = "Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedWithItemLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ItemLinesNotAllowedWithInvoiceLine"] = 227] = "Microsoft_Dynamics_Commerce_Runtime_ItemLinesNotAllowedWithInvoiceLine";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MultipleInvoiceLinesNotAllowed"] = 228] = "Microsoft_Dynamics_Commerce_Runtime_MultipleInvoiceLinesNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountRemovalNotAllowedForInvoiceSales"] = 229] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountRemovalNotAllowedForInvoiceSales";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithoutCustomerAccount"] = 230] = "Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithoutCustomerAccount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithDifferentCustomerAccount"] = 231] = "Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithDifferentCustomerAccount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvoiceDiscountNotAllowed"] = 232] = "Microsoft_Dynamics_Commerce_Runtime_InvoiceDiscountNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AttributeTypeNotSupported"] = 233] = "Microsoft_Dynamics_Commerce_Runtime_AttributeTypeNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAttributeValue"] = 234] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAttributeValue";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AttributeValueOutOfBounds"] = 235] = "Microsoft_Dynamics_Commerce_Runtime_AttributeValueOutOfBounds";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AttributeValueCannotBeNull"] = 236] = "Microsoft_Dynamics_Commerce_Runtime_AttributeValueCannotBeNull";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AttributeTypeMismatch"] = 237] = "Microsoft_Dynamics_Commerce_Runtime_AttributeTypeMismatch";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_AttributeDefinitionNotFound"] = 238] = "Microsoft_Dynamics_Commerce_Runtime_AttributeDefinitionNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MixingSalesAndReturnsProhibited"] = 239] = "Microsoft_Dynamics_Commerce_Runtime_MixingSalesAndReturnsProhibited";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCouponCode"] = 240] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCouponCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CouponRequiresCustomerOnCart"] = 241] = "Microsoft_Dynamics_Commerce_Runtime_CouponRequiresCustomerOnCart";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ExclusiveCouponCannotBeAppliedWithOtherCoupons"] = 242] = "Microsoft_Dynamics_Commerce_Runtime_ExclusiveCouponCannotBeAppliedWithOtherCoupons";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CouponExceedsDefinedUsageLimits"] = 243] = "Microsoft_Dynamics_Commerce_Runtime_CouponExceedsDefinedUsageLimits";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UserCannotAcceptFulfillmentLines"] = 244] = "Microsoft_Dynamics_Commerce_Runtime_UserCannotAcceptFulfillmentLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UserCannotRejectFulfillmentLines"] = 245] = "Microsoft_Dynamics_Commerce_Runtime_UserCannotRejectFulfillmentLines";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_AlreadyRegistered"] = 246] = "Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_AlreadyRegistered";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_HQisNotAvailable"] = 247] = "Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_HQisNotAvailable";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy"] = 248] = "Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_RemoveAddPaymentMethodConfigurationNotDefined"] = 249] = "Microsoft_Dynamics_Commerce_Runtime_RemoveAddPaymentMethodConfigurationNotDefined";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_OverrideDepostAmountShouldBeLargerThanCarriedOutAmount"] = 250] = "Microsoft_Dynamics_Commerce_Runtime_OverrideDepostAmountShouldBeLargerThanCarriedOutAmount";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_MixingItemIdsAndProductIdsProhibited"] = 251] = "Microsoft_Dynamics_Commerce_Runtime_MixingItemIdsAndProductIdsProhibited";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PackingLinesFromDifferentOrdersNotAllowed"] = 252] = "Microsoft_Dynamics_Commerce_Runtime_PackingLinesFromDifferentOrdersNotAllowed";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidFulfillmentLineKey"] = 253] = "Microsoft_Dynamics_Commerce_Runtime_InvalidFulfillmentLineKey";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_Missing_LocationId"] = 254] = "Microsoft_Dynamics_Commerce_Runtime_Missing_LocationId";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_Missing_ShipDate"] = 255] = "Microsoft_Dynamics_Commerce_Runtime_Missing_ShipDate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_Missing_ReceiveDate"] = 256] = "Microsoft_Dynamics_Commerce_Runtime_Missing_ReceiveDate";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidOrderType"] = 257] = "Microsoft_Dynamics_Commerce_Runtime_InvalidOrderType";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShippingSerializedProductsNotSupported"] = 258] = "Microsoft_Dynamics_Commerce_Runtime_ShippingSerializedProductsNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ShippingMultipleOrdersNotSupported"] = 259] = "Microsoft_Dynamics_Commerce_Runtime_ShippingMultipleOrdersNotSupported";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToOpenShift"] = 260] = "Microsoft_Dynamics_Commerce_Runtime_UnableToOpenShift";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CartAlreadyCheckedOut"] = 261] = "Microsoft_Dynamics_Commerce_Runtime_CartAlreadyCheckedOut";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CashDrawerLimitExceeded"] = 262] = "Microsoft_Dynamics_Commerce_Runtime_CashDrawerLimitExceeded";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_InvalidShift"] = 263] = "Microsoft_Dynamics_Commerce_InvalidShift";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_SuspendedTransactionNotFound"] = 264] = "Microsoft_Dynamics_Commerce_Runtime_SuspendedTransactionNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturnOnly"] = 265] = "Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturnOnly";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerBlockedForLoyaltyEnrollment"] = 266] = "Microsoft_Dynamics_Commerce_Runtime_CustomerBlockedForLoyaltyEnrollment";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InactiveCouponCode"] = 267] = "Microsoft_Dynamics_Commerce_Runtime_InactiveCouponCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ExpiredCouponCode"] = 268] = "Microsoft_Dynamics_Commerce_Runtime_ExpiredCouponCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_NotStartedCouponCode"] = 269] = "Microsoft_Dynamics_Commerce_Runtime_NotStartedCouponCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ExceededUsageLimitCouponCode"] = 270] = "Microsoft_Dynamics_Commerce_Runtime_ExceededUsageLimitCouponCode";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidResumeCartRequest"] = 271] = "Microsoft_Dynamics_Commerce_Runtime_InvalidResumeCartRequest";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_ChargeCodeNotFound"] = 272] = "Microsoft_Dynamics_Commerce_Runtime_ChargeCodeNotFound";
                DataValidationErrors[DataValidationErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentException_ReturnWithoutReceiptPayment"] = 273] = "Microsoft_Dynamics_Commerce_Runtime_PaymentException_ReturnWithoutReceiptPayment";
            })(DataValidationErrors = Entities.DataValidationErrors || (Entities.DataValidationErrors = {}));
            var FeatureNotSupportedErrors;
            (function (FeatureNotSupportedErrors) {
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["None"] = 0] = "None";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_RequestTypeNotSupported"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_RequestTypeNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_RequestParametersNotSupported"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_RequestParametersNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_RequestParameterValueNotSupported"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_RequestParameterValueNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_ChangeTenderTypeNotSupported"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_ChangeTenderTypeNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_DemoModeOperationNotSupported"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_DemoModeOperationNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceNotSupported"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_OnlineChannelRequired"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_OnlineChannelRequired";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_CouponsNotSupportedOnSalesQuotations"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_CouponsNotSupportedOnSalesQuotations";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_FeatureNotSupportedInHeadquarters"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_FeatureNotSupportedInHeadquarters";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_UpdatingCouponsNotSupportedOnPickup"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_UpdatingCouponsNotSupportedOnPickup";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_UpdateAsyncCustomerNotSupported"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_UpdateAsyncCustomerNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardPaymentNotSupported"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardPaymentNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardOperationNotSupported"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardOperationNotSupported";
                FeatureNotSupportedErrors[FeatureNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_CurrentVersionSupportsOnlyOneInvoicePayment"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_CurrentVersionSupportsOnlyOneInvoicePayment";
            })(FeatureNotSupportedErrors = Entities.FeatureNotSupportedErrors || (Entities.FeatureNotSupportedErrors = {}));
            var SecurityErrors;
            (function (SecurityErrors) {
                SecurityErrors[SecurityErrors["None"] = 0] = "None";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_AuthenticationFailed"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_AuthenticationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_AuthorizationFailed"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_AuthorizationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_AuthenticationMethodDisabled"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_AuthenticationMethodDisabled";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_CommerceIdentityNotFound"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_CommerceIdentityNotFound";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserNotActivated"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_UserNotActivated";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_PrincipalMissing"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_PrincipalMissing";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_PasswordRequired"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_PasswordRequired";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ChangePasswordFailed"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_ChangePasswordFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidPassword"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_InvalidPassword";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_IdentityProviderNotFound"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_IdentityProviderNotFound";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAuthenticationCredentials"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAuthenticationCredentials";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UpdatePasswordFailed"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_UpdatePasswordFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ResetPasswordFailed"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_ResetPasswordFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_NonDrawerOperationsOnly"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_NonDrawerOperationsOnly";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UseExistingShiftPermissionDenied"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_UseExistingShiftPermissionDenied";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_CreateTransferOrderNotAllowed"] = 16] = "Microsoft_Dynamics_Commerce_Runtime_CreateTransferOrderNotAllowed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserCannotMassActivation"] = 17] = "Microsoft_Dynamics_Commerce_Runtime_UserCannotMassActivation";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_OpenMultipleShiftsNotAllowed"] = 18] = "Microsoft_Dynamics_Commerce_Runtime_OpenMultipleShiftsNotAllowed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserSessionNotOpened"] = 19] = "Microsoft_Dynamics_Commerce_Runtime_UserSessionNotOpened";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure"] = 20] = "Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure"] = 21] = "Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceTokenExpired"] = 22] = "Microsoft_Dynamics_Commerce_Runtime_DeviceTokenExpired";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceTokenNotPresent"] = 23] = "Microsoft_Dynamics_Commerce_Runtime_DeviceTokenNotPresent";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidChannel"] = 24] = "Microsoft_Dynamics_Commerce_Runtime_InvalidChannel";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ElevatedUserSameAsLoggedOnUser"] = 25] = "Microsoft_Dynamics_Commerce_Runtime_ElevatedUserSameAsLoggedOnUser";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_GrantTypeNotSupported"] = 26] = "Microsoft_Dynamics_Commerce_Runtime_GrantTypeNotSupported";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceDeactivationFailed"] = 27] = "Microsoft_Dynamics_Commerce_Runtime_DeviceDeactivationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_HardwareStationTokenCreationFailed"] = 28] = "Microsoft_Dynamics_Commerce_Runtime_HardwareStationTokenCreationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidHardwareStationToken"] = 29] = "Microsoft_Dynamics_Commerce_Runtime_InvalidHardwareStationToken";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserLogonAnotherTerminal"] = 30] = "Microsoft_Dynamics_Commerce_Runtime_UserLogonAnotherTerminal";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UnlockRegisterFailed"] = 31] = "Microsoft_Dynamics_Commerce_Runtime_UnlockRegisterFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ChannelDatabaseConnectionFailed"] = 32] = "Microsoft_Dynamics_Commerce_Runtime_ChannelDatabaseConnectionFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidUserToken"] = 33] = "Microsoft_Dynamics_Commerce_Runtime_InvalidUserToken";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountAuthorizationFailure"] = 34] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountAuthorizationFailure";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_LocalLogonFailed"] = 35] = "Microsoft_Dynamics_Commerce_Runtime_LocalLogonFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_LocalDeviceAuthenticationFailed"] = 36] = "Microsoft_Dynamics_Commerce_Runtime_LocalDeviceAuthenticationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceTokenValidationFailed"] = 37] = "Microsoft_Dynamics_Commerce_Runtime_DeviceTokenValidationFailed";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_NoDeviceManagementPermission"] = 38] = "Microsoft_Dynamics_Commerce_Runtime_NoDeviceManagementPermission";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_IncorrectLogonTypeUserAccountOrPassword"] = 39] = "Microsoft_Dynamics_Commerce_Runtime_IncorrectLogonTypeUserAccountOrPassword";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAudience"] = 40] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAudience";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidIssuer"] = 41] = "Microsoft_Dynamics_Commerce_Runtime_InvalidIssuer";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_TenantIdNotFound"] = 42] = "Microsoft_Dynamics_Commerce_Runtime_TenantIdNotFound";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_AADTokenIssuedForDifferentEnvironment"] = 43] = "Microsoft_Dynamics_Commerce_Runtime_AADTokenIssuedForDifferentEnvironment";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidAADTenantId"] = 44] = "Microsoft_Dynamics_Commerce_Runtime_InvalidAADTenantId";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserBlockedDueToTooManyFailedLogonAttempts"] = 45] = "Microsoft_Dynamics_Commerce_Runtime_UserBlockedDueToTooManyFailedLogonAttempts";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_UserPasswordExpired"] = 46] = "Microsoft_Dynamics_Commerce_Runtime_UserPasswordExpired";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_CheckOutNotOverHTTPS"] = 47] = "Microsoft_Dynamics_Commerce_Runtime_CheckOutNotOverHTTPS";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_AttemptToActivateFromDifferentPhysicalDevice"] = 48] = "Microsoft_Dynamics_Commerce_Runtime_AttemptToActivateFromDifferentPhysicalDevice";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_InternalServerError"] = 49] = "Microsoft_Dynamics_Commerce_Runtime_InternalServerError";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_DeviceActivationNotAllowedWithUserTokenIssuer"] = 50] = "Microsoft_Dynamics_Commerce_Runtime_DeviceActivationNotAllowedWithUserTokenIssuer";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_PasswordComplexityRequirementsNotMet"] = 51] = "Microsoft_Dynamics_Commerce_Runtime_PasswordComplexityRequirementsNotMet";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_PasswordHistoryRequirementsNotMet"] = 52] = "Microsoft_Dynamics_Commerce_Runtime_PasswordHistoryRequirementsNotMet";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded"] = 53] = "Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded"] = 54] = "Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded";
                SecurityErrors[SecurityErrors["Microsoft_Dynamics_Commerce_Runtime_CredentialsNotConfigured"] = 55] = "Microsoft_Dynamics_Commerce_Runtime_CredentialsNotConfigured";
            })(SecurityErrors = Entities.SecurityErrors || (Entities.SecurityErrors = {}));
            var StorageErrors;
            (function (StorageErrors) {
                StorageErrors[StorageErrors["None"] = 0] = "None";
                StorageErrors[StorageErrors["Microsoft_Dynamics_Commerce_Runtime_CriticalStorageError"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_CriticalStorageError";
                StorageErrors[StorageErrors["Microsoft_Dynamics_Commerce_Runtime_UnexpectedNumberOfRowsError"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_UnexpectedNumberOfRowsError";
                StorageErrors[StorageErrors["Microsoft_Dynamics_Commerce_Runtime_ObjectVersionMismatchError"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_ObjectVersionMismatchError";
                StorageErrors[StorageErrors["Microsoft_Dynamics_Commerce_Runtime_StorageRequestTimeout"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_StorageRequestTimeout";
            })(StorageErrors = Entities.StorageErrors || (Entities.StorageErrors = {}));
            var VersionNotSupportedErrors;
            (function (VersionNotSupportedErrors) {
                VersionNotSupportedErrors[VersionNotSupportedErrors["None"] = 0] = "None";
                VersionNotSupportedErrors[VersionNotSupportedErrors["Microsoft_Dynamics_Commerce_Runtime_RetailServerApiVersionNotSupported"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_RetailServerApiVersionNotSupported";
            })(VersionNotSupportedErrors = Entities.VersionNotSupportedErrors || (Entities.VersionNotSupportedErrors = {}));
            var PaymentErrors;
            (function (PaymentErrors) {
                PaymentErrors[PaymentErrors["None"] = 0] = "None";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToCapturePayment"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_UnableToCapturePayment";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePayment"] = 2] = "Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePayment";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToRefundPayment"] = 3] = "Microsoft_Dynamics_Commerce_Runtime_UnableToRefundPayment";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToCancelPayment"] = 4] = "Microsoft_Dynamics_Commerce_Runtime_UnableToCancelPayment";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToGetCardPaymentAcceptPoint"] = 5] = "Microsoft_Dynamics_Commerce_Runtime_UnableToGetCardPaymentAcceptPoint";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult"] = 6] = "Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount"] = 7] = "Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_ManualCardNumberNotAllowed"] = 8] = "Microsoft_Dynamics_Commerce_Runtime_ManualCardNumberNotAllowed";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_TenderLineCannotBeVoided"] = 9] = "Microsoft_Dynamics_Commerce_Runtime_TenderLineCannotBeVoided";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidPaymentRequest"] = 10] = "Microsoft_Dynamics_Commerce_Runtime_InvalidPaymentRequest";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentAlreadyVoided"] = 11] = "Microsoft_Dynamics_Commerce_Runtime_PaymentAlreadyVoided";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber"] = 12] = "Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_GiftCardCurrencyMismatch"] = 13] = "Microsoft_Dynamics_Commerce_Runtime_GiftCardCurrencyMismatch";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentAmountExceedsGiftBalance"] = 14] = "Microsoft_Dynamics_Commerce_Runtime_PaymentAmountExceedsGiftBalance";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard"] = 15] = "Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_NoTenderLoyaltyCard"] = 16] = "Microsoft_Dynamics_Commerce_Runtime_NoTenderLoyaltyCard";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_NotEnoughRewardPoints"] = 17] = "Microsoft_Dynamics_Commerce_Runtime_NotEnoughRewardPoints";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_RefundAmountMoreThanAllowed"] = 18] = "Microsoft_Dynamics_Commerce_Runtime_RefundAmountMoreThanAllowed";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneLoyaltyTender"] = 19] = "Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneLoyaltyTender";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentUsingUnauthorizedAccount"] = 20] = "Microsoft_Dynamics_Commerce_Runtime_PaymentUsingUnauthorizedAccount";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentIsNotAllowedForCustomerOrderDepositAndCancellation"] = 21] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentIsNotAllowedForCustomerOrderDepositAndCancellation";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_PaymentRequiresMerchantProperties"] = 22] = "Microsoft_Dynamics_Commerce_Runtime_PaymentRequiresMerchantProperties";
                PaymentErrors[PaymentErrors["Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutItems"] = 23] = "Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutItems";
            })(PaymentErrors = Entities.PaymentErrors || (Entities.PaymentErrors = {}));
            var CommerceDataExchangeErrors;
            (function (CommerceDataExchangeErrors) {
                CommerceDataExchangeErrors[CommerceDataExchangeErrors["None"] = 0] = "None";
                CommerceDataExchangeErrors[CommerceDataExchangeErrors["Microsoft_Dynamics_Commerce_Runtime_CdxDataPackageApplicationFailure"] = 1] = "Microsoft_Dynamics_Commerce_Runtime_CdxDataPackageApplicationFailure";
            })(CommerceDataExchangeErrors = Entities.CommerceDataExchangeErrors || (Entities.CommerceDataExchangeErrors = {}));
            var WrongEndpointErrors;
            (function (WrongEndpointErrors) {
                WrongEndpointErrors[WrongEndpointErrors["None"] = 0] = "None";
                WrongEndpointErrors[WrongEndpointErrors["Microsoft_Dynamics_Commerce_WrongEndpoint"] = 1] = "Microsoft_Dynamics_Commerce_WrongEndpoint";
            })(WrongEndpointErrors = Entities.WrongEndpointErrors || (Entities.WrongEndpointErrors = {}));
            var RetailServerApiErrors;
            (function (RetailServerApiErrors) {
                RetailServerApiErrors[RetailServerApiErrors["None"] = 0] = "None";
                RetailServerApiErrors[RetailServerApiErrors["Microsoft_Dynamics_Internal_Server_Error"] = 1] = "Microsoft_Dynamics_Internal_Server_Error";
            })(RetailServerApiErrors = Entities.RetailServerApiErrors || (Entities.RetailServerApiErrors = {}));
            var ExceptionSeverity;
            (function (ExceptionSeverity) {
                ExceptionSeverity[ExceptionSeverity["None"] = 0] = "None";
                ExceptionSeverity[ExceptionSeverity["Error"] = 1] = "Error";
                ExceptionSeverity[ExceptionSeverity["Warning"] = 2] = "Warning";
                ExceptionSeverity[ExceptionSeverity["Critical"] = 3] = "Critical";
                ExceptionSeverity[ExceptionSeverity["Informational"] = 4] = "Informational";
            })(ExceptionSeverity = Entities.ExceptionSeverity || (Entities.ExceptionSeverity = {}));
            var CategoryClass = (function () {
                function CategoryClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.OfflineImage = odataObject.OfflineImage;
                    this.Name = odataObject.Name;
                    this.ParentCategory = (odataObject.ParentCategory != null) ? parseInt(odataObject.ParentCategory, 10) : undefined;
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.NameTranslations = undefined;
                    if (odataObject.NameTranslations) {
                        this.NameTranslations = [];
                        for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                            if (odataObject.NameTranslations[i] != null) {
                                if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.NameTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i]);
                                    }
                                }
                                else {
                                    this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                                }
                            }
                            else {
                                this.NameTranslations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CategoryClass;
            }());
            Entities.CategoryClass = CategoryClass;
            var CartClass = (function () {
                function CartClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AffiliationLines = undefined;
                    if (odataObject.AffiliationLines) {
                        this.AffiliationLines = [];
                        for (var i = 0; i < odataObject.AffiliationLines.length; i++) {
                            if (odataObject.AffiliationLines[i] != null) {
                                if (odataObject.AffiliationLines[i]['@odata.type'] != null) {
                                    var className = odataObject.AffiliationLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AffiliationLines[i] = new Commerce.Proxy.Entities[className](odataObject.AffiliationLines[i]);
                                    }
                                }
                                else {
                                    this.AffiliationLines[i] = new AffiliationLoyaltyTierClass(odataObject.AffiliationLines[i]);
                                }
                            }
                            else {
                                this.AffiliationLines[i] = undefined;
                            }
                        }
                    }
                    this.IsRequiredAmountPaid = odataObject.IsRequiredAmountPaid;
                    this.IsDiscountFullyCalculated = odataObject.IsDiscountFullyCalculated;
                    this.IgnoreDiscountCalculation = odataObject.IgnoreDiscountCalculation;
                    this.AmountDue = (odataObject.AmountDue != null) ? parseFloat(odataObject.AmountDue) : undefined;
                    this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
                    this.AttributeValues = undefined;
                    if (odataObject.AttributeValues) {
                        this.AttributeValues = [];
                        for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                            if (odataObject.AttributeValues[i] != null) {
                                if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                                    var className = odataObject.AttributeValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i]);
                                    }
                                }
                                else {
                                    this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                                }
                            }
                            else {
                                this.AttributeValues[i] = undefined;
                            }
                        }
                    }
                    this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
                        : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.BusinessDate = (odataObject.BusinessDate instanceof Date) ? odataObject.BusinessDate
                        : (odataObject.BusinessDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BusinessDate, "Edm.DateTimeOffset", false) : undefined;
                    this.CancellationChargeAmount = (odataObject.CancellationChargeAmount != null) ? parseFloat(odataObject.CancellationChargeAmount) : undefined;
                    this.EstimatedShippingAmount = (odataObject.EstimatedShippingAmount != null) ? parseFloat(odataObject.EstimatedShippingAmount) : undefined;
                    this.CartLines = undefined;
                    if (odataObject.CartLines) {
                        this.CartLines = [];
                        for (var i = 0; i < odataObject.CartLines.length; i++) {
                            if (odataObject.CartLines[i] != null) {
                                if (odataObject.CartLines[i]['@odata.type'] != null) {
                                    var className = odataObject.CartLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CartLines[i] = new Commerce.Proxy.Entities[className](odataObject.CartLines[i]);
                                    }
                                }
                                else {
                                    this.CartLines[i] = new CartLineClass(odataObject.CartLines[i]);
                                }
                            }
                            else {
                                this.CartLines[i] = undefined;
                            }
                        }
                    }
                    this.CartTypeValue = odataObject.CartTypeValue;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.ChargeAmount = (odataObject.ChargeAmount != null) ? parseFloat(odataObject.ChargeAmount) : undefined;
                    this.CustomerOrderRemainingBalance = (odataObject.CustomerOrderRemainingBalance != null) ? parseFloat(odataObject.CustomerOrderRemainingBalance) : undefined;
                    this.ChargeLines = undefined;
                    if (odataObject.ChargeLines) {
                        this.ChargeLines = [];
                        for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                            if (odataObject.ChargeLines[i] != null) {
                                if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ChargeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i]);
                                    }
                                }
                                else {
                                    this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                                }
                            }
                            else {
                                this.ChargeLines[i] = undefined;
                            }
                        }
                    }
                    this.TaxViewLines = undefined;
                    if (odataObject.TaxViewLines) {
                        this.TaxViewLines = [];
                        for (var i = 0; i < odataObject.TaxViewLines.length; i++) {
                            if (odataObject.TaxViewLines[i] != null) {
                                if (odataObject.TaxViewLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxViewLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxViewLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxViewLines[i]);
                                    }
                                }
                                else {
                                    this.TaxViewLines[i] = new TaxViewLineClass(odataObject.TaxViewLines[i]);
                                }
                            }
                            else {
                                this.TaxViewLines[i] = undefined;
                            }
                        }
                    }
                    this.Comment = odataObject.Comment;
                    this.InvoiceComment = odataObject.InvoiceComment;
                    this.Coupons = undefined;
                    if (odataObject.Coupons) {
                        this.Coupons = [];
                        for (var i = 0; i < odataObject.Coupons.length; i++) {
                            if (odataObject.Coupons[i] != null) {
                                if (odataObject.Coupons[i]['@odata.type'] != null) {
                                    var className = odataObject.Coupons[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Coupons[i] = new Commerce.Proxy.Entities[className](odataObject.Coupons[i]);
                                    }
                                }
                                else {
                                    this.Coupons[i] = new CouponClass(odataObject.Coupons[i]);
                                }
                            }
                            else {
                                this.Coupons[i] = undefined;
                            }
                        }
                    }
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerOrderModeValue = odataObject.CustomerOrderModeValue;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
                    this.DiscountCodes = undefined;
                    if (odataObject.DiscountCodes) {
                        this.DiscountCodes = [];
                        for (var i = 0; i < odataObject.DiscountCodes.length; i++) {
                            if (odataObject.DiscountCodes[i] != null) {
                                this.DiscountCodes[i] = odataObject.DiscountCodes[i];
                            }
                            else {
                                this.DiscountCodes[i] = undefined;
                            }
                        }
                    }
                    this.Id = odataObject.Id;
                    this.SuspendedCartId = odataObject.SuspendedCartId;
                    this.TransactionTypeValue = odataObject.TransactionTypeValue;
                    this.CustomerAccountDepositLines = undefined;
                    if (odataObject.CustomerAccountDepositLines) {
                        this.CustomerAccountDepositLines = [];
                        for (var i = 0; i < odataObject.CustomerAccountDepositLines.length; i++) {
                            if (odataObject.CustomerAccountDepositLines[i] != null) {
                                if (odataObject.CustomerAccountDepositLines[i]['@odata.type'] != null) {
                                    var className = odataObject.CustomerAccountDepositLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CustomerAccountDepositLines[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAccountDepositLines[i]);
                                    }
                                }
                                else {
                                    this.CustomerAccountDepositLines[i] = new CustomerAccountDepositLineClass(odataObject.CustomerAccountDepositLines[i]);
                                }
                            }
                            else {
                                this.CustomerAccountDepositLines[i] = undefined;
                            }
                        }
                    }
                    this.IncomeExpenseLines = undefined;
                    if (odataObject.IncomeExpenseLines) {
                        this.IncomeExpenseLines = [];
                        for (var i = 0; i < odataObject.IncomeExpenseLines.length; i++) {
                            if (odataObject.IncomeExpenseLines[i] != null) {
                                if (odataObject.IncomeExpenseLines[i]['@odata.type'] != null) {
                                    var className = odataObject.IncomeExpenseLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.IncomeExpenseLines[i] = new Commerce.Proxy.Entities[className](odataObject.IncomeExpenseLines[i]);
                                    }
                                }
                                else {
                                    this.IncomeExpenseLines[i] = new IncomeExpenseLineClass(odataObject.IncomeExpenseLines[i]);
                                }
                            }
                            else {
                                this.IncomeExpenseLines[i] = undefined;
                            }
                        }
                    }
                    this.IncomeExpenseTotalAmount = (odataObject.IncomeExpenseTotalAmount != null) ? parseFloat(odataObject.IncomeExpenseTotalAmount) : undefined;
                    this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
                    this.ReturnTransactionHasLoyaltyPayment = odataObject.ReturnTransactionHasLoyaltyPayment;
                    this.IsFavorite = odataObject.IsFavorite;
                    this.IsRecurring = odataObject.IsRecurring;
                    this.IsSuspended = odataObject.IsSuspended;
                    this.LoyaltyCardId = odataObject.LoyaltyCardId;
                    this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
                        : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Name = odataObject.Name;
                    this.OrderNumber = odataObject.OrderNumber;
                    this.AvailableDepositAmount = (odataObject.AvailableDepositAmount != null) ? parseFloat(odataObject.AvailableDepositAmount) : undefined;
                    this.OverriddenDepositAmount = (odataObject.OverriddenDepositAmount != null) ? parseFloat(odataObject.OverriddenDepositAmount) : undefined;
                    this.OverriddenDepositWithoutCarryoutAmount = (odataObject.OverriddenDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.OverriddenDepositWithoutCarryoutAmount) : undefined;
                    this.PrepaymentAmountPaid = (odataObject.PrepaymentAmountPaid != null) ? parseFloat(odataObject.PrepaymentAmountPaid) : undefined;
                    this.PrepaymentAppliedOnPickup = (odataObject.PrepaymentAppliedOnPickup != null) ? parseFloat(odataObject.PrepaymentAppliedOnPickup) : undefined;
                    this.PromotionLines = undefined;
                    if (odataObject.PromotionLines) {
                        this.PromotionLines = [];
                        for (var i = 0; i < odataObject.PromotionLines.length; i++) {
                            if (odataObject.PromotionLines[i] != null) {
                                this.PromotionLines[i] = odataObject.PromotionLines[i];
                            }
                            else {
                                this.PromotionLines[i] = undefined;
                            }
                        }
                    }
                    this.QuotationExpiryDate = (odataObject.QuotationExpiryDate instanceof Date) ? odataObject.QuotationExpiryDate
                        : (odataObject.QuotationExpiryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.QuotationExpiryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.ReceiptEmail = odataObject.ReceiptEmail;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequiredDepositAmount = (odataObject.RequiredDepositAmount != null) ? parseFloat(odataObject.RequiredDepositAmount) : undefined;
                    this.RequiredDepositWithoutCarryoutAmount = (odataObject.RequiredDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.RequiredDepositWithoutCarryoutAmount) : undefined;
                    this.SalesId = odataObject.SalesId;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                    this.StaffId = odataObject.StaffId;
                    this.SubtotalAmount = (odataObject.SubtotalAmount != null) ? parseFloat(odataObject.SubtotalAmount) : undefined;
                    this.SubtotalAmountWithoutTax = (odataObject.SubtotalAmountWithoutTax != null) ? parseFloat(odataObject.SubtotalAmountWithoutTax) : undefined;
                    this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
                    this.SubtotalSalesAmount = (odataObject.SubtotalSalesAmount != null) ? parseFloat(odataObject.SubtotalSalesAmount) : undefined;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.TaxOnCancellationCharge = (odataObject.TaxOnCancellationCharge != null) ? parseFloat(odataObject.TaxOnCancellationCharge) : undefined;
                    this.TaxOverrideCode = odataObject.TaxOverrideCode;
                    this.TenderLines = undefined;
                    if (odataObject.TenderLines) {
                        this.TenderLines = [];
                        for (var i = 0; i < odataObject.TenderLines.length; i++) {
                            if (odataObject.TenderLines[i] != null) {
                                if (odataObject.TenderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i]);
                                    }
                                }
                                else {
                                    this.TenderLines[i] = new TenderLineClass(odataObject.TenderLines[i]);
                                }
                            }
                            else {
                                this.TenderLines[i] = undefined;
                            }
                        }
                    }
                    this.TerminalId = odataObject.TerminalId;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.TotalSalesAmount = (odataObject.TotalSalesAmount != null) ? parseFloat(odataObject.TotalSalesAmount) : undefined;
                    this.TotalReturnAmount = (odataObject.TotalReturnAmount != null) ? parseFloat(odataObject.TotalReturnAmount) : undefined;
                    this.TotalCarryoutSalesAmount = (odataObject.TotalCarryoutSalesAmount != null) ? parseFloat(odataObject.TotalCarryoutSalesAmount) : undefined;
                    this.TotalCustomerOrderSalesAmount = (odataObject.TotalCustomerOrderSalesAmount != null) ? parseFloat(odataObject.TotalCustomerOrderSalesAmount) : undefined;
                    this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
                    this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
                    this.WarehouseId = odataObject.WarehouseId;
                    this.IsCreatedOffline = odataObject.IsCreatedOffline;
                    this.CartStatusValue = odataObject.CartStatusValue;
                    this.ReceiptTransactionTypeValue = odataObject.ReceiptTransactionTypeValue;
                    this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
                    this.Version = (odataObject.Version != null) ? parseInt(odataObject.Version, 10) : undefined;
                    this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
                    this.HasTaxCalculationTriggered = odataObject.HasTaxCalculationTriggered;
                    this.MerchantProperties = undefined;
                    if (odataObject.MerchantProperties) {
                        this.MerchantProperties = [];
                        for (var i = 0; i < odataObject.MerchantProperties.length; i++) {
                            if (odataObject.MerchantProperties[i] != null) {
                                if (odataObject.MerchantProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.MerchantProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.MerchantProperties[i] = new Commerce.Proxy.Entities[className](odataObject.MerchantProperties[i]);
                                    }
                                }
                                else {
                                    this.MerchantProperties[i] = new PaymentMerchantInformationClass(odataObject.MerchantProperties[i]);
                                }
                            }
                            else {
                                this.MerchantProperties[i] = undefined;
                            }
                        }
                    }
                    this.HasChargeCalculationTriggered = odataObject.HasChargeCalculationTriggered;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CartClass;
            }());
            Entities.CartClass = CartClass;
            var CustomerClass = (function () {
                function CustomerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AccountNumber = odataObject.AccountNumber;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ChargeGroup = odataObject.ChargeGroup;
                    this.PriceGroup = odataObject.PriceGroup;
                    this.IsCustomerTaxInclusive = odataObject.IsCustomerTaxInclusive;
                    this.Phone = odataObject.Phone;
                    this.PhoneRecordId = (odataObject.PhoneRecordId != null) ? parseInt(odataObject.PhoneRecordId, 10) : undefined;
                    this.PhoneExt = odataObject.PhoneExt;
                    this.Cellphone = odataObject.Cellphone;
                    this.Email = odataObject.Email;
                    this.EmailRecordId = (odataObject.EmailRecordId != null) ? parseInt(odataObject.EmailRecordId, 10) : undefined;
                    this.Url = odataObject.Url;
                    this.UrlRecordId = (odataObject.UrlRecordId != null) ? parseInt(odataObject.UrlRecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.PersonNameId = (odataObject.PersonNameId != null) ? parseInt(odataObject.PersonNameId, 10) : undefined;
                    this.FirstName = odataObject.FirstName;
                    this.MiddleName = odataObject.MiddleName;
                    this.LastName = odataObject.LastName;
                    this.DirectoryPartyRecordId = (odataObject.DirectoryPartyRecordId != null) ? parseInt(odataObject.DirectoryPartyRecordId, 10) : undefined;
                    this.PartyNumber = odataObject.PartyNumber;
                    this.CustomerTypeValue = odataObject.CustomerTypeValue;
                    this.Language = odataObject.Language;
                    this.CustomerGroup = odataObject.CustomerGroup;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.CNPJCPFNumber = odataObject.CNPJCPFNumber;
                    this.IdentificationNumber = odataObject.IdentificationNumber;
                    this.InvoiceAccount = odataObject.InvoiceAccount;
                    this.MandatoryCreditLimit = odataObject.MandatoryCreditLimit;
                    this.CreditRating = odataObject.CreditRating;
                    this.CreditLimit = (odataObject.CreditLimit != null) ? parseFloat(odataObject.CreditLimit) : undefined;
                    this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
                    this.Blocked = odataObject.Blocked;
                    this.BlockedType = odataObject.BlockedType;
                    this.UseOrderNumberReference = odataObject.UseOrderNumberReference;
                    this.OrganizationId = odataObject.OrganizationId;
                    this.UsePurchaseRequest = odataObject.UsePurchaseRequest;
                    this.MultilineDiscountGroup = odataObject.MultilineDiscountGroup;
                    this.TotalDiscountGroup = odataObject.TotalDiscountGroup;
                    this.LineDiscountGroup = odataObject.LineDiscountGroup;
                    this.TaxGroup = odataObject.TaxGroup;
                    this.SalesTaxGroup = odataObject.SalesTaxGroup;
                    this.TaxExemptNumber = odataObject.TaxExemptNumber;
                    this.VatNumber = odataObject.VatNumber;
                    this.TaxOffice = odataObject.TaxOffice;
                    this.NonChargeableAccount = odataObject.NonChargeableAccount;
                    this.Tag = odataObject.Tag;
                    this.ReceiptSettings = odataObject.ReceiptSettings;
                    this.ReceiptEmail = odataObject.ReceiptEmail;
                    this.RetailCustomerTableRecordId = (odataObject.RetailCustomerTableRecordId != null) ? parseInt(odataObject.RetailCustomerTableRecordId, 10) : undefined;
                    this.OfflineImage = odataObject.OfflineImage;
                    this.IsAsyncCustomer = odataObject.IsAsyncCustomer;
                    this.NewCustomerPartyNumber = odataObject.NewCustomerPartyNumber;
                    this.CustomerAffiliations = undefined;
                    if (odataObject.CustomerAffiliations) {
                        this.CustomerAffiliations = [];
                        for (var i = 0; i < odataObject.CustomerAffiliations.length; i++) {
                            if (odataObject.CustomerAffiliations[i] != null) {
                                if (odataObject.CustomerAffiliations[i]['@odata.type'] != null) {
                                    var className = odataObject.CustomerAffiliations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CustomerAffiliations[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAffiliations[i]);
                                    }
                                }
                                else {
                                    this.CustomerAffiliations[i] = new CustomerAffiliationClass(odataObject.CustomerAffiliations[i]);
                                }
                            }
                            else {
                                this.CustomerAffiliations[i] = undefined;
                            }
                        }
                    }
                    this.Addresses = undefined;
                    if (odataObject.Addresses) {
                        this.Addresses = [];
                        for (var i = 0; i < odataObject.Addresses.length; i++) {
                            if (odataObject.Addresses[i] != null) {
                                if (odataObject.Addresses[i]['@odata.type'] != null) {
                                    var className = odataObject.Addresses[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Addresses[i] = new Commerce.Proxy.Entities[className](odataObject.Addresses[i]);
                                    }
                                }
                                else {
                                    this.Addresses[i] = new AddressClass(odataObject.Addresses[i]);
                                }
                            }
                            else {
                                this.Addresses[i] = undefined;
                            }
                        }
                    }
                    this.Attributes = undefined;
                    if (odataObject.Attributes) {
                        this.Attributes = [];
                        for (var i = 0; i < odataObject.Attributes.length; i++) {
                            if (odataObject.Attributes[i] != null) {
                                if (odataObject.Attributes[i]['@odata.type'] != null) {
                                    var className = odataObject.Attributes[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Attributes[i] = new Commerce.Proxy.Entities[className](odataObject.Attributes[i]);
                                    }
                                }
                                else {
                                    this.Attributes[i] = new CustomerAttributeClass(odataObject.Attributes[i]);
                                }
                            }
                            else {
                                this.Attributes[i] = undefined;
                            }
                        }
                    }
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerClass;
            }());
            Entities.CustomerClass = CustomerClass;
            var EmployeeClass = (function () {
                function EmployeeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.StaffId = odataObject.StaffId;
                    this.NameOnReceipt = odataObject.NameOnReceipt;
                    this.Name = odataObject.Name;
                    this.CultureName = odataObject.CultureName;
                    this.NumberOfDaysToPasswordExpiry = odataObject.NumberOfDaysToPasswordExpiry;
                    if (odataObject.Permissions == null) {
                        this.Permissions = undefined;
                    }
                    else if (odataObject.Permissions['@odata.type'] == null) {
                        this.Permissions = new EmployeePermissionsClass(odataObject.Permissions);
                    }
                    else {
                        var className = odataObject.Permissions['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Permissions = new Commerce.Proxy.Entities[className](odataObject.Permissions);
                        }
                    }
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.DefaultImage = odataObject.DefaultImage;
                    this.DefaultCommissionSalesGroup = odataObject.DefaultCommissionSalesGroup;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return EmployeeClass;
            }());
            Entities.EmployeeClass = EmployeeClass;
            var SalesOrderClass = (function () {
                function SalesOrderClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DocumentStatusValue = odataObject.DocumentStatusValue;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.StatusValue = odataObject.StatusValue;
                    this.AffiliationLoyaltyTierLines = undefined;
                    if (odataObject.AffiliationLoyaltyTierLines) {
                        this.AffiliationLoyaltyTierLines = [];
                        for (var i = 0; i < odataObject.AffiliationLoyaltyTierLines.length; i++) {
                            if (odataObject.AffiliationLoyaltyTierLines[i] != null) {
                                if (odataObject.AffiliationLoyaltyTierLines[i]['@odata.type'] != null) {
                                    var className = odataObject.AffiliationLoyaltyTierLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AffiliationLoyaltyTierLines[i] = new Commerce.Proxy.Entities[className](odataObject.AffiliationLoyaltyTierLines[i]);
                                    }
                                }
                                else {
                                    this.AffiliationLoyaltyTierLines[i] = new SalesAffiliationLoyaltyTierClass(odataObject.AffiliationLoyaltyTierLines[i]);
                                }
                            }
                            else {
                                this.AffiliationLoyaltyTierLines[i] = undefined;
                            }
                        }
                    }
                    this.IsRequiredAmountPaid = odataObject.IsRequiredAmountPaid;
                    this.IsDiscountFullyCalculated = odataObject.IsDiscountFullyCalculated;
                    this.IgnoreDiscountCalculation = odataObject.IgnoreDiscountCalculation;
                    this.AmountDue = (odataObject.AmountDue != null) ? parseFloat(odataObject.AmountDue) : undefined;
                    this.EstimatedShippingAmount = (odataObject.EstimatedShippingAmount != null) ? parseFloat(odataObject.EstimatedShippingAmount) : undefined;
                    this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
                    this.CustomerOrderRemainingBalance = (odataObject.CustomerOrderRemainingBalance != null) ? parseFloat(odataObject.CustomerOrderRemainingBalance) : undefined;
                    this.AttributeValues = undefined;
                    if (odataObject.AttributeValues) {
                        this.AttributeValues = [];
                        for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                            if (odataObject.AttributeValues[i] != null) {
                                if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                                    var className = odataObject.AttributeValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i]);
                                    }
                                }
                                else {
                                    this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                                }
                            }
                            else {
                                this.AttributeValues[i] = undefined;
                            }
                        }
                    }
                    this.AvailableDepositAmount = (odataObject.AvailableDepositAmount != null) ? parseFloat(odataObject.AvailableDepositAmount) : undefined;
                    this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
                        : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.BusinessDate = (odataObject.BusinessDate instanceof Date) ? odataObject.BusinessDate
                        : (odataObject.BusinessDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BusinessDate, "Edm.DateTimeOffset", false) : undefined;
                    this.CalculatedDepositAmount = (odataObject.CalculatedDepositAmount != null) ? parseFloat(odataObject.CalculatedDepositAmount) : undefined;
                    this.CancellationCharge = (odataObject.CancellationCharge != null) ? parseFloat(odataObject.CancellationCharge) : undefined;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.ChargeAmount = (odataObject.ChargeAmount != null) ? parseFloat(odataObject.ChargeAmount) : undefined;
                    this.ChargeLines = undefined;
                    if (odataObject.ChargeLines) {
                        this.ChargeLines = [];
                        for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                            if (odataObject.ChargeLines[i] != null) {
                                if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ChargeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i]);
                                    }
                                }
                                else {
                                    this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                                }
                            }
                            else {
                                this.ChargeLines[i] = undefined;
                            }
                        }
                    }
                    this.Comment = odataObject.Comment;
                    this.Coupons = undefined;
                    if (odataObject.Coupons) {
                        this.Coupons = [];
                        for (var i = 0; i < odataObject.Coupons.length; i++) {
                            if (odataObject.Coupons[i] != null) {
                                if (odataObject.Coupons[i]['@odata.type'] != null) {
                                    var className = odataObject.Coupons[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Coupons[i] = new Commerce.Proxy.Entities[className](odataObject.Coupons[i]);
                                    }
                                }
                                else {
                                    this.Coupons[i] = new CouponClass(odataObject.Coupons[i]);
                                }
                            }
                            else {
                                this.Coupons[i] = undefined;
                            }
                        }
                    }
                    this.InvoiceComment = odataObject.InvoiceComment;
                    this.ContactInformationCollection = undefined;
                    if (odataObject.ContactInformationCollection) {
                        this.ContactInformationCollection = [];
                        for (var i = 0; i < odataObject.ContactInformationCollection.length; i++) {
                            if (odataObject.ContactInformationCollection[i] != null) {
                                if (odataObject.ContactInformationCollection[i]['@odata.type'] != null) {
                                    var className = odataObject.ContactInformationCollection[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ContactInformationCollection[i] = new Commerce.Proxy.Entities[className](odataObject.ContactInformationCollection[i]);
                                    }
                                }
                                else {
                                    this.ContactInformationCollection[i] = new ContactInformationClass(odataObject.ContactInformationCollection[i]);
                                }
                            }
                            else {
                                this.ContactInformationCollection[i] = undefined;
                            }
                        }
                    }
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.CustomerAccountDepositLines = undefined;
                    if (odataObject.CustomerAccountDepositLines) {
                        this.CustomerAccountDepositLines = [];
                        for (var i = 0; i < odataObject.CustomerAccountDepositLines.length; i++) {
                            if (odataObject.CustomerAccountDepositLines[i] != null) {
                                if (odataObject.CustomerAccountDepositLines[i]['@odata.type'] != null) {
                                    var className = odataObject.CustomerAccountDepositLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CustomerAccountDepositLines[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAccountDepositLines[i]);
                                    }
                                }
                                else {
                                    this.CustomerAccountDepositLines[i] = new CustomerAccountDepositLineClass(odataObject.CustomerAccountDepositLines[i]);
                                }
                            }
                            else {
                                this.CustomerAccountDepositLines[i] = undefined;
                            }
                        }
                    }
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerOrderModeValue = odataObject.CustomerOrderModeValue;
                    this.CustomerOrderTypeValue = odataObject.CustomerOrderTypeValue;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
                    this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
                    this.DiscountCodes = undefined;
                    if (odataObject.DiscountCodes) {
                        this.DiscountCodes = [];
                        for (var i = 0; i < odataObject.DiscountCodes.length; i++) {
                            if (odataObject.DiscountCodes[i] != null) {
                                this.DiscountCodes[i] = odataObject.DiscountCodes[i];
                            }
                            else {
                                this.DiscountCodes[i] = undefined;
                            }
                        }
                    }
                    this.EntryStatusValue = odataObject.EntryStatusValue;
                    this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
                    this.HasLoyaltyPayment = odataObject.HasLoyaltyPayment;
                    this.Id = odataObject.Id;
                    this.SuspendedTransactionId = odataObject.SuspendedTransactionId;
                    this.IncomeExpenseLines = undefined;
                    if (odataObject.IncomeExpenseLines) {
                        this.IncomeExpenseLines = [];
                        for (var i = 0; i < odataObject.IncomeExpenseLines.length; i++) {
                            if (odataObject.IncomeExpenseLines[i] != null) {
                                if (odataObject.IncomeExpenseLines[i]['@odata.type'] != null) {
                                    var className = odataObject.IncomeExpenseLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.IncomeExpenseLines[i] = new Commerce.Proxy.Entities[className](odataObject.IncomeExpenseLines[i]);
                                    }
                                }
                                else {
                                    this.IncomeExpenseLines[i] = new IncomeExpenseLineClass(odataObject.IncomeExpenseLines[i]);
                                }
                            }
                            else {
                                this.IncomeExpenseLines[i] = undefined;
                            }
                        }
                    }
                    this.IncomeExpenseTotalAmount = (odataObject.IncomeExpenseTotalAmount != null) ? parseFloat(odataObject.IncomeExpenseTotalAmount) : undefined;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.IsCreatedOffline = odataObject.IsCreatedOffline;
                    this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
                    this.IsSuspended = odataObject.IsSuspended;
                    this.IsTaxIncludedInPrice = odataObject.IsTaxIncludedInPrice;
                    this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
                    this.LineDiscountCalculationTypeValue = odataObject.LineDiscountCalculationTypeValue;
                    this.LoyaltyCardId = odataObject.LoyaltyCardId;
                    this.LoyaltyDiscountAmount = (odataObject.LoyaltyDiscountAmount != null) ? parseFloat(odataObject.LoyaltyDiscountAmount) : undefined;
                    this.LoyaltyManualDiscountAmount = (odataObject.LoyaltyManualDiscountAmount != null) ? parseFloat(odataObject.LoyaltyManualDiscountAmount) : undefined;
                    this.LoyaltyRewardPointLines = undefined;
                    if (odataObject.LoyaltyRewardPointLines) {
                        this.LoyaltyRewardPointLines = [];
                        for (var i = 0; i < odataObject.LoyaltyRewardPointLines.length; i++) {
                            if (odataObject.LoyaltyRewardPointLines[i] != null) {
                                if (odataObject.LoyaltyRewardPointLines[i]['@odata.type'] != null) {
                                    var className = odataObject.LoyaltyRewardPointLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyRewardPointLines[i]);
                                    }
                                }
                                else {
                                    this.LoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.LoyaltyRewardPointLines[i]);
                                }
                            }
                            else {
                                this.LoyaltyRewardPointLines[i] = undefined;
                            }
                        }
                    }
                    this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
                        : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Name = odataObject.Name;
                    this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
                    this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
                    this.NetAmountWithNoTax = (odataObject.NetAmountWithNoTax != null) ? parseFloat(odataObject.NetAmountWithNoTax) : undefined;
                    this.NetAmountWithTax = (odataObject.NetAmountWithTax != null) ? parseFloat(odataObject.NetAmountWithTax) : undefined;
                    this.NumberOfItems = (odataObject.NumberOfItems != null) ? parseFloat(odataObject.NumberOfItems) : undefined;
                    this.OverriddenDepositAmount = (odataObject.OverriddenDepositAmount != null) ? parseFloat(odataObject.OverriddenDepositAmount) : undefined;
                    this.OverriddenDepositWithoutCarryoutAmount = (odataObject.OverriddenDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.OverriddenDepositWithoutCarryoutAmount) : undefined;
                    this.PeriodicDiscountAmount = (odataObject.PeriodicDiscountAmount != null) ? parseFloat(odataObject.PeriodicDiscountAmount) : undefined;
                    this.PrepaymentAmountAppliedOnPickup = (odataObject.PrepaymentAmountAppliedOnPickup != null) ? parseFloat(odataObject.PrepaymentAmountAppliedOnPickup) : undefined;
                    this.PrepaymentAmountInvoiced = (odataObject.PrepaymentAmountInvoiced != null) ? parseFloat(odataObject.PrepaymentAmountInvoiced) : undefined;
                    this.PrepaymentAmountPaid = (odataObject.PrepaymentAmountPaid != null) ? parseFloat(odataObject.PrepaymentAmountPaid) : undefined;
                    this.QuotationExpiryDate = (odataObject.QuotationExpiryDate instanceof Date) ? odataObject.QuotationExpiryDate
                        : (odataObject.QuotationExpiryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.QuotationExpiryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.ReceiptEmail = odataObject.ReceiptEmail;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequiredDepositAmount = (odataObject.RequiredDepositAmount != null) ? parseFloat(odataObject.RequiredDepositAmount) : undefined;
                    this.RequiredDepositWithoutCarryoutAmount = (odataObject.RequiredDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.RequiredDepositWithoutCarryoutAmount) : undefined;
                    this.ReturnTransactionHasLoyaltyPayment = odataObject.ReturnTransactionHasLoyaltyPayment;
                    this.SalesId = odataObject.SalesId;
                    this.SalesPaymentDifference = (odataObject.SalesPaymentDifference != null) ? parseFloat(odataObject.SalesPaymentDifference) : undefined;
                    this.SalesLines = undefined;
                    if (odataObject.SalesLines) {
                        this.SalesLines = [];
                        for (var i = 0; i < odataObject.SalesLines.length; i++) {
                            if (odataObject.SalesLines[i] != null) {
                                if (odataObject.SalesLines[i]['@odata.type'] != null) {
                                    var className = odataObject.SalesLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SalesLines[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLines[i]);
                                    }
                                }
                                else {
                                    this.SalesLines[i] = new SalesLineClass(odataObject.SalesLines[i]);
                                }
                            }
                            else {
                                this.SalesLines[i] = undefined;
                            }
                        }
                    }
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                    this.StaffId = odataObject.StaffId;
                    this.StatementCode = odataObject.StatementCode;
                    this.StoreId = odataObject.StoreId;
                    this.SubtotalAmount = (odataObject.SubtotalAmount != null) ? parseFloat(odataObject.SubtotalAmount) : undefined;
                    this.SubtotalAmountWithoutTax = (odataObject.SubtotalAmountWithoutTax != null) ? parseFloat(odataObject.SubtotalAmountWithoutTax) : undefined;
                    this.SubtotalSalesAmount = (odataObject.SubtotalSalesAmount != null) ? parseFloat(odataObject.SubtotalSalesAmount) : undefined;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
                    this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
                    this.TaxLines = undefined;
                    if (odataObject.TaxLines) {
                        this.TaxLines = [];
                        for (var i = 0; i < odataObject.TaxLines.length; i++) {
                            if (odataObject.TaxLines[i] != null) {
                                if (odataObject.TaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i]);
                                    }
                                }
                                else {
                                    this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                                }
                            }
                            else {
                                this.TaxLines[i] = undefined;
                            }
                        }
                    }
                    this.TaxOnCancellationCharge = (odataObject.TaxOnCancellationCharge != null) ? parseFloat(odataObject.TaxOnCancellationCharge) : undefined;
                    this.TaxOverrideCode = odataObject.TaxOverrideCode;
                    this.TenderLines = undefined;
                    if (odataObject.TenderLines) {
                        this.TenderLines = [];
                        for (var i = 0; i < odataObject.TenderLines.length; i++) {
                            if (odataObject.TenderLines[i] != null) {
                                if (odataObject.TenderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i]);
                                    }
                                }
                                else {
                                    this.TenderLines[i] = new TenderLineClass(odataObject.TenderLines[i]);
                                }
                            }
                            else {
                                this.TenderLines[i] = undefined;
                            }
                        }
                    }
                    this.TerminalId = odataObject.TerminalId;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.TotalSalesAmount = (odataObject.TotalSalesAmount != null) ? parseFloat(odataObject.TotalSalesAmount) : undefined;
                    this.TotalReturnAmount = (odataObject.TotalReturnAmount != null) ? parseFloat(odataObject.TotalReturnAmount) : undefined;
                    this.TotalCarryoutSalesAmount = (odataObject.TotalCarryoutSalesAmount != null) ? parseFloat(odataObject.TotalCarryoutSalesAmount) : undefined;
                    this.TotalCustomerOrderSalesAmount = (odataObject.TotalCustomerOrderSalesAmount != null) ? parseFloat(odataObject.TotalCustomerOrderSalesAmount) : undefined;
                    this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
                    this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
                    this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
                    this.TransactionTypeValue = odataObject.TransactionTypeValue;
                    this.TaxCalculationTypeValue = odataObject.TaxCalculationTypeValue;
                    this.SalesInvoiceAmount = (odataObject.SalesInvoiceAmount != null) ? parseFloat(odataObject.SalesInvoiceAmount) : undefined;
                    this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
                        : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
                    this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
                        : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
                    this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
                    this.GiftCardIdMasked = odataObject.GiftCardIdMasked;
                    this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
                    this.HasTaxCalculationTriggered = odataObject.HasTaxCalculationTriggered;
                    this.HasChargeCalculationTriggered = odataObject.HasChargeCalculationTriggered;
                    this.FiscalTransactions = undefined;
                    if (odataObject.FiscalTransactions) {
                        this.FiscalTransactions = [];
                        for (var i = 0; i < odataObject.FiscalTransactions.length; i++) {
                            if (odataObject.FiscalTransactions[i] != null) {
                                if (odataObject.FiscalTransactions[i]['@odata.type'] != null) {
                                    var className = odataObject.FiscalTransactions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.FiscalTransactions[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalTransactions[i]);
                                    }
                                }
                                else {
                                    this.FiscalTransactions[i] = new FiscalTransactionClass(odataObject.FiscalTransactions[i]);
                                }
                            }
                            else {
                                this.FiscalTransactions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SalesOrderClass;
            }());
            Entities.SalesOrderClass = SalesOrderClass;
            var ShiftClass = (function () {
                function ShiftClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.TerminalId = odataObject.TerminalId;
                    this.StartingAmountTotal = (odataObject.StartingAmountTotal != null) ? parseFloat(odataObject.StartingAmountTotal) : undefined;
                    this.FloatingEntryAmountTotal = (odataObject.FloatingEntryAmountTotal != null) ? parseFloat(odataObject.FloatingEntryAmountTotal) : undefined;
                    this.AddToTenderAmountTotal = (odataObject.AddToTenderAmountTotal != null) ? parseFloat(odataObject.AddToTenderAmountTotal) : undefined;
                    this.SafeDropTotal = (odataObject.SafeDropTotal != null) ? parseFloat(odataObject.SafeDropTotal) : undefined;
                    this.BankDropTotal = (odataObject.BankDropTotal != null) ? parseFloat(odataObject.BankDropTotal) : undefined;
                    this.RemoveTenderAmountTotal = (odataObject.RemoveTenderAmountTotal != null) ? parseFloat(odataObject.RemoveTenderAmountTotal) : undefined;
                    this.DeclareTenderAmountTotal = (odataObject.DeclareTenderAmountTotal != null) ? parseFloat(odataObject.DeclareTenderAmountTotal) : undefined;
                    this.OverShortTotal = (odataObject.OverShortTotal != null) ? parseFloat(odataObject.OverShortTotal) : undefined;
                    this.TenderedTotal = (odataObject.TenderedTotal != null) ? parseFloat(odataObject.TenderedTotal) : undefined;
                    this.ChangeTotal = (odataObject.ChangeTotal != null) ? parseFloat(odataObject.ChangeTotal) : undefined;
                    this.IncomeAccountTotal = (odataObject.IncomeAccountTotal != null) ? parseFloat(odataObject.IncomeAccountTotal) : undefined;
                    this.ExpenseAccountTotal = (odataObject.ExpenseAccountTotal != null) ? parseFloat(odataObject.ExpenseAccountTotal) : undefined;
                    this.CashDrawer = odataObject.CashDrawer;
                    this.StoreRecordId = (odataObject.StoreRecordId != null) ? parseInt(odataObject.StoreRecordId, 10) : undefined;
                    this.StoreId = odataObject.StoreId;
                    this.StaffId = odataObject.StaffId;
                    this.CurrentStaffId = odataObject.CurrentStaffId;
                    this.StatusValue = odataObject.StatusValue;
                    this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
                        : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.CloseDateTime = (odataObject.CloseDateTime instanceof Date) ? odataObject.CloseDateTime
                        : (odataObject.CloseDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CloseDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ClosedAtTerminalId = odataObject.ClosedAtTerminalId;
                    this.CurrentTerminalId = odataObject.CurrentTerminalId;
                    this.SalesTotal = (odataObject.SalesTotal != null) ? parseFloat(odataObject.SalesTotal) : undefined;
                    this.StatusDateTime = (odataObject.StatusDateTime instanceof Date) ? odataObject.StatusDateTime
                        : (odataObject.StatusDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StatusDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ReturnsTotal = (odataObject.ReturnsTotal != null) ? parseFloat(odataObject.ReturnsTotal) : undefined;
                    this.PaidToAccountTotal = (odataObject.PaidToAccountTotal != null) ? parseFloat(odataObject.PaidToAccountTotal) : undefined;
                    this.TaxTotal = (odataObject.TaxTotal != null) ? parseFloat(odataObject.TaxTotal) : undefined;
                    this.ChargeTotal = (odataObject.ChargeTotal != null) ? parseFloat(odataObject.ChargeTotal) : undefined;
                    this.DiscountTotal = (odataObject.DiscountTotal != null) ? parseFloat(odataObject.DiscountTotal) : undefined;
                    this.RoundedAmountTotal = (odataObject.RoundedAmountTotal != null) ? parseFloat(odataObject.RoundedAmountTotal) : undefined;
                    this.CustomerCount = odataObject.CustomerCount;
                    this.SaleTransactionCount = odataObject.SaleTransactionCount;
                    this.NoSaleTransactionCount = odataObject.NoSaleTransactionCount;
                    this.VoidTransactionCount = odataObject.VoidTransactionCount;
                    this.LogOnTransactionCount = odataObject.LogOnTransactionCount;
                    this.SuspendedTransactionCount = odataObject.SuspendedTransactionCount;
                    this.TransactionCount = odataObject.TransactionCount;
                    this.ReceiptsCount = odataObject.ReceiptsCount;
                    this.ReturnsCount = odataObject.ReturnsCount;
                    this.GoodsSoldQty = (odataObject.GoodsSoldQty != null) ? parseFloat(odataObject.GoodsSoldQty) : undefined;
                    this.ServicesSoldQty = (odataObject.ServicesSoldQty != null) ? parseFloat(odataObject.ServicesSoldQty) : undefined;
                    this.ReceiptCopiesCount = odataObject.ReceiptCopiesCount;
                    this.ReceiptCopiesTotal = (odataObject.ReceiptCopiesTotal != null) ? parseFloat(odataObject.ReceiptCopiesTotal) : undefined;
                    this.PriceOverrideTotal = (odataObject.PriceOverrideTotal != null) ? parseFloat(odataObject.PriceOverrideTotal) : undefined;
                    this.SuspendedTotal = (odataObject.SuspendedTotal != null) ? parseFloat(odataObject.SuspendedTotal) : undefined;
                    this.SalesTotalIncludingTax = (odataObject.SalesTotalIncludingTax != null) ? parseFloat(odataObject.SalesTotalIncludingTax) : undefined;
                    this.SalesTotalExcludingTax = (odataObject.SalesTotalExcludingTax != null) ? parseFloat(odataObject.SalesTotalExcludingTax) : undefined;
                    this.SalesGrandTotal = (odataObject.SalesGrandTotal != null) ? parseFloat(odataObject.SalesGrandTotal) : undefined;
                    this.ReturnsGrandTotal = (odataObject.ReturnsGrandTotal != null) ? parseFloat(odataObject.ReturnsGrandTotal) : undefined;
                    this.TaxLines = undefined;
                    if (odataObject.TaxLines) {
                        this.TaxLines = [];
                        for (var i = 0; i < odataObject.TaxLines.length; i++) {
                            if (odataObject.TaxLines[i] != null) {
                                if (odataObject.TaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i]);
                                    }
                                }
                                else {
                                    this.TaxLines[i] = new ShiftTaxLineClass(odataObject.TaxLines[i]);
                                }
                            }
                            else {
                                this.TaxLines[i] = undefined;
                            }
                        }
                    }
                    this.TenderLines = undefined;
                    if (odataObject.TenderLines) {
                        this.TenderLines = [];
                        for (var i = 0; i < odataObject.TenderLines.length; i++) {
                            if (odataObject.TenderLines[i] != null) {
                                if (odataObject.TenderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i]);
                                    }
                                }
                                else {
                                    this.TenderLines[i] = new ShiftTenderLineClass(odataObject.TenderLines[i]);
                                }
                            }
                            else {
                                this.TenderLines[i] = undefined;
                            }
                        }
                    }
                    this.AccountLines = undefined;
                    if (odataObject.AccountLines) {
                        this.AccountLines = [];
                        for (var i = 0; i < odataObject.AccountLines.length; i++) {
                            if (odataObject.AccountLines[i] != null) {
                                if (odataObject.AccountLines[i]['@odata.type'] != null) {
                                    var className = odataObject.AccountLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AccountLines[i] = new Commerce.Proxy.Entities[className](odataObject.AccountLines[i]);
                                    }
                                }
                                else {
                                    this.AccountLines[i] = new ShiftAccountLineClass(odataObject.AccountLines[i]);
                                }
                            }
                            else {
                                this.AccountLines[i] = undefined;
                            }
                        }
                    }
                    this.IsShared = odataObject.IsShared;
                    this.GiftCardsTotal = (odataObject.GiftCardsTotal != null) ? parseFloat(odataObject.GiftCardsTotal) : undefined;
                    this.GiftCardCashOutTotal = (odataObject.GiftCardCashOutTotal != null) ? parseFloat(odataObject.GiftCardCashOutTotal) : undefined;
                    this.VoidedSalesTotal = (odataObject.VoidedSalesTotal != null) ? parseFloat(odataObject.VoidedSalesTotal) : undefined;
                    this.ShiftSalesTotal = (odataObject.ShiftSalesTotal != null) ? parseFloat(odataObject.ShiftSalesTotal) : undefined;
                    this.ShiftReturnsTotal = (odataObject.ShiftReturnsTotal != null) ? parseFloat(odataObject.ShiftReturnsTotal) : undefined;
                    this.NumberOfUnreconciledLines = (odataObject.NumberOfUnreconciledLines != null) ? parseFloat(odataObject.NumberOfUnreconciledLines) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShiftClass;
            }());
            Entities.ShiftClass = ShiftClass;
            var StockCountJournalClass = (function () {
                function StockCountJournalClass(odataObject) {
                    odataObject = odataObject || {};
                    this.JournalId = odataObject.JournalId;
                    this.RecordId = odataObject.RecordId;
                    this.Description = odataObject.Description;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.StockCountTransactionLines = undefined;
                    if (odataObject.StockCountTransactionLines) {
                        this.StockCountTransactionLines = [];
                        for (var i = 0; i < odataObject.StockCountTransactionLines.length; i++) {
                            if (odataObject.StockCountTransactionLines[i] != null) {
                                if (odataObject.StockCountTransactionLines[i]['@odata.type'] != null) {
                                    var className = odataObject.StockCountTransactionLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.StockCountTransactionLines[i] = new Commerce.Proxy.Entities[className](odataObject.StockCountTransactionLines[i]);
                                    }
                                }
                                else {
                                    this.StockCountTransactionLines[i] = new StockCountJournalTransactionClass(odataObject.StockCountTransactionLines[i]);
                                }
                            }
                            else {
                                this.StockCountTransactionLines[i] = undefined;
                            }
                        }
                    }
                    this.Worker = odataObject.Worker;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return StockCountJournalClass;
            }());
            Entities.StockCountJournalClass = StockCountJournalClass;
            var OrgUnitClass = (function () {
                function OrgUnitClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrgUnitNumber = odataObject.OrgUnitNumber;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.OMOperatingUnitNumber = odataObject.OMOperatingUnitNumber;
                    this.TaxGroup = odataObject.TaxGroup;
                    this.FunctionalityProfileId = odataObject.FunctionalityProfileId;
                    this.UseCustomerBasedTax = odataObject.UseCustomerBasedTax;
                    this.UseDestinationBasedTax = odataObject.UseDestinationBasedTax;
                    this.Currency = odataObject.Currency;
                    if (odataObject.OrgUnitAddress == null) {
                        this.OrgUnitAddress = undefined;
                    }
                    else if (odataObject.OrgUnitAddress['@odata.type'] == null) {
                        this.OrgUnitAddress = new AddressClass(odataObject.OrgUnitAddress);
                    }
                    else {
                        var className = odataObject.OrgUnitAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.OrgUnitAddress = new Commerce.Proxy.Entities[className](odataObject.OrgUnitAddress);
                        }
                    }
                    this.OrgUnitFullAddress = odataObject.OrgUnitFullAddress;
                    this.OrgUnitName = odataObject.OrgUnitName;
                    this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
                    this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
                    this.EmailReceiptProfileId = odataObject.EmailReceiptProfileId;
                    if (odataObject.ShippingWarehouseAddress == null) {
                        this.ShippingWarehouseAddress = undefined;
                    }
                    else if (odataObject.ShippingWarehouseAddress['@odata.type'] == null) {
                        this.ShippingWarehouseAddress = new AddressClass(odataObject.ShippingWarehouseAddress);
                    }
                    else {
                        var className = odataObject.ShippingWarehouseAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingWarehouseAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingWarehouseAddress);
                        }
                    }
                    this.DefaultCustomerAccount = odataObject.DefaultCustomerAccount;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OrgUnitClass;
            }());
            Entities.OrgUnitClass = OrgUnitClass;
            var ProductClass = (function () {
                function ProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ProductName = odataObject.ProductName;
                    this.ProductNumber = odataObject.ProductNumber;
                    this.Description = odataObject.Description;
                    this.IsMasterProduct = odataObject.IsMasterProduct;
                    this.IsKit = odataObject.IsKit;
                    this.ItemId = odataObject.ItemId;
                    this.HasLinkedProducts = odataObject.HasLinkedProducts;
                    if (odataObject.Rules == null) {
                        this.Rules = undefined;
                    }
                    else if (odataObject.Rules['@odata.type'] == null) {
                        this.Rules = new ProductRulesClass(odataObject.Rules);
                    }
                    else {
                        var className = odataObject.Rules['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Rules = new Commerce.Proxy.Entities[className](odataObject.Rules);
                        }
                    }
                    this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
                    this.Name = odataObject.Name;
                    this.Locale = odataObject.Locale;
                    this.OfflineImage = odataObject.OfflineImage;
                    this.IsRemote = odataObject.IsRemote;
                    if (odataObject.ChangeTrackingInformation == null) {
                        this.ChangeTrackingInformation = undefined;
                    }
                    else if (odataObject.ChangeTrackingInformation['@odata.type'] == null) {
                        this.ChangeTrackingInformation = new ProductChangeTrackingInformationClass(odataObject.ChangeTrackingInformation);
                    }
                    else {
                        var className = odataObject.ChangeTrackingInformation['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ChangeTrackingInformation = new Commerce.Proxy.Entities[className](odataObject.ChangeTrackingInformation);
                        }
                    }
                    if (odataObject.Image == null) {
                        this.Image = undefined;
                    }
                    else if (odataObject.Image['@odata.type'] == null) {
                        this.Image = new RichMediaLocationsClass(odataObject.Image);
                    }
                    else {
                        var className = odataObject.Image['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Image = new Commerce.Proxy.Entities[className](odataObject.Image);
                        }
                    }
                    this.UnitsOfMeasureSymbol = undefined;
                    if (odataObject.UnitsOfMeasureSymbol) {
                        this.UnitsOfMeasureSymbol = [];
                        for (var i = 0; i < odataObject.UnitsOfMeasureSymbol.length; i++) {
                            if (odataObject.UnitsOfMeasureSymbol[i] != null) {
                                this.UnitsOfMeasureSymbol[i] = odataObject.UnitsOfMeasureSymbol[i];
                            }
                            else {
                                this.UnitsOfMeasureSymbol[i] = undefined;
                            }
                        }
                    }
                    this.LinkedProducts = undefined;
                    if (odataObject.LinkedProducts) {
                        this.LinkedProducts = [];
                        for (var i = 0; i < odataObject.LinkedProducts.length; i++) {
                            if (odataObject.LinkedProducts[i] != null) {
                                if (odataObject.LinkedProducts[i]['@odata.type'] != null) {
                                    var className = odataObject.LinkedProducts[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LinkedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.LinkedProducts[i]);
                                    }
                                }
                                else {
                                    this.LinkedProducts[i] = new LinkedProductClass(odataObject.LinkedProducts[i]);
                                }
                            }
                            else {
                                this.LinkedProducts[i] = undefined;
                            }
                        }
                    }
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    if (odataObject.RetailContext == null) {
                        this.RetailContext = undefined;
                    }
                    else if (odataObject.RetailContext['@odata.type'] == null) {
                        this.RetailContext = new ProjectionDomainClass(odataObject.RetailContext);
                    }
                    else {
                        var className = odataObject.RetailContext['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.RetailContext = new Commerce.Proxy.Entities[className](odataObject.RetailContext);
                        }
                    }
                    this.PrimaryCategoryId = (odataObject.PrimaryCategoryId != null) ? parseInt(odataObject.PrimaryCategoryId, 10) : undefined;
                    this.CategoryIds = undefined;
                    if (odataObject.CategoryIds) {
                        this.CategoryIds = [];
                        for (var i = 0; i < odataObject.CategoryIds.length; i++) {
                            if (odataObject.CategoryIds[i] != null) {
                                this.CategoryIds[i] = parseInt(odataObject.CategoryIds[i], 10);
                            }
                            else {
                                this.CategoryIds[i] = undefined;
                            }
                        }
                    }
                    this.RelatedProducts = undefined;
                    if (odataObject.RelatedProducts) {
                        this.RelatedProducts = [];
                        for (var i = 0; i < odataObject.RelatedProducts.length; i++) {
                            if (odataObject.RelatedProducts[i] != null) {
                                if (odataObject.RelatedProducts[i]['@odata.type'] != null) {
                                    var className = odataObject.RelatedProducts[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.RelatedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.RelatedProducts[i]);
                                    }
                                }
                                else {
                                    this.RelatedProducts[i] = new RelatedProductClass(odataObject.RelatedProducts[i]);
                                }
                            }
                            else {
                                this.RelatedProducts[i] = undefined;
                            }
                        }
                    }
                    this.ProductsRelatedToThis = undefined;
                    if (odataObject.ProductsRelatedToThis) {
                        this.ProductsRelatedToThis = [];
                        for (var i = 0; i < odataObject.ProductsRelatedToThis.length; i++) {
                            if (odataObject.ProductsRelatedToThis[i] != null) {
                                if (odataObject.ProductsRelatedToThis[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductsRelatedToThis[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductsRelatedToThis[i] = new Commerce.Proxy.Entities[className](odataObject.ProductsRelatedToThis[i]);
                                    }
                                }
                                else {
                                    this.ProductsRelatedToThis[i] = new RelatedProductClass(odataObject.ProductsRelatedToThis[i]);
                                }
                            }
                            else {
                                this.ProductsRelatedToThis[i] = undefined;
                            }
                        }
                    }
                    this.ProductSchema = undefined;
                    if (odataObject.ProductSchema) {
                        this.ProductSchema = [];
                        for (var i = 0; i < odataObject.ProductSchema.length; i++) {
                            if (odataObject.ProductSchema[i] != null) {
                                this.ProductSchema[i] = odataObject.ProductSchema[i];
                            }
                            else {
                                this.ProductSchema[i] = undefined;
                            }
                        }
                    }
                    this.ProductProperties = undefined;
                    if (odataObject.ProductProperties) {
                        this.ProductProperties = [];
                        for (var i = 0; i < odataObject.ProductProperties.length; i++) {
                            if (odataObject.ProductProperties[i] != null) {
                                if (odataObject.ProductProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ProductProperties[i]);
                                    }
                                }
                                else {
                                    this.ProductProperties[i] = new ProductPropertyTranslationClass(odataObject.ProductProperties[i]);
                                }
                            }
                            else {
                                this.ProductProperties[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.CompositionInformation == null) {
                        this.CompositionInformation = undefined;
                    }
                    else if (odataObject.CompositionInformation['@odata.type'] == null) {
                        this.CompositionInformation = new ProductCompositionInformationClass(odataObject.CompositionInformation);
                    }
                    else {
                        var className = odataObject.CompositionInformation['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.CompositionInformation = new Commerce.Proxy.Entities[className](odataObject.CompositionInformation);
                        }
                    }
                    this.ParentKits = undefined;
                    if (odataObject.ParentKits) {
                        this.ParentKits = [];
                        for (var i = 0; i < odataObject.ParentKits.length; i++) {
                            if (odataObject.ParentKits[i] != null) {
                                if (odataObject.ParentKits[i]['@odata.type'] != null) {
                                    var className = odataObject.ParentKits[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ParentKits[i] = new Commerce.Proxy.Entities[className](odataObject.ParentKits[i]);
                                    }
                                }
                                else {
                                    this.ParentKits[i] = new KitComponentClass(odataObject.ParentKits[i]);
                                }
                            }
                            else {
                                this.ParentKits[i] = undefined;
                            }
                        }
                    }
                    this.SearchName = odataObject.SearchName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductClass;
            }());
            Entities.ProductClass = ProductClass;
            var ProductCatalogClass = (function () {
                function ProductCatalogClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.Language = odataObject.Language;
                    this.IsSnapshotEnabled = odataObject.IsSnapshotEnabled;
                    this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
                        : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
                        : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
                    this.CreatedOn = (odataObject.CreatedOn instanceof Date) ? odataObject.CreatedOn
                        : (odataObject.CreatedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedOn, "Edm.DateTimeOffset", false) : undefined;
                    this.ModifiedOn = (odataObject.ModifiedOn instanceof Date) ? odataObject.ModifiedOn
                        : (odataObject.ModifiedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedOn, "Edm.DateTimeOffset", false) : undefined;
                    this.PublishedOn = (odataObject.PublishedOn instanceof Date) ? odataObject.PublishedOn
                        : (odataObject.PublishedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.PublishedOn, "Edm.DateTimeOffset", false) : undefined;
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.DefaultImage = odataObject.DefaultImage;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductCatalogClass;
            }());
            Entities.ProductCatalogClass = ProductCatalogClass;
            var CommerceListClass = (function () {
                function CommerceListClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerName = odataObject.CustomerName;
                    this.IsFavorite = odataObject.IsFavorite;
                    this.IsRecurring = odataObject.IsRecurring;
                    this.IsPrivate = odataObject.IsPrivate;
                    this.IsCollaborative = odataObject.IsCollaborative;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.DueDateTime = (odataObject.DueDateTime instanceof Date) ? odataObject.DueDateTime
                        : (odataObject.DueDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DueDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.CommerceListTypeValue = odataObject.CommerceListTypeValue;
                    this.CommerceListLines = undefined;
                    if (odataObject.CommerceListLines) {
                        this.CommerceListLines = [];
                        for (var i = 0; i < odataObject.CommerceListLines.length; i++) {
                            if (odataObject.CommerceListLines[i] != null) {
                                if (odataObject.CommerceListLines[i]['@odata.type'] != null) {
                                    var className = odataObject.CommerceListLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CommerceListLines[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListLines[i]);
                                    }
                                }
                                else {
                                    this.CommerceListLines[i] = new CommerceListLineClass(odataObject.CommerceListLines[i]);
                                }
                            }
                            else {
                                this.CommerceListLines[i] = undefined;
                            }
                        }
                    }
                    this.CommerceListContributors = undefined;
                    if (odataObject.CommerceListContributors) {
                        this.CommerceListContributors = [];
                        for (var i = 0; i < odataObject.CommerceListContributors.length; i++) {
                            if (odataObject.CommerceListContributors[i] != null) {
                                if (odataObject.CommerceListContributors[i]['@odata.type'] != null) {
                                    var className = odataObject.CommerceListContributors[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CommerceListContributors[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListContributors[i]);
                                    }
                                }
                                else {
                                    this.CommerceListContributors[i] = new CommerceListContributorClass(odataObject.CommerceListContributors[i]);
                                }
                            }
                            else {
                                this.CommerceListContributors[i] = undefined;
                            }
                        }
                    }
                    this.CommerceListInvitations = undefined;
                    if (odataObject.CommerceListInvitations) {
                        this.CommerceListInvitations = [];
                        for (var i = 0; i < odataObject.CommerceListInvitations.length; i++) {
                            if (odataObject.CommerceListInvitations[i] != null) {
                                if (odataObject.CommerceListInvitations[i]['@odata.type'] != null) {
                                    var className = odataObject.CommerceListInvitations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CommerceListInvitations[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListInvitations[i]);
                                    }
                                }
                                else {
                                    this.CommerceListInvitations[i] = new CommerceListInvitationClass(odataObject.CommerceListInvitations[i]);
                                }
                            }
                            else {
                                this.CommerceListInvitations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommerceListClass;
            }());
            Entities.CommerceListClass = CommerceListClass;
            var TransferOrderClass = (function () {
                function TransferOrderClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrderId = odataObject.OrderId;
                    this.RecordId = odataObject.RecordId;
                    this.Status = odataObject.Status;
                    this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
                    this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
                    this.OrderTypeValue = odataObject.OrderTypeValue;
                    this.InventLocationIdFrom = odataObject.InventLocationIdFrom;
                    this.InventLocationIdTo = odataObject.InventLocationIdTo;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
                    this.QuantityShipNow = (odataObject.QuantityShipNow != null) ? parseFloat(odataObject.QuantityShipNow) : undefined;
                    this.QuantityReceiveNow = (odataObject.QuantityReceiveNow != null) ? parseFloat(odataObject.QuantityReceiveNow) : undefined;
                    this.QuantityShipRemaining = (odataObject.QuantityShipRemaining != null) ? parseFloat(odataObject.QuantityShipRemaining) : undefined;
                    this.QuantityReceiveRemaining = (odataObject.QuantityReceiveRemaining != null) ? parseFloat(odataObject.QuantityReceiveRemaining) : undefined;
                    this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
                        : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
                    this.ReceiveDate = (odataObject.ReceiveDate instanceof Date) ? odataObject.ReceiveDate
                        : (odataObject.ReceiveDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ReceiveDate, "Edm.DateTimeOffset", false) : undefined;
                    this.DeliveryModeId = odataObject.DeliveryModeId;
                    this.OrderLines = undefined;
                    if (odataObject.OrderLines) {
                        this.OrderLines = [];
                        for (var i = 0; i < odataObject.OrderLines.length; i++) {
                            if (odataObject.OrderLines[i] != null) {
                                if (odataObject.OrderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.OrderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i]);
                                    }
                                }
                                else {
                                    this.OrderLines[i] = new TransferOrderLineClass(odataObject.OrderLines[i]);
                                }
                            }
                            else {
                                this.OrderLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TransferOrderClass;
            }());
            Entities.TransferOrderClass = TransferOrderClass;
            var PurchaseOrderClass = (function () {
                function PurchaseOrderClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrderId = odataObject.OrderId;
                    this.RecordId = odataObject.RecordId;
                    this.Status = odataObject.Status;
                    this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
                    this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
                    this.OrderTypeValue = odataObject.OrderTypeValue;
                    this.TotalReceived = (odataObject.TotalReceived != null) ? parseFloat(odataObject.TotalReceived) : undefined;
                    this.OrderLines = undefined;
                    if (odataObject.OrderLines) {
                        this.OrderLines = [];
                        for (var i = 0; i < odataObject.OrderLines.length; i++) {
                            if (odataObject.OrderLines[i] != null) {
                                if (odataObject.OrderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.OrderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i]);
                                    }
                                }
                                else {
                                    this.OrderLines[i] = new PurchaseOrderLineClass(odataObject.OrderLines[i]);
                                }
                            }
                            else {
                                this.OrderLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PurchaseOrderClass;
            }());
            Entities.PurchaseOrderClass = PurchaseOrderClass;
            var PickingListClass = (function () {
                function PickingListClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrderId = odataObject.OrderId;
                    this.RecordId = odataObject.RecordId;
                    this.Status = odataObject.Status;
                    this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
                    this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
                    this.OrderTypeValue = odataObject.OrderTypeValue;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.DeliveryDate = (odataObject.DeliveryDate instanceof Date) ? odataObject.DeliveryDate
                        : (odataObject.DeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.TotalReceived = (odataObject.TotalReceived != null) ? parseFloat(odataObject.TotalReceived) : undefined;
                    this.OrderLines = undefined;
                    if (odataObject.OrderLines) {
                        this.OrderLines = [];
                        for (var i = 0; i < odataObject.OrderLines.length; i++) {
                            if (odataObject.OrderLines[i] != null) {
                                if (odataObject.OrderLines[i]['@odata.type'] != null) {
                                    var className = odataObject.OrderLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i]);
                                    }
                                }
                                else {
                                    this.OrderLines[i] = new PickingListLineClass(odataObject.OrderLines[i]);
                                }
                            }
                            else {
                                this.OrderLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PickingListClass;
            }());
            Entities.PickingListClass = PickingListClass;
            var WarehouseClass = (function () {
                function WarehouseClass(odataObject) {
                    odataObject = odataObject || {};
                    this.InventLocation = odataObject.InventLocation;
                    this.Name = odataObject.Name;
                    this.IsWMSEnabled = odataObject.IsWMSEnabled;
                    this.DefaultInventoryStatus = odataObject.DefaultInventoryStatus;
                    this.DefaultReceiptLocation = odataObject.DefaultReceiptLocation;
                    this.DefaultLocationId = odataObject.DefaultLocationId;
                    this.DefaultIssueLocation = odataObject.DefaultIssueLocation;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return WarehouseClass;
            }());
            Entities.WarehouseClass = WarehouseClass;
            var ScanResultClass = (function () {
                function ScanResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ScannedText = odataObject.ScannedText;
                    this.MaskTypeValue = odataObject.MaskTypeValue;
                    if (odataObject.Barcode == null) {
                        this.Barcode = undefined;
                    }
                    else if (odataObject.Barcode['@odata.type'] == null) {
                        this.Barcode = new BarcodeClass(odataObject.Barcode);
                    }
                    else {
                        var className = odataObject.Barcode['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Barcode = new Commerce.Proxy.Entities[className](odataObject.Barcode);
                        }
                    }
                    if (odataObject.Product == null) {
                        this.Product = undefined;
                    }
                    else if (odataObject.Product['@odata.type'] == null) {
                        this.Product = new SimpleProductClass(odataObject.Product);
                    }
                    else {
                        var className = odataObject.Product['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Product = new Commerce.Proxy.Entities[className](odataObject.Product);
                        }
                    }
                    if (odataObject.LoyaltyCard == null) {
                        this.LoyaltyCard = undefined;
                    }
                    else if (odataObject.LoyaltyCard['@odata.type'] == null) {
                        this.LoyaltyCard = new LoyaltyCardClass(odataObject.LoyaltyCard);
                    }
                    else {
                        var className = odataObject.LoyaltyCard['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.LoyaltyCard = new Commerce.Proxy.Entities[className](odataObject.LoyaltyCard);
                        }
                    }
                    if (odataObject.GiftCard == null) {
                        this.GiftCard = undefined;
                    }
                    else if (odataObject.GiftCard['@odata.type'] == null) {
                        this.GiftCard = new GiftCardClass(odataObject.GiftCard);
                    }
                    else {
                        var className = odataObject.GiftCard['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.GiftCard = new Commerce.Proxy.Entities[className](odataObject.GiftCard);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.Customer == null) {
                        this.Customer = undefined;
                    }
                    else if (odataObject.Customer['@odata.type'] == null) {
                        this.Customer = new CustomerClass(odataObject.Customer);
                    }
                    else {
                        var className = odataObject.Customer['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Customer = new Commerce.Proxy.Entities[className](odataObject.Customer);
                        }
                    }
                }
                ScanResultClass.customerPropertyName = "Customer";
                return ScanResultClass;
            }());
            Entities.ScanResultClass = ScanResultClass;
            var OrderShipmentsClass = (function () {
                function OrderShipmentsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesId = odataObject.SalesId;
                    this.Shipments = undefined;
                    if (odataObject.Shipments) {
                        this.Shipments = [];
                        for (var i = 0; i < odataObject.Shipments.length; i++) {
                            if (odataObject.Shipments[i] != null) {
                                if (odataObject.Shipments[i]['@odata.type'] != null) {
                                    var className = odataObject.Shipments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Shipments[i] = new Commerce.Proxy.Entities[className](odataObject.Shipments[i]);
                                    }
                                }
                                else {
                                    this.Shipments[i] = new ShipmentClass(odataObject.Shipments[i]);
                                }
                            }
                            else {
                                this.Shipments[i] = undefined;
                            }
                        }
                    }
                    this.SalesLines = undefined;
                    if (odataObject.SalesLines) {
                        this.SalesLines = [];
                        for (var i = 0; i < odataObject.SalesLines.length; i++) {
                            if (odataObject.SalesLines[i] != null) {
                                if (odataObject.SalesLines[i]['@odata.type'] != null) {
                                    var className = odataObject.SalesLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SalesLines[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLines[i]);
                                    }
                                }
                                else {
                                    this.SalesLines[i] = new SalesLineClass(odataObject.SalesLines[i]);
                                }
                            }
                            else {
                                this.SalesLines[i] = undefined;
                            }
                        }
                    }
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Status = odataObject.Status;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.CustomerId = odataObject.CustomerId;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OrderShipmentsClass;
            }());
            Entities.OrderShipmentsClass = OrderShipmentsClass;
            var SuspendedCartClass = (function () {
                function SuspendedCartClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.Cart == null) {
                        this.Cart = undefined;
                    }
                    else if (odataObject.Cart['@odata.type'] == null) {
                        this.Cart = new CartClass(odataObject.Cart);
                    }
                    else {
                        var className = odataObject.Cart['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Cart = new Commerce.Proxy.Entities[className](odataObject.Cart);
                        }
                    }
                }
                SuspendedCartClass.cartPropertyName = "Cart";
                return SuspendedCartClass;
            }());
            Entities.SuspendedCartClass = SuspendedCartClass;
            var ExtensibleEnumerationClass = (function () {
                function ExtensibleEnumerationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.Value = odataObject.Value;
                }
                return ExtensibleEnumerationClass;
            }());
            Entities.ExtensibleEnumerationClass = ExtensibleEnumerationClass;
            var ExtensibleEnumeration_1OfTClass = (function (_super) {
                __extends(ExtensibleEnumeration_1OfTClass, _super);
                function ExtensibleEnumeration_1OfTClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.Framework.ExtensibleEnumeration_1OfT";
                    return _this;
                }
                return ExtensibleEnumeration_1OfTClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleEnumeration_1OfTClass = ExtensibleEnumeration_1OfTClass;
            var ExtensibleTransactionTypeClass = (function (_super) {
                __extends(ExtensibleTransactionTypeClass, _super);
                function ExtensibleTransactionTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleTransactionType";
                    return _this;
                }
                return ExtensibleTransactionTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleTransactionTypeClass = ExtensibleTransactionTypeClass;
            var ExtensibleSalesTransactionTypeClass = (function (_super) {
                __extends(ExtensibleSalesTransactionTypeClass, _super);
                function ExtensibleSalesTransactionTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleSalesTransactionType";
                    return _this;
                }
                return ExtensibleSalesTransactionTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleSalesTransactionTypeClass = ExtensibleSalesTransactionTypeClass;
            var FulfillmentLineStatusClass = (function (_super) {
                __extends(FulfillmentLineStatusClass, _super);
                function FulfillmentLineStatusClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineStatus";
                    return _this;
                }
                return FulfillmentLineStatusClass;
            }(ExtensibleEnumerationClass));
            Entities.FulfillmentLineStatusClass = FulfillmentLineStatusClass;
            var FulfillmentLineDeliveryTypeClass = (function (_super) {
                __extends(FulfillmentLineDeliveryTypeClass, _super);
                function FulfillmentLineDeliveryTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineDeliveryType";
                    return _this;
                }
                return FulfillmentLineDeliveryTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.FulfillmentLineDeliveryTypeClass = FulfillmentLineDeliveryTypeClass;
            var ExtensibleAddressTypeClass = (function (_super) {
                __extends(ExtensibleAddressTypeClass, _super);
                function ExtensibleAddressTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAddressType";
                    return _this;
                }
                return ExtensibleAddressTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleAddressTypeClass = ExtensibleAddressTypeClass;
            var ExtensibleLoyaltyRewardPointActivityEntryTypeClass = (function (_super) {
                __extends(ExtensibleLoyaltyRewardPointActivityEntryTypeClass, _super);
                function ExtensibleLoyaltyRewardPointActivityEntryTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleLoyaltyRewardPointActivityEntryType";
                    return _this;
                }
                return ExtensibleLoyaltyRewardPointActivityEntryTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleLoyaltyRewardPointActivityEntryTypeClass = ExtensibleLoyaltyRewardPointActivityEntryTypeClass;
            var AddressClass = (function () {
                function AddressClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.FullAddress = odataObject.FullAddress;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Street = odataObject.Street;
                    this.StreetNumber = odataObject.StreetNumber;
                    this.County = odataObject.County;
                    this.CountyName = odataObject.CountyName;
                    this.City = odataObject.City;
                    this.DistrictName = odataObject.DistrictName;
                    this.State = odataObject.State;
                    this.StateName = odataObject.StateName;
                    this.ZipCode = odataObject.ZipCode;
                    this.ThreeLetterISORegionName = odataObject.ThreeLetterISORegionName;
                    this.Phone = odataObject.Phone;
                    this.PhoneRecordId = (odataObject.PhoneRecordId != null) ? parseInt(odataObject.PhoneRecordId, 10) : undefined;
                    this.PhoneExt = odataObject.PhoneExt;
                    this.Email = odataObject.Email;
                    this.EmailContent = odataObject.EmailContent;
                    this.EmailRecordId = (odataObject.EmailRecordId != null) ? parseInt(odataObject.EmailRecordId, 10) : undefined;
                    this.Url = odataObject.Url;
                    this.UrlRecordId = (odataObject.UrlRecordId != null) ? parseInt(odataObject.UrlRecordId, 10) : undefined;
                    this.TwoLetterISORegionName = odataObject.TwoLetterISORegionName;
                    this.Deactivate = odataObject.Deactivate;
                    this.AttentionTo = odataObject.AttentionTo;
                    this.BuildingCompliment = odataObject.BuildingCompliment;
                    this.Postbox = odataObject.Postbox;
                    this.TaxGroup = odataObject.TaxGroup;
                    this.AddressTypeValue = odataObject.AddressTypeValue;
                    this.IsPrimary = odataObject.IsPrimary;
                    this.IsPrivate = odataObject.IsPrivate;
                    this.PartyNumber = odataObject.PartyNumber;
                    this.IsAsyncAddress = odataObject.IsAsyncAddress;
                    this.DirectoryPartyTableRecordId = (odataObject.DirectoryPartyTableRecordId != null) ? parseInt(odataObject.DirectoryPartyTableRecordId, 10) : undefined;
                    this.DirectoryPartyLocationRecordId = (odataObject.DirectoryPartyLocationRecordId != null) ? parseInt(odataObject.DirectoryPartyLocationRecordId, 10) : undefined;
                    this.DirectoryPartyLocationRoleRecordId = (odataObject.DirectoryPartyLocationRoleRecordId != null) ? parseInt(odataObject.DirectoryPartyLocationRoleRecordId, 10) : undefined;
                    this.LogisticsLocationId = odataObject.LogisticsLocationId;
                    this.LogisticsLocationRecordId = (odataObject.LogisticsLocationRecordId != null) ? parseInt(odataObject.LogisticsLocationRecordId, 10) : undefined;
                    this.LogisticsLocationExtRecordId = (odataObject.LogisticsLocationExtRecordId != null) ? parseInt(odataObject.LogisticsLocationExtRecordId, 10) : undefined;
                    this.LogisticsLocationRoleRecordId = (odataObject.LogisticsLocationRoleRecordId != null) ? parseInt(odataObject.LogisticsLocationRoleRecordId, 10) : undefined;
                    this.PhoneLogisticsLocationRecordId = (odataObject.PhoneLogisticsLocationRecordId != null) ? parseInt(odataObject.PhoneLogisticsLocationRecordId, 10) : undefined;
                    this.PhoneLogisticsLocationId = odataObject.PhoneLogisticsLocationId;
                    this.EmailLogisticsLocationRecordId = (odataObject.EmailLogisticsLocationRecordId != null) ? parseInt(odataObject.EmailLogisticsLocationRecordId, 10) : undefined;
                    this.EmailLogisticsLocationId = odataObject.EmailLogisticsLocationId;
                    this.UrlLogisticsLocationRecordId = (odataObject.UrlLogisticsLocationRecordId != null) ? parseInt(odataObject.UrlLogisticsLocationRecordId, 10) : undefined;
                    this.UrlLogisticsLocationId = odataObject.UrlLogisticsLocationId;
                    this.ExpireRecordId = (odataObject.ExpireRecordId != null) ? parseInt(odataObject.ExpireRecordId, 10) : undefined;
                    this.SortOrder = odataObject.SortOrder;
                    this.RoleCount = odataObject.RoleCount;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AddressClass;
            }());
            Entities.AddressClass = AddressClass;
            var CustomerAffiliationClass = (function () {
                function CustomerAffiliationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.RetailAffiliationId = (odataObject.RetailAffiliationId != null) ? parseInt(odataObject.RetailAffiliationId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.HideInChannels = odataObject.HideInChannels;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerAffiliationClass;
            }());
            Entities.CustomerAffiliationClass = CustomerAffiliationClass;
            var CustomerBalancesClass = (function () {
                function CustomerBalancesClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
                    this.PendingBalance = (odataObject.PendingBalance != null) ? parseFloat(odataObject.PendingBalance) : undefined;
                    this.CreditLimit = (odataObject.CreditLimit != null) ? parseFloat(odataObject.CreditLimit) : undefined;
                    this.InvoiceAccountBalance = (odataObject.InvoiceAccountBalance != null) ? parseFloat(odataObject.InvoiceAccountBalance) : undefined;
                    this.InvoiceAccountPendingBalance = (odataObject.InvoiceAccountPendingBalance != null) ? parseFloat(odataObject.InvoiceAccountPendingBalance) : undefined;
                    this.InvoiceAccountCreditLimit = (odataObject.InvoiceAccountCreditLimit != null) ? parseFloat(odataObject.InvoiceAccountCreditLimit) : undefined;
                }
                return CustomerBalancesClass;
            }());
            Entities.CustomerBalancesClass = CustomerBalancesClass;
            var GlobalCustomerClass = (function () {
                function GlobalCustomerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PartyNumber = odataObject.PartyNumber;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.IsAsyncCustomer = odataObject.IsAsyncCustomer;
                    this.AccountNumber = odataObject.AccountNumber;
                    this.FullName = odataObject.FullName;
                    this.FullAddress = odataObject.FullAddress;
                    this.Phone = odataObject.Phone;
                    this.Email = odataObject.Email;
                    this.CustomerTypeValue = odataObject.CustomerTypeValue;
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.OfflineImage = odataObject.OfflineImage;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return GlobalCustomerClass;
            }());
            Entities.GlobalCustomerClass = GlobalCustomerClass;
            var AttributeValueClass = (function () {
                function AttributeValueClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.BooleanValue = odataObject.BooleanValue;
                    this.DateTimeOffsetValue = (odataObject.DateTimeOffsetValue instanceof Date) ? odataObject.DateTimeOffsetValue
                        : (odataObject.DateTimeOffsetValue != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTimeOffsetValue, "Edm.DateTimeOffset", false) : undefined;
                    this.FloatValue = (odataObject.FloatValue != null) ? parseFloat(odataObject.FloatValue) : undefined;
                    this.IntegerValue = odataObject.IntegerValue;
                    this.TextValue = odataObject.TextValue;
                    this.CurrencyValue = (odataObject.CurrencyValue != null) ? parseFloat(odataObject.CurrencyValue) : undefined;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.AttributeValueId = (odataObject.AttributeValueId != null) ? parseInt(odataObject.AttributeValueId, 10) : undefined;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeValueClass;
            }());
            Entities.AttributeValueClass = AttributeValueClass;
            var AttributeValueBaseClass = (function () {
                function AttributeValueBaseClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeValueBaseClass;
            }());
            Entities.AttributeValueBaseClass = AttributeValueBaseClass;
            var BarcodeClass = (function () {
                function BarcodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.BarcodeId = odataObject.BarcodeId;
                    this.BarcodePrice = (odataObject.BarcodePrice != null) ? parseFloat(odataObject.BarcodePrice) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.CustomerId = odataObject.CustomerId;
                    this.EmployeeId = odataObject.EmployeeId;
                    this.SalespersonId = odataObject.SalespersonId;
                    this.EANLicenseId = odataObject.EANLicenseId;
                    this.DataEntry = odataObject.DataEntry;
                    this.DiscountCode = odataObject.DiscountCode;
                    this.GiftCardNumber = odataObject.GiftCardNumber;
                    this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
                    if (odataObject.ItemBarcode == null) {
                        this.ItemBarcode = undefined;
                    }
                    else if (odataObject.ItemBarcode['@odata.type'] == null) {
                        this.ItemBarcode = new ItemBarcodeClass(odataObject.ItemBarcode);
                    }
                    else {
                        var className = odataObject.ItemBarcode['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ItemBarcode = new Commerce.Proxy.Entities[className](odataObject.ItemBarcode);
                        }
                    }
                    this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
                    this.ItemType = odataObject.ItemType;
                    this.EnterDimensions = odataObject.EnterDimensions;
                    this.ItemGroupId = odataObject.ItemGroupId;
                    this.ItemDepartmentId = odataObject.ItemDepartmentId;
                    this.ScaleItem = odataObject.ScaleItem;
                    this.ZeroPriceValid = odataObject.ZeroPriceValid;
                    this.NegativeQuantity = odataObject.NegativeQuantity;
                    this.DiscountNotAllowed = odataObject.DiscountNotAllowed;
                    this.DateToBeBlocked = (odataObject.DateToBeBlocked instanceof Date) ? odataObject.DateToBeBlocked
                        : (odataObject.DateToBeBlocked != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBeBlocked, "Edm.DateTimeOffset", false) : undefined;
                    this.DateToBeActivated = (odataObject.DateToBeActivated instanceof Date) ? odataObject.DateToBeActivated
                        : (odataObject.DateToBeActivated != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBeActivated, "Edm.DateTimeOffset", false) : undefined;
                    this.CheckDigitValidated = odataObject.CheckDigitValidated;
                    this.CouponId = odataObject.CouponId;
                    this.Message = odataObject.Message;
                    this.LineDiscountGroup = odataObject.LineDiscountGroup;
                    this.MultilineDiscountGroup = odataObject.MultilineDiscountGroup;
                    this.IncludedInTotalDiscount = odataObject.IncludedInTotalDiscount;
                    this.CostPrice = (odataObject.CostPrice != null) ? parseFloat(odataObject.CostPrice) : undefined;
                    this.BatchId = odataObject.BatchId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return BarcodeClass;
            }());
            Entities.BarcodeClass = BarcodeClass;
            var ItemBarcodeClass = (function () {
                function ItemBarcodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.Description = odataObject.Description;
                    this.BarcodeSetupId = odataObject.BarcodeSetupId;
                    this.ItemBarcodeValue = odataObject.ItemBarcodeValue;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.IsBlocked = odataObject.IsBlocked;
                    this.Display = odataObject.Display;
                    this.VariantId = odataObject.VariantId;
                    this.UnitId = odataObject.UnitId;
                    this.UseForInput = odataObject.UseForInput;
                    this.UseForPrinting = odataObject.UseForPrinting;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ItemBarcodeClass;
            }());
            Entities.ItemBarcodeClass = ItemBarcodeClass;
            var ButtonGridClass = (function () {
                function ButtonGridClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.Name = odataObject.Name;
                    this.DefaultColor = odataObject.DefaultColor;
                    this.SpaceBetweenButtonsInPixels = odataObject.SpaceBetweenButtonsInPixels;
                    this.Buttons = undefined;
                    if (odataObject.Buttons) {
                        this.Buttons = [];
                        for (var i = 0; i < odataObject.Buttons.length; i++) {
                            if (odataObject.Buttons[i] != null) {
                                if (odataObject.Buttons[i]['@odata.type'] != null) {
                                    var className = odataObject.Buttons[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Buttons[i] = new Commerce.Proxy.Entities[className](odataObject.Buttons[i]);
                                    }
                                }
                                else {
                                    this.Buttons[i] = new ButtonGridButtonClass(odataObject.Buttons[i]);
                                }
                            }
                            else {
                                this.Buttons[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ButtonGridClass;
            }());
            Entities.ButtonGridClass = ButtonGridClass;
            var GetButtonGridsByIdsCriteriaClass = (function () {
                function GetButtonGridsByIdsCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ButtonGridIds = undefined;
                    if (odataObject.ButtonGridIds) {
                        this.ButtonGridIds = [];
                        for (var i = 0; i < odataObject.ButtonGridIds.length; i++) {
                            if (odataObject.ButtonGridIds[i] != null) {
                                this.ButtonGridIds[i] = odataObject.ButtonGridIds[i];
                            }
                            else {
                                this.ButtonGridIds[i] = undefined;
                            }
                        }
                    }
                }
                return GetButtonGridsByIdsCriteriaClass;
            }());
            Entities.GetButtonGridsByIdsCriteriaClass = GetButtonGridsByIdsCriteriaClass;
            var CartLineClass = (function () {
                function CartLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    this.TaxOverrideCode = odataObject.TaxOverrideCode;
                    this.ItemId = odataObject.ItemId;
                    this.Barcode = odataObject.Barcode;
                    this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
                    this.Description = odataObject.Description;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.Comment = odataObject.Comment;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.WarehouseId = odataObject.WarehouseId;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.ExtendedPrice = (odataObject.ExtendedPrice != null) ? parseFloat(odataObject.ExtendedPrice) : undefined;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
                    this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
                    this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
                    this.LinePercentageDiscount = (odataObject.LinePercentageDiscount != null) ? parseFloat(odataObject.LinePercentageDiscount) : undefined;
                    this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
                    this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
                    this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.ReturnTransactionId = odataObject.ReturnTransactionId;
                    this.ReturnLineNumber = (odataObject.ReturnLineNumber != null) ? parseFloat(odataObject.ReturnLineNumber) : undefined;
                    this.ReturnInventTransId = odataObject.ReturnInventTransId;
                    this.IsVoided = odataObject.IsVoided;
                    this.IsTaxOverideCodeTaxExempt = odataObject.IsTaxOverideCodeTaxExempt;
                    this.IsGiftCardLine = odataObject.IsGiftCardLine;
                    this.IsPriceKeyedIn = odataObject.IsPriceKeyedIn;
                    this.GiftCardId = odataObject.GiftCardId;
                    this.GiftCardCurrencyCode = odataObject.GiftCardCurrencyCode;
                    this.GiftCardOperationValue = odataObject.GiftCardOperationValue;
                    this.SalesStatusValue = odataObject.SalesStatusValue;
                    this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
                    this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
                    this.QuantityCanceled = (odataObject.QuantityCanceled != null) ? parseFloat(odataObject.QuantityCanceled) : undefined;
                    this.FulfillmentStoreId = odataObject.FulfillmentStoreId;
                    this.SerialNumber = odataObject.SerialNumber;
                    this.ElectronicDeliveryEmail = odataObject.ElectronicDeliveryEmail;
                    this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
                    this.IsPriceOverridden = odataObject.IsPriceOverridden;
                    this.OriginalPrice = (odataObject.OriginalPrice != null) ? parseFloat(odataObject.OriginalPrice) : undefined;
                    this.IsInvoiceLine = odataObject.IsInvoiceLine;
                    this.InvoiceId = odataObject.InvoiceId;
                    this.InvoiceAmount = (odataObject.InvoiceAmount != null) ? parseFloat(odataObject.InvoiceAmount) : undefined;
                    this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
                    this.LineVersion = odataObject.LineVersion;
                    this.PromotionLines = undefined;
                    if (odataObject.PromotionLines) {
                        this.PromotionLines = [];
                        for (var i = 0; i < odataObject.PromotionLines.length; i++) {
                            if (odataObject.PromotionLines[i] != null) {
                                this.PromotionLines[i] = odataObject.PromotionLines[i];
                            }
                            else {
                                this.PromotionLines[i] = undefined;
                            }
                        }
                    }
                    this.DiscountLines = undefined;
                    if (odataObject.DiscountLines) {
                        this.DiscountLines = [];
                        for (var i = 0; i < odataObject.DiscountLines.length; i++) {
                            if (odataObject.DiscountLines[i] != null) {
                                if (odataObject.DiscountLines[i]['@odata.type'] != null) {
                                    var className = odataObject.DiscountLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DiscountLines[i] = new Commerce.Proxy.Entities[className](odataObject.DiscountLines[i]);
                                    }
                                }
                                else {
                                    this.DiscountLines[i] = new DiscountLineClass(odataObject.DiscountLines[i]);
                                }
                            }
                            else {
                                this.DiscountLines[i] = undefined;
                            }
                        }
                    }
                    this.RelatedDiscountedLineIds = undefined;
                    if (odataObject.RelatedDiscountedLineIds) {
                        this.RelatedDiscountedLineIds = [];
                        for (var i = 0; i < odataObject.RelatedDiscountedLineIds.length; i++) {
                            if (odataObject.RelatedDiscountedLineIds[i] != null) {
                                this.RelatedDiscountedLineIds[i] = odataObject.RelatedDiscountedLineIds[i];
                            }
                            else {
                                this.RelatedDiscountedLineIds[i] = undefined;
                            }
                        }
                    }
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.ChargeLines = undefined;
                    if (odataObject.ChargeLines) {
                        this.ChargeLines = [];
                        for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                            if (odataObject.ChargeLines[i] != null) {
                                if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ChargeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i]);
                                    }
                                }
                                else {
                                    this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                                }
                            }
                            else {
                                this.ChargeLines[i] = undefined;
                            }
                        }
                    }
                    this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
                    this.IsCustomerAccountDeposit = odataObject.IsCustomerAccountDeposit;
                    this.LinkedParentLineId = odataObject.LinkedParentLineId;
                    this.QuantityReturnable = (odataObject.QuantityReturnable != null) ? parseFloat(odataObject.QuantityReturnable) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
                    this.TrackingId = odataObject.TrackingId;
                    this.StaffId = odataObject.StaffId;
                    this.QuantityRemained = (odataObject.QuantityRemained != null) ? parseFloat(odataObject.QuantityRemained) : undefined;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.AttributeValues = undefined;
                    if (odataObject.AttributeValues) {
                        this.AttributeValues = [];
                        for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                            if (odataObject.AttributeValues[i] != null) {
                                if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                                    var className = odataObject.AttributeValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i]);
                                    }
                                }
                                else {
                                    this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                                }
                            }
                            else {
                                this.AttributeValues[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.ThirdPartyGiftCardInfo == null) {
                        this.ThirdPartyGiftCardInfo = undefined;
                    }
                    else if (odataObject.ThirdPartyGiftCardInfo['@odata.type'] == null) {
                        this.ThirdPartyGiftCardInfo = new ThirdPartyGiftCardInfoClass(odataObject.ThirdPartyGiftCardInfo);
                    }
                    else {
                        var className = odataObject.ThirdPartyGiftCardInfo['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ThirdPartyGiftCardInfo = new Commerce.Proxy.Entities[className](odataObject.ThirdPartyGiftCardInfo);
                        }
                    }
                    this.BarcodeEmbeddedPrice = (odataObject.BarcodeEmbeddedPrice != null) ? parseFloat(odataObject.BarcodeEmbeddedPrice) : undefined;
                    this.PriceInBarcode = odataObject.PriceInBarcode;
                    this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
                    this.InvoicedSalesId = odataObject.InvoicedSalesId;
                }
                return CartLineClass;
            }());
            Entities.CartLineClass = CartLineClass;
            var ThirdPartyGiftCardInfoClass = (function () {
                function ThirdPartyGiftCardInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.Authorization = odataObject.Authorization;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ThirdPartyGiftCardInfoClass;
            }());
            Entities.ThirdPartyGiftCardInfoClass = ThirdPartyGiftCardInfoClass;
            var CardTypeInfoClass = (function () {
                function CardTypeInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.TypeId = odataObject.TypeId;
                    this.Name = odataObject.Name;
                    this.PaymentMethodId = odataObject.PaymentMethodId;
                    this.CardTypeValue = odataObject.CardTypeValue;
                    this.Issuer = odataObject.Issuer;
                    this.NumberFrom = odataObject.NumberFrom;
                    this.NumberTo = odataObject.NumberTo;
                    this.CashBackLimit = (odataObject.CashBackLimit != null) ? parseFloat(odataObject.CashBackLimit) : undefined;
                    this.AllowManualInput = odataObject.AllowManualInput;
                    this.CheckModulus = odataObject.CheckModulus;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CardTypeInfoClass;
            }());
            Entities.CardTypeInfoClass = CardTypeInfoClass;
            var CashDeclarationClass = (function () {
                function CashDeclarationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Currency = odataObject.Currency;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.CashTypeValue = odataObject.CashTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CashDeclarationClass;
            }());
            Entities.CashDeclarationClass = CashDeclarationClass;
            var IncomeExpenseAccountClass = (function () {
                function IncomeExpenseAccountClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.AccountNumber = odataObject.AccountNumber;
                    this.AccountName = odataObject.AccountName;
                    this.AccountNameAlias = odataObject.AccountNameAlias;
                    this.AccountTypeValue = odataObject.AccountTypeValue;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Message1Line = odataObject.Message1Line;
                    this.Message2Line = odataObject.Message2Line;
                    this.SlipText1Line = odataObject.SlipText1Line;
                    this.SlipText2Line = odataObject.SlipText2Line;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return IncomeExpenseAccountClass;
            }());
            Entities.IncomeExpenseAccountClass = IncomeExpenseAccountClass;
            var IncomeExpenseLineClass = (function () {
                function IncomeExpenseLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.IncomeExpenseAccount = odataObject.IncomeExpenseAccount;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.AccountTypeValue = odataObject.AccountTypeValue;
                    this.Terminal = odataObject.Terminal;
                    this.Shift = odataObject.Shift;
                    this.TransactionStatusValue = odataObject.TransactionStatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return IncomeExpenseLineClass;
            }());
            Entities.IncomeExpenseLineClass = IncomeExpenseLineClass;
            var CartTenderLineClass = (function () {
                function CartTenderLineClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.PaymentCard == null) {
                        this.PaymentCard = undefined;
                    }
                    else if (odataObject.PaymentCard['@odata.type'] == null) {
                        this.PaymentCard = new PaymentCardClass(odataObject.PaymentCard);
                    }
                    else {
                        var className = odataObject.PaymentCard['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.PaymentCard = new Commerce.Proxy.Entities[className](odataObject.PaymentCard);
                        }
                    }
                    if (odataObject.TokenizedPaymentCard == null) {
                        this.TokenizedPaymentCard = undefined;
                    }
                    else if (odataObject.TokenizedPaymentCard['@odata.type'] == null) {
                        this.TokenizedPaymentCard = new TokenizedPaymentCardClass(odataObject.TokenizedPaymentCard);
                    }
                    else {
                        var className = odataObject.TokenizedPaymentCard['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.TokenizedPaymentCard = new Commerce.Proxy.Entities[className](odataObject.TokenizedPaymentCard);
                        }
                    }
                    this.TenderLineId = odataObject.TenderLineId;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.CashBackAmount = (odataObject.CashBackAmount != null) ? parseFloat(odataObject.CashBackAmount) : undefined;
                    this.AmountInTenderedCurrency = (odataObject.AmountInTenderedCurrency != null) ? parseFloat(odataObject.AmountInTenderedCurrency) : undefined;
                    this.AmountInCompanyCurrency = (odataObject.AmountInCompanyCurrency != null) ? parseFloat(odataObject.AmountInCompanyCurrency) : undefined;
                    this.Currency = odataObject.Currency;
                    this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
                    this.CompanyCurrencyExchangeRate = (odataObject.CompanyCurrencyExchangeRate != null) ? parseFloat(odataObject.CompanyCurrencyExchangeRate) : undefined;
                    this.TenderTypeId = odataObject.TenderTypeId;
                    this.SignatureData = odataObject.SignatureData;
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.GiftCardId = odataObject.GiftCardId;
                    this.CreditMemoId = odataObject.CreditMemoId;
                    this.CustomerId = odataObject.CustomerId;
                    this.LoyaltyCardId = odataObject.LoyaltyCardId;
                    this.CardTypeId = odataObject.CardTypeId;
                    this.IsChangeLine = odataObject.IsChangeLine;
                    this.IsHistorical = odataObject.IsHistorical;
                    this.IsVoidable = odataObject.IsVoidable;
                    this.StatusValue = odataObject.StatusValue;
                    this.VoidStatusValue = odataObject.VoidStatusValue;
                    this.AuthorizedAmount = (odataObject.AuthorizedAmount != null) ? parseFloat(odataObject.AuthorizedAmount) : undefined;
                    this.PaymentRefRecId = (odataObject.PaymentRefRecId != null) ? parseInt(odataObject.PaymentRefRecId, 10) : undefined;
                    this.CardPaymentAccountId = odataObject.CardPaymentAccountId;
                    this.ProcessingTypeValue = odataObject.ProcessingTypeValue;
                    this.CardProcessorStatusValue = odataObject.CardProcessorStatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CartTenderLineClass;
            }());
            Entities.CartTenderLineClass = CartTenderLineClass;
            var ChargeLineClass = (function () {
                function ChargeLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChargeLineId = odataObject.ChargeLineId;
                    this.ChargeCode = odataObject.ChargeCode;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.ModuleTypeValue = odataObject.ModuleTypeValue;
                    this.ChargeTypeValue = odataObject.ChargeTypeValue;
                    this.ChargeMethodValue = odataObject.ChargeMethodValue;
                    this.CalculatedAmount = (odataObject.CalculatedAmount != null) ? parseFloat(odataObject.CalculatedAmount) : undefined;
                    this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
                    this.Description = odataObject.Description;
                    this.TransactionId = odataObject.TransactionId;
                    this.MarkupAutoTableRecId = (odataObject.MarkupAutoTableRecId != null) ? parseInt(odataObject.MarkupAutoTableRecId, 10) : undefined;
                    this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
                    this.FromAmount = (odataObject.FromAmount != null) ? parseFloat(odataObject.FromAmount) : undefined;
                    this.ToAmount = (odataObject.ToAmount != null) ? parseFloat(odataObject.ToAmount) : undefined;
                    this.Keep = odataObject.Keep;
                    this.AmountRefunded = (odataObject.AmountRefunded != null) ? parseFloat(odataObject.AmountRefunded) : undefined;
                    this.ChargeLineOverrides = undefined;
                    if (odataObject.ChargeLineOverrides) {
                        this.ChargeLineOverrides = [];
                        for (var i = 0; i < odataObject.ChargeLineOverrides.length; i++) {
                            if (odataObject.ChargeLineOverrides[i] != null) {
                                if (odataObject.ChargeLineOverrides[i]['@odata.type'] != null) {
                                    var className = odataObject.ChargeLineOverrides[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ChargeLineOverrides[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLineOverrides[i]);
                                    }
                                }
                                else {
                                    this.ChargeLineOverrides[i] = new ChargeLineOverrideClass(odataObject.ChargeLineOverrides[i]);
                                }
                            }
                            else {
                                this.ChargeLineOverrides[i] = undefined;
                            }
                        }
                    }
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.IsRefundable = odataObject.IsRefundable;
                    this.IsShipping = odataObject.IsShipping;
                    this.ItemId = odataObject.ItemId;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
                    this.SalesTaxGroupId = odataObject.SalesTaxGroupId;
                    this.OriginalSalesTaxGroupId = odataObject.OriginalSalesTaxGroupId;
                    this.OriginalItemTaxGroupId = odataObject.OriginalItemTaxGroupId;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.SalesOrderUnitOfMeasure = odataObject.SalesOrderUnitOfMeasure;
                    this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
                    this.NetAmountPerUnit = (odataObject.NetAmountPerUnit != null) ? parseFloat(odataObject.NetAmountPerUnit) : undefined;
                    this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
                    this.TaxLines = undefined;
                    if (odataObject.TaxLines) {
                        this.TaxLines = [];
                        for (var i = 0; i < odataObject.TaxLines.length; i++) {
                            if (odataObject.TaxLines[i] != null) {
                                if (odataObject.TaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i]);
                                    }
                                }
                                else {
                                    this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                                }
                            }
                            else {
                                this.TaxLines[i] = undefined;
                            }
                        }
                    }
                    this.TaxMeasures = undefined;
                    if (odataObject.TaxMeasures) {
                        this.TaxMeasures = [];
                        for (var i = 0; i < odataObject.TaxMeasures.length; i++) {
                            if (odataObject.TaxMeasures[i] != null) {
                                if (odataObject.TaxMeasures[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxMeasures[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxMeasures[i] = new Commerce.Proxy.Entities[className](odataObject.TaxMeasures[i]);
                                    }
                                }
                                else {
                                    this.TaxMeasures[i] = new TaxMeasureClass(odataObject.TaxMeasures[i]);
                                }
                            }
                            else {
                                this.TaxMeasures[i] = undefined;
                            }
                        }
                    }
                    this.TaxAmountExemptInclusive = (odataObject.TaxAmountExemptInclusive != null) ? parseFloat(odataObject.TaxAmountExemptInclusive) : undefined;
                    this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
                    this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
                    this.NetAmountWithAllInclusiveTax = (odataObject.NetAmountWithAllInclusiveTax != null) ? parseFloat(odataObject.NetAmountWithAllInclusiveTax) : undefined;
                    this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
                        : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
                        : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
                    this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
                    this.ReturnLineTaxAmount = (odataObject.ReturnLineTaxAmount != null) ? parseFloat(odataObject.ReturnLineTaxAmount) : undefined;
                    this.ReturnTaxLines = undefined;
                    if (odataObject.ReturnTaxLines) {
                        this.ReturnTaxLines = [];
                        for (var i = 0; i < odataObject.ReturnTaxLines.length; i++) {
                            if (odataObject.ReturnTaxLines[i] != null) {
                                if (odataObject.ReturnTaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReturnTaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReturnTaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnTaxLines[i]);
                                    }
                                }
                                else {
                                    this.ReturnTaxLines[i] = new TaxLineClass(odataObject.ReturnTaxLines[i]);
                                }
                            }
                            else {
                                this.ReturnTaxLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChargeLineClass;
            }());
            Entities.ChargeLineClass = ChargeLineClass;
            var CityInfoClass = (function () {
                function CityInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.StateId = odataObject.StateId;
                    this.CountyId = odataObject.CountyId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CityInfoClass;
            }());
            Entities.CityInfoClass = CityInfoClass;
            var CommissionSalesGroupClass = (function () {
                function CommissionSalesGroupClass(odataObject) {
                    odataObject = odataObject || {};
                    this.GroupId = odataObject.GroupId;
                    this.Name = odataObject.Name;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommissionSalesGroupClass;
            }());
            Entities.CommissionSalesGroupClass = CommissionSalesGroupClass;
            var ContactInformationClass = (function () {
                function ContactInformationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Value = odataObject.Value;
                    this.ContactInformationTypeValue = odataObject.ContactInformationTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ContactInformationClass;
            }());
            Entities.ContactInformationClass = ContactInformationClass;
            var AttributeCategoryClass = (function () {
                function AttributeCategoryClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.Value == null) {
                        this.Value = undefined;
                    }
                    else if (odataObject.Value['@odata.type'] == null) {
                        this.Value = new CommercePropertyValueClass(odataObject.Value);
                    }
                    else {
                        var className = odataObject.Value['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Value = new Commerce.Proxy.Entities[className](odataObject.Value);
                        }
                    }
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.KeyName = odataObject.KeyName;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.NameTranslations = undefined;
                    if (odataObject.NameTranslations) {
                        this.NameTranslations = [];
                        for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                            if (odataObject.NameTranslations[i] != null) {
                                if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.NameTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i]);
                                    }
                                }
                                else {
                                    this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                                }
                            }
                            else {
                                this.NameTranslations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeCategoryClass;
            }());
            Entities.AttributeCategoryClass = AttributeCategoryClass;
            var ProductComparisonEntryClass = (function () {
                function ProductComparisonEntryClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    if (odataObject.AttributeValue == null) {
                        this.AttributeValue = undefined;
                    }
                    else if (odataObject.AttributeValue['@odata.type'] == null) {
                        this.AttributeValue = new AttributeValueClass(odataObject.AttributeValue);
                    }
                    else {
                        var className = odataObject.AttributeValue['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.AttributeValue = new Commerce.Proxy.Entities[className](odataObject.AttributeValue);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductComparisonEntryClass;
            }());
            Entities.ProductComparisonEntryClass = ProductComparisonEntryClass;
            var ProductComparisonLineClass = (function () {
                function ProductComparisonLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AttributeRecordId = (odataObject.AttributeRecordId != null) ? parseInt(odataObject.AttributeRecordId, 10) : undefined;
                    this.AttributeName = odataObject.AttributeName;
                    this.ProductAttributeComparisonEntries = undefined;
                    if (odataObject.ProductAttributeComparisonEntries) {
                        this.ProductAttributeComparisonEntries = [];
                        for (var i = 0; i < odataObject.ProductAttributeComparisonEntries.length; i++) {
                            if (odataObject.ProductAttributeComparisonEntries[i] != null) {
                                if (odataObject.ProductAttributeComparisonEntries[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductAttributeComparisonEntries[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductAttributeComparisonEntries[i] = new Commerce.Proxy.Entities[className](odataObject.ProductAttributeComparisonEntries[i]);
                                    }
                                }
                                else {
                                    this.ProductAttributeComparisonEntries[i] = new ProductComparisonEntryClass(odataObject.ProductAttributeComparisonEntries[i]);
                                }
                            }
                            else {
                                this.ProductAttributeComparisonEntries[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductComparisonLineClass;
            }());
            Entities.ProductComparisonLineClass = ProductComparisonLineClass;
            var CustomerSearchFieldClass = (function () {
                function CustomerSearchFieldClass(odataObject) {
                    odataObject = odataObject || {};
                    this.IsShortcut = odataObject.IsShortcut;
                    this.DisplayName = odataObject.DisplayName;
                    this.CanBeRefined = odataObject.CanBeRefined;
                    if (odataObject.SearchField == null) {
                        this.SearchField = undefined;
                    }
                    else if (odataObject.SearchField['@odata.type'] == null) {
                        this.SearchField = new CustomerSearchFieldTypeClass(odataObject.SearchField);
                    }
                    else {
                        var className = odataObject.SearchField['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.SearchField = new Commerce.Proxy.Entities[className](odataObject.SearchField);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerSearchFieldClass;
            }());
            Entities.CustomerSearchFieldClass = CustomerSearchFieldClass;
            var CustomerSearchByFieldCriteriaClass = (function () {
                function CustomerSearchByFieldCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Criteria = undefined;
                    if (odataObject.Criteria) {
                        this.Criteria = [];
                        for (var i = 0; i < odataObject.Criteria.length; i++) {
                            if (odataObject.Criteria[i] != null) {
                                if (odataObject.Criteria[i]['@odata.type'] != null) {
                                    var className = odataObject.Criteria[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Criteria[i] = new Commerce.Proxy.Entities[className](odataObject.Criteria[i]);
                                    }
                                }
                                else {
                                    this.Criteria[i] = new CustomerSearchByFieldCriterionClass(odataObject.Criteria[i]);
                                }
                            }
                            else {
                                this.Criteria[i] = undefined;
                            }
                        }
                    }
                    this.DataLevelValue = odataObject.DataLevelValue;
                }
                return CustomerSearchByFieldCriteriaClass;
            }());
            Entities.CustomerSearchByFieldCriteriaClass = CustomerSearchByFieldCriteriaClass;
            var CustomerSearchByFieldCriterionClass = (function () {
                function CustomerSearchByFieldCriterionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SearchTerm = odataObject.SearchTerm;
                    if (odataObject.SearchField == null) {
                        this.SearchField = undefined;
                    }
                    else if (odataObject.SearchField['@odata.type'] == null) {
                        this.SearchField = new CustomerSearchFieldTypeClass(odataObject.SearchField);
                    }
                    else {
                        var className = odataObject.SearchField['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.SearchField = new Commerce.Proxy.Entities[className](odataObject.SearchField);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerSearchByFieldCriterionClass;
            }());
            Entities.CustomerSearchByFieldCriterionClass = CustomerSearchByFieldCriterionClass;
            var CustomerSearchFieldTypeClass = (function (_super) {
                __extends(CustomerSearchFieldTypeClass, _super);
                function CustomerSearchFieldTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerSearchFieldType";
                    return _this;
                }
                return CustomerSearchFieldTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.CustomerSearchFieldTypeClass = CustomerSearchFieldTypeClass;
            var ShipmentClass = (function () {
                function ShipmentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesId = odataObject.SalesId;
                    this.ShipmentId = odataObject.ShipmentId;
                    if (odataObject.DeliveryAddress == null) {
                        this.DeliveryAddress = undefined;
                    }
                    else if (odataObject.DeliveryAddress['@odata.type'] == null) {
                        this.DeliveryAddress = new AddressClass(odataObject.DeliveryAddress);
                    }
                    else {
                        var className = odataObject.DeliveryAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DeliveryAddress = new Commerce.Proxy.Entities[className](odataObject.DeliveryAddress);
                        }
                    }
                    this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
                        : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.TermsOfDelivery = odataObject.TermsOfDelivery;
                    this.WeightUnit = odataObject.WeightUnit;
                    this.TrackingNumber = odataObject.TrackingNumber;
                    this.TrackingUrl = odataObject.TrackingUrl;
                    if (odataObject.LatestCarrierTrackingInfo == null) {
                        this.LatestCarrierTrackingInfo = undefined;
                    }
                    else if (odataObject.LatestCarrierTrackingInfo['@odata.type'] == null) {
                        this.LatestCarrierTrackingInfo = new TrackingInfoClass(odataObject.LatestCarrierTrackingInfo);
                    }
                    else {
                        var className = odataObject.LatestCarrierTrackingInfo['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.LatestCarrierTrackingInfo = new Commerce.Proxy.Entities[className](odataObject.LatestCarrierTrackingInfo);
                        }
                    }
                    this.CarrierId = odataObject.CarrierId;
                    this.CarrierName = odataObject.CarrierName;
                    this.ShippingWeight = (odataObject.ShippingWeight != null) ? parseFloat(odataObject.ShippingWeight) : undefined;
                    this.ShipmentLines = undefined;
                    if (odataObject.ShipmentLines) {
                        this.ShipmentLines = [];
                        for (var i = 0; i < odataObject.ShipmentLines.length; i++) {
                            if (odataObject.ShipmentLines[i] != null) {
                                if (odataObject.ShipmentLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ShipmentLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ShipmentLines[i] = new Commerce.Proxy.Entities[className](odataObject.ShipmentLines[i]);
                                    }
                                }
                                else {
                                    this.ShipmentLines[i] = new ShipmentLineClass(odataObject.ShipmentLines[i]);
                                }
                            }
                            else {
                                this.ShipmentLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShipmentClass;
            }());
            Entities.ShipmentClass = ShipmentClass;
            var ShipmentLineClass = (function () {
                function ShipmentLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ShipmentLineId = odataObject.ShipmentLineId;
                    this.ItemId = odataObject.ItemId;
                    this.Description = odataObject.Description;
                    this.InventDimId = odataObject.InventDimId;
                    this.OrderedQuantity = (odataObject.OrderedQuantity != null) ? parseFloat(odataObject.OrderedQuantity) : undefined;
                    this.DeliveredQuantity = (odataObject.DeliveredQuantity != null) ? parseFloat(odataObject.DeliveredQuantity) : undefined;
                    this.RemainingQuantity = (odataObject.RemainingQuantity != null) ? parseFloat(odataObject.RemainingQuantity) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShipmentLineClass;
            }());
            Entities.ShipmentLineClass = ShipmentLineClass;
            var TransactionClass = (function () {
                function TransactionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.IsCreatedOffline = odataObject.IsCreatedOffline;
                    this.StaffId = odataObject.StaffId;
                    this.ShiftId = odataObject.ShiftId;
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    this.Description = odataObject.Description;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.TransactionTypeValue = odataObject.TransactionTypeValue;
                    this.TransactionStatusValue = odataObject.TransactionStatusValue;
                    this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
                        : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
                        : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
                    this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
                        : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
                    this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
                    this.GiftCardIdMasked = odataObject.GiftCardIdMasked;
                    this.FromSafe = odataObject.FromSafe;
                    this.ToSafe = odataObject.ToSafe;
                    this.FromShiftTerminalId = odataObject.FromShiftTerminalId;
                    this.ToShiftTerminalId = odataObject.ToShiftTerminalId;
                    this.FromShiftId = odataObject.FromShiftId;
                    this.TransactionSourceContextTypeValue = odataObject.TransactionSourceContextTypeValue;
                    this.TransactionDestinationContextTypeValue = odataObject.TransactionDestinationContextTypeValue;
                    this.ToShiftId = odataObject.ToShiftId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TransactionClass;
            }());
            Entities.TransactionClass = TransactionClass;
            var ShiftReconciliationLineClass = (function (_super) {
                __extends(ShiftReconciliationLineClass, _super);
                function ShiftReconciliationLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.GroupId = (odataObject.GroupId != null) ? parseInt(odataObject.GroupId, 10) : undefined;
                    _this.GroupDescription = odataObject.GroupDescription;
                    _this.ShiftGroupLinesCount = (odataObject.ShiftGroupLinesCount != null) ? parseInt(odataObject.ShiftGroupLinesCount, 10) : undefined;
                    _this.ShiftGroupLinesClosedCount = (odataObject.ShiftGroupLinesClosedCount != null) ? parseInt(odataObject.ShiftGroupLinesClosedCount, 10) : undefined;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftReconciliationLine";
                    return _this;
                }
                return ShiftReconciliationLineClass;
            }(TransactionClass));
            Entities.ShiftReconciliationLineClass = ShiftReconciliationLineClass;
            var ShiftReconciliationLineRetrievalCriteriaClass = (function () {
                function ShiftReconciliationLineRetrievalCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionTypeValues = undefined;
                    if (odataObject.TransactionTypeValues) {
                        this.TransactionTypeValues = [];
                        for (var i = 0; i < odataObject.TransactionTypeValues.length; i++) {
                            if (odataObject.TransactionTypeValues[i] != null) {
                                this.TransactionTypeValues[i] = odataObject.TransactionTypeValues[i];
                            }
                            else {
                                this.TransactionTypeValues[i] = undefined;
                            }
                        }
                    }
                    this.ShiftReconciliationLineStatusValue = odataObject.ShiftReconciliationLineStatusValue;
                    this.Shifts = undefined;
                    if (odataObject.Shifts) {
                        this.Shifts = [];
                        for (var i = 0; i < odataObject.Shifts.length; i++) {
                            if (odataObject.Shifts[i] != null) {
                                if (odataObject.Shifts[i]['@odata.type'] != null) {
                                    var className = odataObject.Shifts[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Shifts[i] = new Commerce.Proxy.Entities[className](odataObject.Shifts[i]);
                                    }
                                }
                                else {
                                    this.Shifts[i] = new ShiftKeyClass(odataObject.Shifts[i]);
                                }
                            }
                            else {
                                this.Shifts[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.DestinationShift == null) {
                        this.DestinationShift = undefined;
                    }
                    else if (odataObject.DestinationShift['@odata.type'] == null) {
                        this.DestinationShift = new ShiftKeyClass(odataObject.DestinationShift);
                    }
                    else {
                        var className = odataObject.DestinationShift['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DestinationShift = new Commerce.Proxy.Entities[className](odataObject.DestinationShift);
                        }
                    }
                    this.SourceSafe = odataObject.SourceSafe;
                    this.DestinationSafe = odataObject.DestinationSafe;
                    this.TransactionSourceContextTypeValue = odataObject.TransactionSourceContextTypeValue;
                    this.TransactionDestinationContextTypeValue = odataObject.TransactionDestinationContextTypeValue;
                }
                return ShiftReconciliationLineRetrievalCriteriaClass;
            }());
            Entities.ShiftReconciliationLineRetrievalCriteriaClass = ShiftReconciliationLineRetrievalCriteriaClass;
            var AttributeDefinitionClass = (function () {
                function AttributeDefinitionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.AttributeTypeName = odataObject.AttributeTypeName;
                    this.DataType = odataObject.DataType;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.IsHidden = odataObject.IsHidden;
                    this.IsMandatory = odataObject.IsMandatory;
                    this.IsMultiValue = odataObject.IsMultiValue;
                    this.IsEnumeration = odataObject.IsEnumeration;
                    this.TranslationDetails = undefined;
                    if (odataObject.TranslationDetails) {
                        this.TranslationDetails = [];
                        for (var i = 0; i < odataObject.TranslationDetails.length; i++) {
                            if (odataObject.TranslationDetails[i] != null) {
                                if (odataObject.TranslationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.TranslationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TranslationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TranslationDetails[i]);
                                    }
                                }
                                else {
                                    this.TranslationDetails[i] = new AttributeTranslationDetailsClass(odataObject.TranslationDetails[i]);
                                }
                            }
                            else {
                                this.TranslationDetails[i] = undefined;
                            }
                        }
                    }
                    this.EnumerationDetails = undefined;
                    if (odataObject.EnumerationDetails) {
                        this.EnumerationDetails = [];
                        for (var i = 0; i < odataObject.EnumerationDetails.length; i++) {
                            if (odataObject.EnumerationDetails[i] != null) {
                                if (odataObject.EnumerationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.EnumerationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.EnumerationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.EnumerationDetails[i]);
                                    }
                                }
                                else {
                                    this.EnumerationDetails[i] = new AttributeEnumerationClass(odataObject.EnumerationDetails[i]);
                                }
                            }
                            else {
                                this.EnumerationDetails[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.DefaultValue == null) {
                        this.DefaultValue = undefined;
                    }
                    else if (odataObject.DefaultValue['@odata.type'] == null) {
                        this.DefaultValue = new CommercePropertyValueClass(odataObject.DefaultValue);
                    }
                    else {
                        var className = odataObject.DefaultValue['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DefaultValue = new Commerce.Proxy.Entities[className](odataObject.DefaultValue);
                        }
                    }
                    if (odataObject.UpperBound == null) {
                        this.UpperBound = undefined;
                    }
                    else if (odataObject.UpperBound['@odata.type'] == null) {
                        this.UpperBound = new CommercePropertyValueClass(odataObject.UpperBound);
                    }
                    else {
                        var className = odataObject.UpperBound['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.UpperBound = new Commerce.Proxy.Entities[className](odataObject.UpperBound);
                        }
                    }
                    if (odataObject.LowerBound == null) {
                        this.LowerBound = undefined;
                    }
                    else if (odataObject.LowerBound['@odata.type'] == null) {
                        this.LowerBound = new CommercePropertyValueClass(odataObject.LowerBound);
                    }
                    else {
                        var className = odataObject.LowerBound['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.LowerBound = new Commerce.Proxy.Entities[className](odataObject.LowerBound);
                        }
                    }
                    this.DisplayOrder = (odataObject.DisplayOrder != null) ? parseFloat(odataObject.DisplayOrder) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeDefinitionClass;
            }());
            Entities.AttributeDefinitionClass = AttributeDefinitionClass;
            var AttributeTranslationDetailsClass = (function () {
                function AttributeTranslationDetailsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AttributeRecordId = (odataObject.AttributeRecordId != null) ? parseInt(odataObject.AttributeRecordId, 10) : undefined;
                    this.LanguageId = odataObject.LanguageId;
                    this.FriendlyName = odataObject.FriendlyName;
                    this.Description = odataObject.Description;
                    this.HelpText = odataObject.HelpText;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeTranslationDetailsClass;
            }());
            Entities.AttributeTranslationDetailsClass = AttributeTranslationDetailsClass;
            var AttributeEnumerationClass = (function () {
                function AttributeEnumerationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrdinalNumber = odataObject.OrdinalNumber;
                    this.EnumerationValue = odataObject.EnumerationValue;
                    this.AttributeEnumerationTranslations = undefined;
                    if (odataObject.AttributeEnumerationTranslations) {
                        this.AttributeEnumerationTranslations = [];
                        for (var i = 0; i < odataObject.AttributeEnumerationTranslations.length; i++) {
                            if (odataObject.AttributeEnumerationTranslations[i] != null) {
                                if (odataObject.AttributeEnumerationTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.AttributeEnumerationTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttributeEnumerationTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeEnumerationTranslations[i]);
                                    }
                                }
                                else {
                                    this.AttributeEnumerationTranslations[i] = new AttributeEnumerationTranslationClass(odataObject.AttributeEnumerationTranslations[i]);
                                }
                            }
                            else {
                                this.AttributeEnumerationTranslations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeEnumerationClass;
            }());
            Entities.AttributeEnumerationClass = AttributeEnumerationClass;
            var AttributeEnumerationTranslationClass = (function () {
                function AttributeEnumerationTranslationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LanguageId = odataObject.LanguageId;
                    this.EnumerationTranslationValue = odataObject.EnumerationTranslationValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeEnumerationTranslationClass;
            }());
            Entities.AttributeEnumerationTranslationClass = AttributeEnumerationTranslationClass;
            var AttributeDefinitionCriteriaClass = (function () {
                function AttributeDefinitionCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AttributeGroupIdentifier = (odataObject.AttributeGroupIdentifier != null) ? parseInt(odataObject.AttributeGroupIdentifier, 10) : undefined;
                    this.Languages = undefined;
                    if (odataObject.Languages) {
                        this.Languages = [];
                        for (var i = 0; i < odataObject.Languages.length; i++) {
                            if (odataObject.Languages[i] != null) {
                                this.Languages[i] = odataObject.Languages[i];
                            }
                            else {
                                this.Languages[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeDefinitionCriteriaClass;
            }());
            Entities.AttributeDefinitionCriteriaClass = AttributeDefinitionCriteriaClass;
            var AttributeGroupDefinitionClass = (function () {
                function AttributeGroupDefinitionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.TranslationDetails = undefined;
                    if (odataObject.TranslationDetails) {
                        this.TranslationDetails = [];
                        for (var i = 0; i < odataObject.TranslationDetails.length; i++) {
                            if (odataObject.TranslationDetails[i] != null) {
                                if (odataObject.TranslationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.TranslationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TranslationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TranslationDetails[i]);
                                    }
                                }
                                else {
                                    this.TranslationDetails[i] = new AttributeGroupTranslationDetailsClass(odataObject.TranslationDetails[i]);
                                }
                            }
                            else {
                                this.TranslationDetails[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeGroupDefinitionClass;
            }());
            Entities.AttributeGroupDefinitionClass = AttributeGroupDefinitionClass;
            var AttributeGroupTranslationDetailsClass = (function () {
                function AttributeGroupTranslationDetailsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AttributeGroupRecordId = (odataObject.AttributeGroupRecordId != null) ? parseInt(odataObject.AttributeGroupRecordId, 10) : undefined;
                    this.LanguageId = odataObject.LanguageId;
                    this.FriendlyName = odataObject.FriendlyName;
                    this.Description = odataObject.Description;
                    this.HelpText = odataObject.HelpText;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeGroupTranslationDetailsClass;
            }());
            Entities.AttributeGroupTranslationDetailsClass = AttributeGroupTranslationDetailsClass;
            var AttributeGroupDefinitionCriteriaClass = (function () {
                function AttributeGroupDefinitionCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AttributeGroupIdentifiers = undefined;
                    if (odataObject.AttributeGroupIdentifiers) {
                        this.AttributeGroupIdentifiers = [];
                        for (var i = 0; i < odataObject.AttributeGroupIdentifiers.length; i++) {
                            if (odataObject.AttributeGroupIdentifiers[i] != null) {
                                this.AttributeGroupIdentifiers[i] = parseInt(odataObject.AttributeGroupIdentifiers[i], 10);
                            }
                            else {
                                this.AttributeGroupIdentifiers[i] = undefined;
                            }
                        }
                    }
                    this.Languages = undefined;
                    if (odataObject.Languages) {
                        this.Languages = [];
                        for (var i = 0; i < odataObject.Languages.length; i++) {
                            if (odataObject.Languages[i] != null) {
                                this.Languages[i] = odataObject.Languages[i];
                            }
                            else {
                                this.Languages[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeGroupDefinitionCriteriaClass;
            }());
            Entities.AttributeGroupDefinitionCriteriaClass = AttributeGroupDefinitionCriteriaClass;
            var CountyInfoClass = (function () {
                function CountyInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.CountyId = odataObject.CountyId;
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.StateId = odataObject.StateId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CountyInfoClass;
            }());
            Entities.CountyInfoClass = CountyInfoClass;
            var CustomerGroupClass = (function () {
                function CustomerGroupClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CustomerGroupNumber = odataObject.CustomerGroupNumber;
                    this.CustomerGroupName = odataObject.CustomerGroupName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerGroupClass;
            }());
            Entities.CustomerGroupClass = CustomerGroupClass;
            var DiscountLineClass = (function () {
                function DiscountLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
                    this.OfferId = odataObject.OfferId;
                    this.OfferName = odataObject.OfferName;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.DiscountCost = (odataObject.DiscountCost != null) ? parseFloat(odataObject.DiscountCost) : undefined;
                    this.EffectiveAmount = (odataObject.EffectiveAmount != null) ? parseFloat(odataObject.EffectiveAmount) : undefined;
                    this.SavedEffectiveAmount = (odataObject.SavedEffectiveAmount != null) ? parseFloat(odataObject.SavedEffectiveAmount) : undefined;
                    this.Percentage = (odataObject.Percentage != null) ? parseFloat(odataObject.Percentage) : undefined;
                    this.DealPrice = (odataObject.DealPrice != null) ? parseFloat(odataObject.DealPrice) : undefined;
                    this.DiscountLineTypeValue = odataObject.DiscountLineTypeValue;
                    this.ManualDiscountTypeValue = odataObject.ManualDiscountTypeValue;
                    this.CustomerDiscountTypeValue = odataObject.CustomerDiscountTypeValue;
                    this.PeriodicDiscountTypeValue = odataObject.PeriodicDiscountTypeValue;
                    this.DiscountApplicationGroup = odataObject.DiscountApplicationGroup;
                    this.ConcurrencyModeValue = odataObject.ConcurrencyModeValue;
                    this.IsCompoundable = odataObject.IsCompoundable;
                    this.DiscountCode = odataObject.DiscountCode;
                    this.PricingPriorityNumber = odataObject.PricingPriorityNumber;
                    this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
                    this.ThresholdAmountRequired = (odataObject.ThresholdAmountRequired != null) ? parseFloat(odataObject.ThresholdAmountRequired) : undefined;
                    this.BundleId = odataObject.BundleId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DiscountLineClass;
            }());
            Entities.DiscountLineClass = DiscountLineClass;
            var EmployeePermissionsClass = (function () {
                function EmployeePermissionsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PriceOverrideRestrictionValue = odataObject.PriceOverrideRestrictionValue;
                    this.AllowPriceOverride = odataObject.AllowPriceOverride;
                    this.MaximumDiscountPercentage = (odataObject.MaximumDiscountPercentage != null) ? parseFloat(odataObject.MaximumDiscountPercentage) : undefined;
                    this.MaximumLineDiscountAmount = (odataObject.MaximumLineDiscountAmount != null) ? parseFloat(odataObject.MaximumLineDiscountAmount) : undefined;
                    this.MaximumLineReturnAmount = (odataObject.MaximumLineReturnAmount != null) ? parseFloat(odataObject.MaximumLineReturnAmount) : undefined;
                    this.MaximumTotalDiscountAmount = (odataObject.MaximumTotalDiscountAmount != null) ? parseFloat(odataObject.MaximumTotalDiscountAmount) : undefined;
                    this.MaximumTotalDiscountPercentage = (odataObject.MaximumTotalDiscountPercentage != null) ? parseFloat(odataObject.MaximumTotalDiscountPercentage) : undefined;
                    this.MaxTotalReturnAmount = (odataObject.MaxTotalReturnAmount != null) ? parseFloat(odataObject.MaxTotalReturnAmount) : undefined;
                    this.StaffId = odataObject.StaffId;
                    this.Roles = undefined;
                    if (odataObject.Roles) {
                        this.Roles = [];
                        for (var i = 0; i < odataObject.Roles.length; i++) {
                            if (odataObject.Roles[i] != null) {
                                this.Roles[i] = odataObject.Roles[i];
                            }
                            else {
                                this.Roles[i] = undefined;
                            }
                        }
                    }
                    this.AllowUseSharedShift = odataObject.AllowUseSharedShift;
                    this.AllowManageSharedShift = odataObject.AllowManageSharedShift;
                    this.AllowTaskGuides = odataObject.AllowTaskGuides;
                    this.AllowSaleOutsideAssortment = odataObject.AllowSaleOutsideAssortment;
                    this.AllowPrintingReceiptCopy = odataObject.AllowPrintingReceiptCopy;
                    this.AllowSkipFiscalRegistration = odataObject.AllowSkipFiscalRegistration;
                    this.AllowSkipRegistrationOrMarkAsRegistered = odataObject.AllowSkipRegistrationOrMarkAsRegistered;
                    this.AllowCreateTransferOrder = odataObject.AllowCreateTransferOrder;
                    this.AllowAcceptOrder = odataObject.AllowAcceptOrder;
                    this.AllowRejectOrder = odataObject.AllowRejectOrder;
                    this.AllowMassActivation = odataObject.AllowMassActivation;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return EmployeePermissionsClass;
            }());
            Entities.EmployeePermissionsClass = EmployeePermissionsClass;
            var CommercePropertyClass = (function () {
                function CommercePropertyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Key = odataObject.Key;
                    if (odataObject.Value == null) {
                        this.Value = undefined;
                    }
                    else if (odataObject.Value['@odata.type'] == null) {
                        this.Value = new CommercePropertyValueClass(odataObject.Value);
                    }
                    else {
                        var className = odataObject.Value['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Value = new Commerce.Proxy.Entities[className](odataObject.Value);
                        }
                    }
                }
                return CommercePropertyClass;
            }());
            Entities.CommercePropertyClass = CommercePropertyClass;
            var CommercePropertyValueClass = (function () {
                function CommercePropertyValueClass(odataObject) {
                    odataObject = odataObject || {};
                    this.BooleanValue = odataObject.BooleanValue;
                    this.ByteValue = (odataObject.ByteValue != null) ? parseInt(odataObject.ByteValue, 10) : undefined;
                    this.DateTimeOffsetValue = (odataObject.DateTimeOffsetValue instanceof Date) ? odataObject.DateTimeOffsetValue
                        : (odataObject.DateTimeOffsetValue != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTimeOffsetValue, "Edm.DateTimeOffset", false) : undefined;
                    this.DecimalValue = (odataObject.DecimalValue != null) ? parseFloat(odataObject.DecimalValue) : undefined;
                    this.IntegerValue = odataObject.IntegerValue;
                    this.LongValue = (odataObject.LongValue != null) ? parseInt(odataObject.LongValue, 10) : undefined;
                    this.StringValue = odataObject.StringValue;
                }
                return CommercePropertyValueClass;
            }());
            Entities.CommercePropertyValueClass = CommercePropertyValueClass;
            var CountryRegionInfoClass = (function () {
                function CountryRegionInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.ShortName = odataObject.ShortName;
                    this.LongName = odataObject.LongName;
                    this.ISOCode = odataObject.ISOCode;
                    this.TimeZone = odataObject.TimeZone;
                    this.LanguageId = odataObject.LanguageId;
                    this.AddressFormatLines = undefined;
                    if (odataObject.AddressFormatLines) {
                        this.AddressFormatLines = [];
                        for (var i = 0; i < odataObject.AddressFormatLines.length; i++) {
                            if (odataObject.AddressFormatLines[i] != null) {
                                if (odataObject.AddressFormatLines[i]['@odata.type'] != null) {
                                    var className = odataObject.AddressFormatLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AddressFormatLines[i] = new Commerce.Proxy.Entities[className](odataObject.AddressFormatLines[i]);
                                    }
                                }
                                else {
                                    this.AddressFormatLines[i] = new AddressFormattingInfoClass(odataObject.AddressFormatLines[i]);
                                }
                            }
                            else {
                                this.AddressFormatLines[i] = undefined;
                            }
                        }
                    }
                    this.AddressFormatId = odataObject.AddressFormatId;
                    this.AddressFormatName = odataObject.AddressFormatName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CountryRegionInfoClass;
            }());
            Entities.CountryRegionInfoClass = CountryRegionInfoClass;
            var CreditMemoClass = (function () {
                function CreditMemoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CreditMemoClass;
            }());
            Entities.CreditMemoClass = CreditMemoClass;
            var CurrencyClass = (function () {
                function CurrencyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.CurrencySymbol = odataObject.CurrencySymbol;
                    this.RoundOffPrice = (odataObject.RoundOffPrice != null) ? parseFloat(odataObject.RoundOffPrice) : undefined;
                    this.RoundOffSales = (odataObject.RoundOffSales != null) ? parseFloat(odataObject.RoundOffSales) : undefined;
                    this.RoundOffTypePrice = odataObject.RoundOffTypePrice;
                    this.RoundOffTypeSales = odataObject.RoundOffTypeSales;
                    this.NumberOfDecimals = odataObject.NumberOfDecimals;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CurrencyClass;
            }());
            Entities.CurrencyClass = CurrencyClass;
            var CurrencyAmountClass = (function () {
                function CurrencyAmountClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.CurrencySymbol = odataObject.CurrencySymbol;
                    this.ConvertedAmount = (odataObject.ConvertedAmount != null) ? parseFloat(odataObject.ConvertedAmount) : undefined;
                    this.RoundedConvertedAmount = (odataObject.RoundedConvertedAmount != null) ? parseFloat(odataObject.RoundedConvertedAmount) : undefined;
                    this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CurrencyAmountClass;
            }());
            Entities.CurrencyAmountClass = CurrencyAmountClass;
            var EnvironmentConfigurationClass = (function () {
                function EnvironmentConfigurationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.EnvironmentId = odataObject.EnvironmentId;
                    this.EnvironmentName = odataObject.EnvironmentName;
                    this.TenantId = odataObject.TenantId;
                    this.ClientAppInsightsInstrumentationKey = odataObject.ClientAppInsightsInstrumentationKey;
                    this.HardwareStationAppInsightsInstrumentationKey = odataObject.HardwareStationAppInsightsInstrumentationKey;
                    this.WindowsPhonePosAppInsightsInstrumentationKey = odataObject.WindowsPhonePosAppInsightsInstrumentationKey;
                    this.BaseVersion = odataObject.BaseVersion;
                    if (odataObject.ScaleUnit == null) {
                        this.ScaleUnit = undefined;
                    }
                    else if (odataObject.ScaleUnit['@odata.type'] == null) {
                        this.ScaleUnit = new ScaleUnitConfigurationClass(odataObject.ScaleUnit);
                    }
                    else {
                        var className = odataObject.ScaleUnit['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ScaleUnit = new Commerce.Proxy.Entities[className](odataObject.ScaleUnit);
                        }
                    }
                }
                return EnvironmentConfigurationClass;
            }());
            Entities.EnvironmentConfigurationClass = EnvironmentConfigurationClass;
            var DeviceConfigurationClass = (function () {
                function DeviceConfigurationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.UseInMemoryDeviceDataStorage = odataObject.UseInMemoryDeviceDataStorage;
                    this.AllowItemsAggregation = odataObject.AllowItemsAggregation;
                    this.AggregateItemsForPrinting = odataObject.AggregateItemsForPrinting;
                    this.AggregatePayments = odataObject.AggregatePayments;
                    this.AlwaysExpandTransactionScreenLineDetails = odataObject.AlwaysExpandTransactionScreenLineDetails;
                    this.AuditEnabled = odataObject.AuditEnabled;
                    this.DiscountAtTotal = odataObject.DiscountAtTotal;
                    this.ProductDiscount = odataObject.ProductDiscount;
                    this.ManuallyCalculateComplexDiscounts = odataObject.ManuallyCalculateComplexDiscounts;
                    this.DisplaySecondaryTotalCurrency = odataObject.DisplaySecondaryTotalCurrency;
                    this.EndOfTransaction = odataObject.EndOfTransaction;
                    this.ItemNotOnFile = odataObject.ItemNotOnFile;
                    this.LimitStaffListToStore = odataObject.LimitStaffListToStore;
                    this.LineItemTaxChange = odataObject.LineItemTaxChange;
                    this.MarkUp = odataObject.MarkUp;
                    this.MaximumPrice = (odataObject.MaximumPrice != null) ? parseFloat(odataObject.MaximumPrice) : undefined;
                    this.MaximumQuantity = (odataObject.MaximumQuantity != null) ? parseFloat(odataObject.MaximumQuantity) : undefined;
                    this.MinimumPasswordLength = odataObject.MinimumPasswordLength;
                    this.MustKeyInPriceIfZero = odataObject.MustKeyInPriceIfZero;
                    this.NfcEContingencyModeEnabled = odataObject.NfcEContingencyModeEnabled;
                    this.NfcEVoided = odataObject.NfcEVoided;
                    this.FunctionalityProfileDescription = odataObject.FunctionalityProfileDescription;
                    this.OverridePrice = odataObject.OverridePrice;
                    this.PrintVoidTransactionReceipts = odataObject.PrintVoidTransactionReceipts;
                    this.PrintXZReportsOnTerminal = odataObject.PrintXZReportsOnTerminal;
                    this.PrintTenderDetailsOnXReport = odataObject.PrintTenderDetailsOnXReport;
                    this.ProfileId = odataObject.ProfileId;
                    this.RefundSale = odataObject.RefundSale;
                    this.ReturnProduct = odataObject.ReturnProduct;
                    this.SalesPerson = odataObject.SalesPerson;
                    this.SecondaryTotalCurrency = odataObject.SecondaryTotalCurrency;
                    this.SelectHardwareStationOnTendering = odataObject.SelectHardwareStationOnTendering;
                    this.SerialNumber = odataObject.SerialNumber;
                    this.ShowStaffListAtLogOn = odataObject.ShowStaffListAtLogOn;
                    this.StaffBarcodeLogOn = odataObject.StaffBarcodeLogOn;
                    this.StaffBarcodeLogOnRequiresPassword = odataObject.StaffBarcodeLogOnRequiresPassword;
                    this.StaffCardLogOn = odataObject.StaffCardLogOn;
                    this.StaffCardLogOnRequiresPassword = odataObject.StaffCardLogOnRequiresPassword;
                    this.StartOfTransaction = odataObject.StartOfTransaction;
                    this.EnableTimeRegistration = odataObject.EnableTimeRegistration;
                    this.TenderDeclaration = odataObject.TenderDeclaration;
                    this.TransactionTaxChange = odataObject.TransactionTaxChange;
                    this.VoidItem = odataObject.VoidItem;
                    this.VoidPayment = odataObject.VoidPayment;
                    this.SalesModeDefaultsAsCustomerOrder = odataObject.SalesModeDefaultsAsCustomerOrder;
                    this.CreateOfflineCustomerOrders = odataObject.CreateOfflineCustomerOrders;
                    this.CreateAsyncCustomers = odataObject.CreateAsyncCustomers;
                    this.EnableAxCustomerSearch = odataObject.EnableAxCustomerSearch;
                    this.VoidTransaction = odataObject.VoidTransaction;
                    this.CultureName = odataObject.CultureName;
                    this.SystemLegalTermsUrl = odataObject.SystemLegalTermsUrl;
                    this.SystemPrivacyStatementUrl = odataObject.SystemPrivacyStatementUrl;
                    this.HideTrainingMode = odataObject.HideTrainingMode;
                    this.StorePhone = odataObject.StorePhone;
                    this.StatementMethod = odataObject.StatementMethod;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.StoreTaxGroup = odataObject.StoreTaxGroup;
                    this.TaxIdNumber = odataObject.TaxIdNumber;
                    this.TaxOverrideGroup = (odataObject.TaxOverrideGroup != null) ? parseInt(odataObject.TaxOverrideGroup, 10) : undefined;
                    this.TenderDeclarationCalculation = odataObject.TenderDeclarationCalculation;
                    this.UseCustomerBasedTax = odataObject.UseCustomerBasedTax;
                    this.UseDestinationBasedTax = odataObject.UseDestinationBasedTax;
                    this.AutoLogOffTimeoutInMinutes = odataObject.AutoLogOffTimeoutInMinutes;
                    this.AutoExitMethodValue = odataObject.AutoExitMethodValue;
                    this.CustomerDisplayText1 = odataObject.CustomerDisplayText1;
                    this.CustomerDisplayText2 = odataObject.CustomerDisplayText2;
                    this.EFTStoreId = (odataObject.EFTStoreId != null) ? parseInt(odataObject.EFTStoreId, 10) : undefined;
                    this.EFTTerminalId = odataObject.EFTTerminalId;
                    this.ExitAfterEachTransaction = odataObject.ExitAfterEachTransaction;
                    this.HardwareProfile = odataObject.HardwareProfile;
                    this.Placement = odataObject.Placement;
                    this.TerminalDescription = odataObject.TerminalDescription;
                    this.OpenDrawer = odataObject.OpenDrawer;
                    this.OpenDrawerAtLogOnLogOff = odataObject.OpenDrawerAtLogOnLogOff;
                    this.PrintTaxRefundChecks = odataObject.PrintTaxRefundChecks;
                    this.StandAlone = odataObject.StandAlone;
                    this.TerminalId = odataObject.TerminalId;
                    this.TerminalStatement = odataObject.TerminalStatement;
                    this.VisualProfile = odataObject.VisualProfile;
                    this.Currency = odataObject.Currency;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.IncludeKitComponents = odataObject.IncludeKitComponents;
                    this.AccentColor = odataObject.AccentColor;
                    this.HeaderColor = odataObject.HeaderColor;
                    this.Theme = odataObject.Theme;
                    this.FontScheme = odataObject.FontScheme;
                    this.ShowAppBarLabel = odataObject.ShowAppBarLabel;
                    this.LogOnBackgroundPictureAsBase64 = odataObject.LogOnBackgroundPictureAsBase64;
                    this.LogOnBackgroundPicturePortraitAsBase64 = odataObject.LogOnBackgroundPicturePortraitAsBase64;
                    this.BackgroundPictureAsBase64 = odataObject.BackgroundPictureAsBase64;
                    this.LogonBackgroundPictureId = (odataObject.LogonBackgroundPictureId != null) ? parseInt(odataObject.LogonBackgroundPictureId, 10) : undefined;
                    this.LogonBackgroundPictureIdCompact = (odataObject.LogonBackgroundPictureIdCompact != null) ? parseInt(odataObject.LogonBackgroundPictureIdCompact, 10) : undefined;
                    this.LogonBackgroundPictureIdPortrait = (odataObject.LogonBackgroundPictureIdPortrait != null) ? parseInt(odataObject.LogonBackgroundPictureIdPortrait, 10) : undefined;
                    this.LogonBackgroundPictureIdCompactPortrait = (odataObject.LogonBackgroundPictureIdCompactPortrait != null) ? parseInt(odataObject.LogonBackgroundPictureIdCompactPortrait, 10) : undefined;
                    this.BackgroundPictureId = (odataObject.BackgroundPictureId != null) ? parseInt(odataObject.BackgroundPictureId, 10) : undefined;
                    this.RequireAmountDeclaration = odataObject.RequireAmountDeclaration;
                    this.DecimalNotRequiredForMinorCurrencyUnit = odataObject.DecimalNotRequiredForMinorCurrencyUnit;
                    this.MaxTransactionSearchResults = odataObject.MaxTransactionSearchResults;
                    this.OfflineProfileId = (odataObject.OfflineProfileId != null) ? parseInt(odataObject.OfflineProfileId, 10) : undefined;
                    this.NewOfflineDatabaseCheckInterval = odataObject.NewOfflineDatabaseCheckInterval;
                    this.OfflineTransactionUploadInterval = odataObject.OfflineTransactionUploadInterval;
                    this.ReconnectToOnlineInterval = odataObject.ReconnectToOnlineInterval;
                    this.SwitchToOfflineTimeout = odataObject.SwitchToOfflineTimeout;
                    this.RetentionDays = odataObject.RetentionDays;
                    if (odataObject.HardwareConfigurations == null) {
                        this.HardwareConfigurations = undefined;
                    }
                    else if (odataObject.HardwareConfigurations['@odata.type'] == null) {
                        this.HardwareConfigurations = new HardwareConfigurationsClass(odataObject.HardwareConfigurations);
                    }
                    else {
                        var className = odataObject.HardwareConfigurations['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.HardwareConfigurations = new Commerce.Proxy.Entities[className](odataObject.HardwareConfigurations);
                        }
                    }
                    this.CreateRecording = odataObject.CreateRecording;
                    this.PlaybackRecording = odataObject.PlaybackRecording;
                    this.ShouldUseDefaultCommisionSalesGroup = odataObject.ShouldUseDefaultCommisionSalesGroup;
                    this.AskForSalesRepresentative = odataObject.AskForSalesRepresentative;
                    this.IsSalesRepRequired = odataObject.IsSalesRepRequired;
                    this.ProhibitMixingSalesAndReturns = odataObject.ProhibitMixingSalesAndReturns;
                    this.ApplyDiscountsToPriceKeyedIn = odataObject.ApplyDiscountsToPriceKeyedIn;
                    this.ApplyDiscountsToPriceOverrides = odataObject.ApplyDiscountsToPriceOverrides;
                    this.IsProductSuggestionsEnabled = odataObject.IsProductSuggestionsEnabled;
                    this.ProductSearchType = odataObject.ProductSearchType;
                    this.DenominationsToDisplayValue = odataObject.DenominationsToDisplayValue;
                    this.PromptOnSeamlessOffline = odataObject.PromptOnSeamlessOffline;
                    this.RetryCountToOffline = odataObject.RetryCountToOffline;
                    this.RejectOrderFulfillment = odataObject.RejectOrderFulfillment;
                    this.ManuallyCalculateTaxes = odataObject.ManuallyCalculateTaxes;
                    this.EmployeeLogonTypeValue = odataObject.EmployeeLogonTypeValue;
                    this.StartAmountCalculation = odataObject.StartAmountCalculation;
                    this.BankDropCalculation = odataObject.BankDropCalculation;
                    this.GenerateLoyaltyCardNumber = odataObject.GenerateLoyaltyCardNumber;
                    this.FiscalRegistrationProcessId = odataObject.FiscalRegistrationProcessId;
                    this.IncludeSalesOrderInvoices = odataObject.IncludeSalesOrderInvoices;
                    this.IncludeFreeTextInvoices = odataObject.IncludeFreeTextInvoices;
                    this.IncludeProjectInvoices = odataObject.IncludeProjectInvoices;
                    this.IncludeCreditNoteInvoices = odataObject.IncludeCreditNoteInvoices;
                    this.DisplayTaxExemptInLineDetails = odataObject.DisplayTaxExemptInLineDetails;
                    this.TaxExemptReceiptIndicator = odataObject.TaxExemptReceiptIndicator;
                    this.ManuallyCalculateCharges = odataObject.ManuallyCalculateCharges;
                    this.ChargeOverrideReasonCode = odataObject.ChargeOverrideReasonCode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DeviceConfigurationClass;
            }());
            Entities.DeviceConfigurationClass = DeviceConfigurationClass;
            var DeviceClass = (function () {
                function DeviceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.DeviceNumber = odataObject.DeviceNumber;
                    this.DeviceId = odataObject.DeviceId;
                    this.Description = odataObject.Description;
                    this.DeviceType = odataObject.DeviceType;
                    this.TerminalRecordId = (odataObject.TerminalRecordId != null) ? parseInt(odataObject.TerminalRecordId, 10) : undefined;
                    this.TerminalId = odataObject.TerminalId;
                    this.ChannelName = odataObject.ChannelName;
                    this.UseInMemoryDeviceDataStorage = odataObject.UseInMemoryDeviceDataStorage;
                    this.AllowMassActivation = odataObject.AllowMassActivation;
                    this.TokenIssueTime = (odataObject.TokenIssueTime instanceof Date) ? odataObject.TokenIssueTime
                        : (odataObject.TokenIssueTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TokenIssueTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ActivationStatusValue = odataObject.ActivationStatusValue;
                    this.Token = odataObject.Token;
                    this.CountryRegionIsoCode = odataObject.CountryRegionIsoCode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DeviceClass;
            }());
            Entities.DeviceClass = DeviceClass;
            var DiscountCodeClass = (function () {
                function DiscountCodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Barcode = odataObject.Barcode;
                    this.Code = odataObject.Code;
                    this.ConcurrencyMode = odataObject.ConcurrencyMode;
                    this.Description = odataObject.Description;
                    this.Disclaimer = odataObject.Disclaimer;
                    this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
                    this.Name = odataObject.Name;
                    this.OfferId = odataObject.OfferId;
                    this.IsEnabled = odataObject.IsEnabled;
                    this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
                        : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
                        : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DiscountCodeClass;
            }());
            Entities.DiscountCodeClass = DiscountCodeClass;
            var DistrictInfoClass = (function () {
                function DistrictInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.StateId = odataObject.StateId;
                    this.CountyId = odataObject.CountyId;
                    this.CityName = odataObject.CityName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DistrictInfoClass;
            }());
            Entities.DistrictInfoClass = DistrictInfoClass;
            var HardwareProfileClass = (function () {
                function HardwareProfileClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineDisplayDelayForLinkedItems = odataObject.LineDisplayDelayForLinkedItems;
                    this.LineDisplayBalanceText = odataObject.LineDisplayBalanceText;
                    this.LineDisplayBinaryConversion = odataObject.LineDisplayBinaryConversion;
                    this.LineDisplayCharacterSet = odataObject.LineDisplayCharacterSet;
                    this.LineDisplayClosedLine1 = odataObject.LineDisplayClosedLine1;
                    this.LineDisplayClosedLine2 = odataObject.LineDisplayClosedLine2;
                    this.LineDisplayDeviceDescription = odataObject.LineDisplayDeviceDescription;
                    this.LineDisplayDeviceTypeValue = odataObject.LineDisplayDeviceTypeValue;
                    this.LineDisplayDeviceName = odataObject.LineDisplayDeviceName;
                    this.LineDisplayDisplayLinkedItem = odataObject.LineDisplayDisplayLinkedItem;
                    this.LineDisplayDisplayTerminalClosed = odataObject.LineDisplayDisplayTerminalClosed;
                    this.LineDisplayTotalText = odataObject.LineDisplayTotalText;
                    this.DualDisplayActive = odataObject.DualDisplayActive;
                    this.DualDisplayWebBrowserUrl = odataObject.DualDisplayWebBrowserUrl;
                    this.DualDisplayImageRotatorInterval = odataObject.DualDisplayImageRotatorInterval;
                    this.DualDisplayImageRotatorPath = odataObject.DualDisplayImageRotatorPath;
                    this.DualDisplayReceiptWidthPercentage = (odataObject.DualDisplayReceiptWidthPercentage != null) ? parseFloat(odataObject.DualDisplayReceiptWidthPercentage) : undefined;
                    this.DualDisplayDisplayType = odataObject.DualDisplayDisplayType;
                    this.EftTypeId = odataObject.EftTypeId;
                    this.EftCompanyId = odataObject.EftCompanyId;
                    this.EftConfiguration = odataObject.EftConfiguration;
                    this.EftPaymentConnectorName = odataObject.EftPaymentConnectorName;
                    this.EftData = odataObject.EftData;
                    this.EftDescription = odataObject.EftDescription;
                    this.EftMerchantId = odataObject.EftMerchantId;
                    this.EftPassword = odataObject.EftPassword;
                    this.EftServerName = odataObject.EftServerName;
                    this.EftServerPort = odataObject.EftServerPort;
                    this.EftUserId = odataObject.EftUserId;
                    this.EftTestMode = odataObject.EftTestMode;
                    this.MsrEndTrack1 = odataObject.MsrEndTrack1;
                    this.MsrEndTrack2 = odataObject.MsrEndTrack2;
                    this.FiscalPrinterManagementReportPAFIdentification = odataObject.FiscalPrinterManagementReportPAFIdentification;
                    this.FiscalPrinterManagementReportConfigParameter = odataObject.FiscalPrinterManagementReportConfigParameter;
                    this.FiscalPrinterManagementReportTenderType = odataObject.FiscalPrinterManagementReportTenderType;
                    this.FiscalPrinterManagementReportGiftCard = odataObject.FiscalPrinterManagementReportGiftCard;
                    this.FiscalRegisterDeviceTypeValue = odataObject.FiscalRegisterDeviceTypeValue;
                    this.FiscalRegisterConfiguration = odataObject.FiscalRegisterConfiguration;
                    this.FiscalRegisterDeviceDescription = odataObject.FiscalRegisterDeviceDescription;
                    this.FiscalRegisterDeviceName = odataObject.FiscalRegisterDeviceName;
                    this.KeyboardMappingId = odataObject.KeyboardMappingId;
                    this.KeyLockDeviceTypeValue = odataObject.KeyLockDeviceTypeValue;
                    this.KeyLockDeviceDescription = odataObject.KeyLockDeviceDescription;
                    this.KeyLockDeviceName = odataObject.KeyLockDeviceName;
                    this.MsrDeviceTypeValue = odataObject.MsrDeviceTypeValue;
                    this.MsrDeviceDescription = odataObject.MsrDeviceDescription;
                    this.MsrDeviceName = odataObject.MsrDeviceName;
                    this.MsrMake = odataObject.MsrMake;
                    this.MsrModel = odataObject.MsrModel;
                    this.MsrSeparator = odataObject.MsrSeparator;
                    this.MsrStartTrack = odataObject.MsrStartTrack;
                    this.PinPadDeviceTypeValue = odataObject.PinPadDeviceTypeValue;
                    this.PinPadDeviceName = odataObject.PinPadDeviceName;
                    this.PinPadMake = odataObject.PinPadMake;
                    this.PinPadModel = odataObject.PinPadModel;
                    this.PinPadDeviceDescription = odataObject.PinPadDeviceDescription;
                    this.ProfileDescription = odataObject.ProfileDescription;
                    this.ProfileId = odataObject.ProfileId;
                    this.RFIDDeviceTypeValue = odataObject.RFIDDeviceTypeValue;
                    this.RFIDDeviceName = odataObject.RFIDDeviceName;
                    this.RFIDDeviceDescription = odataObject.RFIDDeviceDescription;
                    this.ScaleDeviceTypeValue = odataObject.ScaleDeviceTypeValue;
                    this.ScaleDeviceName = odataObject.ScaleDeviceName;
                    this.ScaleDeviceDescription = odataObject.ScaleDeviceDescription;
                    this.ScaleManualInputAllowed = odataObject.ScaleManualInputAllowed;
                    this.ScaleTimeoutInSeconds = odataObject.ScaleTimeoutInSeconds;
                    this.SignatureCaptureDeviceTypeValue = odataObject.SignatureCaptureDeviceTypeValue;
                    this.SignatureCaptureDeviceName = odataObject.SignatureCaptureDeviceName;
                    this.SignatureCaptureMake = odataObject.SignatureCaptureMake;
                    this.SignatureCaptureModel = odataObject.SignatureCaptureModel;
                    this.SignatureCaptureDeviceDescription = odataObject.SignatureCaptureDeviceDescription;
                    this.SignatureCaptureFormName = odataObject.SignatureCaptureFormName;
                    this.Printers = undefined;
                    if (odataObject.Printers) {
                        this.Printers = [];
                        for (var i = 0; i < odataObject.Printers.length; i++) {
                            if (odataObject.Printers[i] != null) {
                                if (odataObject.Printers[i]['@odata.type'] != null) {
                                    var className = odataObject.Printers[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Printers[i] = new Commerce.Proxy.Entities[className](odataObject.Printers[i]);
                                    }
                                }
                                else {
                                    this.Printers[i] = new HardwareProfilePrinterClass(odataObject.Printers[i]);
                                }
                            }
                            else {
                                this.Printers[i] = undefined;
                            }
                        }
                    }
                    this.Scanners = undefined;
                    if (odataObject.Scanners) {
                        this.Scanners = [];
                        for (var i = 0; i < odataObject.Scanners.length; i++) {
                            if (odataObject.Scanners[i] != null) {
                                if (odataObject.Scanners[i]['@odata.type'] != null) {
                                    var className = odataObject.Scanners[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Scanners[i] = new Commerce.Proxy.Entities[className](odataObject.Scanners[i]);
                                    }
                                }
                                else {
                                    this.Scanners[i] = new HardwareProfileScannerClass(odataObject.Scanners[i]);
                                }
                            }
                            else {
                                this.Scanners[i] = undefined;
                            }
                        }
                    }
                    this.FiscalIntegrationTechnicalProfiles = undefined;
                    if (odataObject.FiscalIntegrationTechnicalProfiles) {
                        this.FiscalIntegrationTechnicalProfiles = [];
                        for (var i = 0; i < odataObject.FiscalIntegrationTechnicalProfiles.length; i++) {
                            if (odataObject.FiscalIntegrationTechnicalProfiles[i] != null) {
                                if (odataObject.FiscalIntegrationTechnicalProfiles[i]['@odata.type'] != null) {
                                    var className = odataObject.FiscalIntegrationTechnicalProfiles[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.FiscalIntegrationTechnicalProfiles[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalIntegrationTechnicalProfiles[i]);
                                    }
                                }
                                else {
                                    this.FiscalIntegrationTechnicalProfiles[i] = new FiscalIntegrationTechnicalProfileClass(odataObject.FiscalIntegrationTechnicalProfiles[i]);
                                }
                            }
                            else {
                                this.FiscalIntegrationTechnicalProfiles[i] = undefined;
                            }
                        }
                    }
                    this.CashDrawers = undefined;
                    if (odataObject.CashDrawers) {
                        this.CashDrawers = [];
                        for (var i = 0; i < odataObject.CashDrawers.length; i++) {
                            if (odataObject.CashDrawers[i] != null) {
                                if (odataObject.CashDrawers[i]['@odata.type'] != null) {
                                    var className = odataObject.CashDrawers[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CashDrawers[i] = new Commerce.Proxy.Entities[className](odataObject.CashDrawers[i]);
                                    }
                                }
                                else {
                                    this.CashDrawers[i] = new HardwareProfileCashDrawerClass(odataObject.CashDrawers[i]);
                                }
                            }
                            else {
                                this.CashDrawers[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareProfileClass;
            }());
            Entities.HardwareProfileClass = HardwareProfileClass;
            var SupportedLanguageClass = (function () {
                function SupportedLanguageClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LanguageId = odataObject.LanguageId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SupportedLanguageClass;
            }());
            Entities.SupportedLanguageClass = SupportedLanguageClass;
            var PaymentCardClass = (function () {
                function PaymentCardClass(odataObject) {
                    odataObject = odataObject || {};
                    this.UseShippingAddress = odataObject.UseShippingAddress;
                    this.CardNumber = odataObject.CardNumber;
                    this.CCID = odataObject.CCID;
                    this.Track1 = odataObject.Track1;
                    this.Track2 = odataObject.Track2;
                    this.Track3 = odataObject.Track3;
                    this.VoiceAuthorizationCode = odataObject.VoiceAuthorizationCode;
                    this.EncryptedPin = odataObject.EncryptedPin;
                    this.AdditionalSecurityData = odataObject.AdditionalSecurityData;
                    this.IsSwipe = odataObject.IsSwipe;
                    this.Phone = odataObject.Phone;
                    this.Country = odataObject.Country;
                    this.House = odataObject.House;
                    this.Address1 = odataObject.Address1;
                    this.Address2 = odataObject.Address2;
                    this.City = odataObject.City;
                    this.State = odataObject.State;
                    this.Zip = odataObject.Zip;
                    this.NameOnCard = odataObject.NameOnCard;
                    this.CardTypeId = odataObject.CardTypeId;
                    this.ExpirationMonth = odataObject.ExpirationMonth;
                    this.ExpirationYear = odataObject.ExpirationYear;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PaymentCardClass;
            }());
            Entities.PaymentCardClass = PaymentCardClass;
            var CardPaymentAcceptSettingsClass = (function () {
                function CardPaymentAcceptSettingsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HostPageOrigin = odataObject.HostPageOrigin;
                    this.AdaptorPath = odataObject.AdaptorPath;
                    this.CardTokenizationEnabled = odataObject.CardTokenizationEnabled;
                    this.CardPaymentEnabled = odataObject.CardPaymentEnabled;
                    this.PaymentAmount = (odataObject.PaymentAmount != null) ? parseFloat(odataObject.PaymentAmount) : undefined;
                }
                return CardPaymentAcceptSettingsClass;
            }());
            Entities.CardPaymentAcceptSettingsClass = CardPaymentAcceptSettingsClass;
            var CardPaymentAcceptPointClass = (function () {
                function CardPaymentAcceptPointClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AcceptPageUrl = odataObject.AcceptPageUrl;
                    this.AcceptPageSubmitUrl = odataObject.AcceptPageSubmitUrl;
                    this.MessageOrigin = odataObject.MessageOrigin;
                    this.AcceptPageContent = odataObject.AcceptPageContent;
                }
                return CardPaymentAcceptPointClass;
            }());
            Entities.CardPaymentAcceptPointClass = CardPaymentAcceptPointClass;
            var CardPaymentAcceptResultClass = (function () {
                function CardPaymentAcceptResultClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.TenderLine == null) {
                        this.TenderLine = undefined;
                    }
                    else if (odataObject.TenderLine['@odata.type'] == null) {
                        this.TenderLine = new TenderLineClass(odataObject.TenderLine);
                    }
                    else {
                        var className = odataObject.TenderLine['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.TenderLine = new Commerce.Proxy.Entities[className](odataObject.TenderLine);
                        }
                    }
                    if (odataObject.TokenizedPaymentCard == null) {
                        this.TokenizedPaymentCard = undefined;
                    }
                    else if (odataObject.TokenizedPaymentCard['@odata.type'] == null) {
                        this.TokenizedPaymentCard = new TokenizedPaymentCardClass(odataObject.TokenizedPaymentCard);
                    }
                    else {
                        var className = odataObject.TokenizedPaymentCard['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.TokenizedPaymentCard = new Commerce.Proxy.Entities[className](odataObject.TokenizedPaymentCard);
                        }
                    }
                    this.PaymentSdkErrors = undefined;
                    if (odataObject.PaymentSdkErrors) {
                        this.PaymentSdkErrors = [];
                        for (var i = 0; i < odataObject.PaymentSdkErrors.length; i++) {
                            if (odataObject.PaymentSdkErrors[i] != null) {
                                if (odataObject.PaymentSdkErrors[i]['@odata.type'] != null) {
                                    var className = odataObject.PaymentSdkErrors[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.PaymentSdkErrors[i] = new Commerce.Proxy.Entities[className](odataObject.PaymentSdkErrors[i]);
                                    }
                                }
                                else {
                                    this.PaymentSdkErrors[i] = new PaymentErrorClass(odataObject.PaymentSdkErrors[i]);
                                }
                            }
                            else {
                                this.PaymentSdkErrors[i] = undefined;
                            }
                        }
                    }
                }
                return CardPaymentAcceptResultClass;
            }());
            Entities.CardPaymentAcceptResultClass = CardPaymentAcceptResultClass;
            var ReasonCodeLineClass = (function () {
                function ReasonCodeLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.Information = odataObject.Information;
                    this.InformationAmount = (odataObject.InformationAmount != null) ? parseFloat(odataObject.InformationAmount) : undefined;
                    this.InputTypeValue = odataObject.InputTypeValue;
                    this.ItemTender = odataObject.ItemTender;
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.LineTypeValue = odataObject.LineTypeValue;
                    this.ParentLineId = odataObject.ParentLineId;
                    this.ReasonCodeId = odataObject.ReasonCodeId;
                    this.StatementCode = odataObject.StatementCode;
                    this.SubReasonCodeId = odataObject.SubReasonCodeId;
                    this.SourceCode = odataObject.SourceCode;
                    this.SourceCode2 = odataObject.SourceCode2;
                    this.SourceCode3 = odataObject.SourceCode3;
                    this.TransactionId = odataObject.TransactionId;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.FiscalTransactionParentGuid = odataObject.FiscalTransactionParentGuid;
                    this.IsChanged = odataObject.IsChanged;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReasonCodeLineClass;
            }());
            Entities.ReasonCodeLineClass = ReasonCodeLineClass;
            var ReasonSubCodeClass = (function () {
                function ReasonSubCodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TriggerCode = odataObject.TriggerCode;
                    this.AmountPercent = (odataObject.AmountPercent != null) ? parseFloat(odataObject.AmountPercent) : undefined;
                    this.ReasonCodeId = odataObject.ReasonCodeId;
                    this.SubCodeId = odataObject.SubCodeId;
                    this.Description = odataObject.Description;
                    this.TriggerFunctionTypeValue = odataObject.TriggerFunctionTypeValue;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.PriceTypeValue = odataObject.PriceTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReasonSubCodeClass;
            }());
            Entities.ReasonSubCodeClass = ReasonSubCodeClass;
            var ReceiptClass = (function () {
                function ReceiptClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionId = odataObject.TransactionId;
                    this.Header = odataObject.Header;
                    this.Body = odataObject.Body;
                    this.Footer = odataObject.Footer;
                    this.Width = odataObject.Width;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.LayoutId = odataObject.LayoutId;
                    this.ReceiptTitle = odataObject.ReceiptTitle;
                    this.ReceiptTypeValue = odataObject.ReceiptTypeValue;
                    this.ReceiptTypeStrValue = odataObject.ReceiptTypeStrValue;
                    this.Printers = undefined;
                    if (odataObject.Printers) {
                        this.Printers = [];
                        for (var i = 0; i < odataObject.Printers.length; i++) {
                            if (odataObject.Printers[i] != null) {
                                if (odataObject.Printers[i]['@odata.type'] != null) {
                                    var className = odataObject.Printers[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Printers[i] = new Commerce.Proxy.Entities[className](odataObject.Printers[i]);
                                    }
                                }
                                else {
                                    this.Printers[i] = new PrinterClass(odataObject.Printers[i]);
                                }
                            }
                            else {
                                this.Printers[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReceiptClass;
            }());
            Entities.ReceiptClass = ReceiptClass;
            var ReceiptMaskClass = (function () {
                function ReceiptMaskClass(odataObject) {
                    odataObject = odataObject || {};
                    this.FunctionalityProfileId = odataObject.FunctionalityProfileId;
                    this.IsIndependent = odataObject.IsIndependent;
                    this.ReceiptTransactionTypeValue = odataObject.ReceiptTransactionTypeValue;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Mask = odataObject.Mask;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReceiptMaskClass;
            }());
            Entities.ReceiptMaskClass = ReceiptMaskClass;
            var SalesLineClass = (function () {
                function SalesLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.StaffId = odataObject.StaffId;
                    this.LineId = odataObject.LineId;
                    this.Description = odataObject.Description;
                    this.OriginLineId = odataObject.OriginLineId;
                    this.TaxOverrideCode = odataObject.TaxOverrideCode;
                    this.IsPriceKeyedIn = odataObject.IsPriceKeyedIn;
                    this.IsTaxOverideCodeTaxExempt = odataObject.IsTaxOverideCodeTaxExempt;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.Barcode = odataObject.Barcode;
                    this.BarcodeEmbeddedPrice = (odataObject.BarcodeEmbeddedPrice != null) ? parseFloat(odataObject.BarcodeEmbeddedPrice) : undefined;
                    this.PriceInBarcode = odataObject.PriceInBarcode;
                    this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
                    this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
                    this.ListingId = (odataObject.ListingId != null) ? parseInt(odataObject.ListingId, 10) : undefined;
                    this.IsPriceOverridden = odataObject.IsPriceOverridden;
                    this.OriginalPrice = (odataObject.OriginalPrice != null) ? parseFloat(odataObject.OriginalPrice) : undefined;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
                    this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
                    this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
                    this.TotalPercentageDiscount = (odataObject.TotalPercentageDiscount != null) ? parseFloat(odataObject.TotalPercentageDiscount) : undefined;
                    this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
                    this.PeriodicDiscount = (odataObject.PeriodicDiscount != null) ? parseFloat(odataObject.PeriodicDiscount) : undefined;
                    this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
                    this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.Comment = odataObject.Comment;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.WarehouseLocation = odataObject.WarehouseLocation;
                    this.InventoryStatusId = odataObject.InventoryStatusId;
                    this.LicensePlate = odataObject.LicensePlate;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.ItemType = odataObject.ItemType;
                    this.ReservationId = odataObject.ReservationId;
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.ReturnQuantity = (odataObject.ReturnQuantity != null) ? parseFloat(odataObject.ReturnQuantity) : undefined;
                    this.QuantityRemained = (odataObject.QuantityRemained != null) ? parseFloat(odataObject.QuantityRemained) : undefined;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.LineVersion = odataObject.LineVersion;
                    this.StatusValue = odataObject.StatusValue;
                    this.SalesStatusValue = odataObject.SalesStatusValue;
                    this.ProductSourceValue = odataObject.ProductSourceValue;
                    this.IsGiftCardLine = odataObject.IsGiftCardLine;
                    this.GiftCardId = odataObject.GiftCardId;
                    this.GiftCardCurrencyCode = odataObject.GiftCardCurrencyCode;
                    this.GiftCardOperationValue = odataObject.GiftCardOperationValue;
                    this.IsInvoiceLine = odataObject.IsInvoiceLine;
                    this.InvoiceId = odataObject.InvoiceId;
                    this.InvoiceAmount = (odataObject.InvoiceAmount != null) ? parseFloat(odataObject.InvoiceAmount) : undefined;
                    this.IsInvoiceSettled = odataObject.IsInvoiceSettled;
                    this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
                    this.InvoicedSalesId = odataObject.InvoicedSalesId;
                    this.IsVoided = odataObject.IsVoided;
                    this.IsPriceLocked = odataObject.IsPriceLocked;
                    this.ChargeLines = undefined;
                    if (odataObject.ChargeLines) {
                        this.ChargeLines = [];
                        for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                            if (odataObject.ChargeLines[i] != null) {
                                if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ChargeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i]);
                                    }
                                }
                                else {
                                    this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                                }
                            }
                            else {
                                this.ChargeLines[i] = undefined;
                            }
                        }
                    }
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.AgreementPrice = (odataObject.AgreementPrice != null) ? parseFloat(odataObject.AgreementPrice) : undefined;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    this.ReturnTransactionId = odataObject.ReturnTransactionId;
                    this.ReturnLineNumber = (odataObject.ReturnLineNumber != null) ? parseFloat(odataObject.ReturnLineNumber) : undefined;
                    this.ReturnInventTransId = odataObject.ReturnInventTransId;
                    this.ReturnStore = odataObject.ReturnStore;
                    this.ReturnTerminalId = odataObject.ReturnTerminalId;
                    this.ReturnChannelId = (odataObject.ReturnChannelId != null) ? parseInt(odataObject.ReturnChannelId, 10) : undefined;
                    this.FulfillmentStoreId = odataObject.FulfillmentStoreId;
                    this.SalesDate = (odataObject.SalesDate instanceof Date) ? odataObject.SalesDate
                        : (odataObject.SalesDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.SalesDate, "Edm.DateTimeOffset", false) : undefined;
                    this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
                    this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
                    this.QuantityCanceled = (odataObject.QuantityCanceled != null) ? parseFloat(odataObject.QuantityCanceled) : undefined;
                    this.SavedQuantity = (odataObject.SavedQuantity != null) ? parseFloat(odataObject.SavedQuantity) : undefined;
                    this.IsSavedDiscount = odataObject.IsSavedDiscount;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.SerialNumber = odataObject.SerialNumber;
                    this.BatchId = odataObject.BatchId;
                    this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
                    this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.ElectronicDeliveryEmailAddress = odataObject.ElectronicDeliveryEmailAddress;
                    this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
                    this.LoyaltyDiscountAmount = (odataObject.LoyaltyDiscountAmount != null) ? parseFloat(odataObject.LoyaltyDiscountAmount) : undefined;
                    this.LoyaltyPercentageDiscount = (odataObject.LoyaltyPercentageDiscount != null) ? parseFloat(odataObject.LoyaltyPercentageDiscount) : undefined;
                    this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
                    this.IsCustomerAccountDeposit = odataObject.IsCustomerAccountDeposit;
                    this.Blocked = odataObject.Blocked;
                    this.Found = odataObject.Found;
                    this.DateToActivateItem = (odataObject.DateToActivateItem instanceof Date) ? odataObject.DateToActivateItem
                        : (odataObject.DateToActivateItem != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToActivateItem, "Edm.DateTimeOffset", false) : undefined;
                    this.LinePercentageDiscount = (odataObject.LinePercentageDiscount != null) ? parseFloat(odataObject.LinePercentageDiscount) : undefined;
                    this.PeriodicPercentageDiscount = (odataObject.PeriodicPercentageDiscount != null) ? parseFloat(odataObject.PeriodicPercentageDiscount) : undefined;
                    this.QuantityDiscounted = (odataObject.QuantityDiscounted != null) ? parseFloat(odataObject.QuantityDiscounted) : undefined;
                    this.UnitQuantity = (odataObject.UnitQuantity != null) ? parseFloat(odataObject.UnitQuantity) : undefined;
                    if (odataObject.UnitOfMeasureConversion == null) {
                        this.UnitOfMeasureConversion = undefined;
                    }
                    else if (odataObject.UnitOfMeasureConversion['@odata.type'] == null) {
                        this.UnitOfMeasureConversion = new UnitOfMeasureConversionClass(odataObject.UnitOfMeasureConversion);
                    }
                    else {
                        var className = odataObject.UnitOfMeasureConversion['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.UnitOfMeasureConversion = new Commerce.Proxy.Entities[className](odataObject.UnitOfMeasureConversion);
                        }
                    }
                    this.DiscountLines = undefined;
                    if (odataObject.DiscountLines) {
                        this.DiscountLines = [];
                        for (var i = 0; i < odataObject.DiscountLines.length; i++) {
                            if (odataObject.DiscountLines[i] != null) {
                                if (odataObject.DiscountLines[i]['@odata.type'] != null) {
                                    var className = odataObject.DiscountLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DiscountLines[i] = new Commerce.Proxy.Entities[className](odataObject.DiscountLines[i]);
                                    }
                                }
                                else {
                                    this.DiscountLines[i] = new DiscountLineClass(odataObject.DiscountLines[i]);
                                }
                            }
                            else {
                                this.DiscountLines[i] = undefined;
                            }
                        }
                    }
                    this.PriceLines = undefined;
                    if (odataObject.PriceLines) {
                        this.PriceLines = [];
                        for (var i = 0; i < odataObject.PriceLines.length; i++) {
                            if (odataObject.PriceLines[i] != null) {
                                if (odataObject.PriceLines[i]['@odata.type'] != null) {
                                    var className = odataObject.PriceLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.PriceLines[i] = new Commerce.Proxy.Entities[className](odataObject.PriceLines[i]);
                                    }
                                }
                                else {
                                    this.PriceLines[i] = new PriceLineClass(odataObject.PriceLines[i]);
                                }
                            }
                            else {
                                this.PriceLines[i] = undefined;
                            }
                        }
                    }
                    this.PeriodicDiscountPossibilities = undefined;
                    if (odataObject.PeriodicDiscountPossibilities) {
                        this.PeriodicDiscountPossibilities = [];
                        for (var i = 0; i < odataObject.PeriodicDiscountPossibilities.length; i++) {
                            if (odataObject.PeriodicDiscountPossibilities[i] != null) {
                                if (odataObject.PeriodicDiscountPossibilities[i]['@odata.type'] != null) {
                                    var className = odataObject.PeriodicDiscountPossibilities[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.PeriodicDiscountPossibilities[i] = new Commerce.Proxy.Entities[className](odataObject.PeriodicDiscountPossibilities[i]);
                                    }
                                }
                                else {
                                    this.PeriodicDiscountPossibilities[i] = new DiscountLineClass(odataObject.PeriodicDiscountPossibilities[i]);
                                }
                            }
                            else {
                                this.PeriodicDiscountPossibilities[i] = undefined;
                            }
                        }
                    }
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.ReturnLabelProperties == null) {
                        this.ReturnLabelProperties = undefined;
                    }
                    else if (odataObject.ReturnLabelProperties['@odata.type'] == null) {
                        this.ReturnLabelProperties = new ReturnLabelContentClass(odataObject.ReturnLabelProperties);
                    }
                    else {
                        var className = odataObject.ReturnLabelProperties['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ReturnLabelProperties = new Commerce.Proxy.Entities[className](odataObject.ReturnLabelProperties);
                        }
                    }
                    this.LineMultilineDiscOnItem = odataObject.LineMultilineDiscOnItem;
                    this.RelatedDiscountedLineIds = undefined;
                    if (odataObject.RelatedDiscountedLineIds) {
                        this.RelatedDiscountedLineIds = [];
                        for (var i = 0; i < odataObject.RelatedDiscountedLineIds.length; i++) {
                            if (odataObject.RelatedDiscountedLineIds[i] != null) {
                                this.RelatedDiscountedLineIds[i] = odataObject.RelatedDiscountedLineIds[i];
                            }
                            else {
                                this.RelatedDiscountedLineIds[i] = undefined;
                            }
                        }
                    }
                    this.LinkedParentLineId = odataObject.LinkedParentLineId;
                    this.LineMultilineDiscOnItemValue = odataObject.LineMultilineDiscOnItemValue;
                    this.WasChanged = odataObject.WasChanged;
                    this.OriginalSalesOrderUnitOfMeasure = odataObject.OriginalSalesOrderUnitOfMeasure;
                    this.InventOrderUnitOfMeasure = odataObject.InventOrderUnitOfMeasure;
                    this.TrackingId = odataObject.TrackingId;
                    this.IsLoyaltyDiscountApplied = odataObject.IsLoyaltyDiscountApplied;
                    this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
                    this.AttributeValues = undefined;
                    if (odataObject.AttributeValues) {
                        this.AttributeValues = [];
                        for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                            if (odataObject.AttributeValues[i] != null) {
                                if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                                    var className = odataObject.AttributeValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i]);
                                    }
                                }
                                else {
                                    this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                                }
                            }
                            else {
                                this.AttributeValues[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.ThirdPartyGiftCardInfo == null) {
                        this.ThirdPartyGiftCardInfo = undefined;
                    }
                    else if (odataObject.ThirdPartyGiftCardInfo['@odata.type'] == null) {
                        this.ThirdPartyGiftCardInfo = new ThirdPartyGiftCardInfoClass(odataObject.ThirdPartyGiftCardInfo);
                    }
                    else {
                        var className = odataObject.ThirdPartyGiftCardInfo['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ThirdPartyGiftCardInfo = new Commerce.Proxy.Entities[className](odataObject.ThirdPartyGiftCardInfo);
                        }
                    }
                    this.QuantityReturnable = (odataObject.QuantityReturnable != null) ? parseFloat(odataObject.QuantityReturnable) : undefined;
                    this.LoyaltyRewardPointLines = undefined;
                    if (odataObject.LoyaltyRewardPointLines) {
                        this.LoyaltyRewardPointLines = [];
                        for (var i = 0; i < odataObject.LoyaltyRewardPointLines.length; i++) {
                            if (odataObject.LoyaltyRewardPointLines[i] != null) {
                                if (odataObject.LoyaltyRewardPointLines[i]['@odata.type'] != null) {
                                    var className = odataObject.LoyaltyRewardPointLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyRewardPointLines[i]);
                                    }
                                }
                                else {
                                    this.LoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.LoyaltyRewardPointLines[i]);
                                }
                            }
                            else {
                                this.LoyaltyRewardPointLines[i] = undefined;
                            }
                        }
                    }
                    this.ReturnLoyaltyRewardPointLines = undefined;
                    if (odataObject.ReturnLoyaltyRewardPointLines) {
                        this.ReturnLoyaltyRewardPointLines = [];
                        for (var i = 0; i < odataObject.ReturnLoyaltyRewardPointLines.length; i++) {
                            if (odataObject.ReturnLoyaltyRewardPointLines[i] != null) {
                                if (odataObject.ReturnLoyaltyRewardPointLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReturnLoyaltyRewardPointLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReturnLoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnLoyaltyRewardPointLines[i]);
                                    }
                                }
                                else {
                                    this.ReturnLoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.ReturnLoyaltyRewardPointLines[i]);
                                }
                            }
                            else {
                                this.ReturnLoyaltyRewardPointLines[i] = undefined;
                            }
                        }
                    }
                    this.ItemId = odataObject.ItemId;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
                    this.SalesTaxGroupId = odataObject.SalesTaxGroupId;
                    this.OriginalSalesTaxGroupId = odataObject.OriginalSalesTaxGroupId;
                    this.OriginalItemTaxGroupId = odataObject.OriginalItemTaxGroupId;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.SalesOrderUnitOfMeasure = odataObject.SalesOrderUnitOfMeasure;
                    this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
                    this.NetAmountPerUnit = (odataObject.NetAmountPerUnit != null) ? parseFloat(odataObject.NetAmountPerUnit) : undefined;
                    this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
                    this.TaxLines = undefined;
                    if (odataObject.TaxLines) {
                        this.TaxLines = [];
                        for (var i = 0; i < odataObject.TaxLines.length; i++) {
                            if (odataObject.TaxLines[i] != null) {
                                if (odataObject.TaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i]);
                                    }
                                }
                                else {
                                    this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                                }
                            }
                            else {
                                this.TaxLines[i] = undefined;
                            }
                        }
                    }
                    this.TaxMeasures = undefined;
                    if (odataObject.TaxMeasures) {
                        this.TaxMeasures = [];
                        for (var i = 0; i < odataObject.TaxMeasures.length; i++) {
                            if (odataObject.TaxMeasures[i] != null) {
                                if (odataObject.TaxMeasures[i]['@odata.type'] != null) {
                                    var className = odataObject.TaxMeasures[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TaxMeasures[i] = new Commerce.Proxy.Entities[className](odataObject.TaxMeasures[i]);
                                    }
                                }
                                else {
                                    this.TaxMeasures[i] = new TaxMeasureClass(odataObject.TaxMeasures[i]);
                                }
                            }
                            else {
                                this.TaxMeasures[i] = undefined;
                            }
                        }
                    }
                    this.TaxAmountExemptInclusive = (odataObject.TaxAmountExemptInclusive != null) ? parseFloat(odataObject.TaxAmountExemptInclusive) : undefined;
                    this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
                    this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
                    this.NetAmountWithAllInclusiveTax = (odataObject.NetAmountWithAllInclusiveTax != null) ? parseFloat(odataObject.NetAmountWithAllInclusiveTax) : undefined;
                    this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
                        : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
                        : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
                    this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
                    this.ReturnLineTaxAmount = (odataObject.ReturnLineTaxAmount != null) ? parseFloat(odataObject.ReturnLineTaxAmount) : undefined;
                    this.ReturnTaxLines = undefined;
                    if (odataObject.ReturnTaxLines) {
                        this.ReturnTaxLines = [];
                        for (var i = 0; i < odataObject.ReturnTaxLines.length; i++) {
                            if (odataObject.ReturnTaxLines[i] != null) {
                                if (odataObject.ReturnTaxLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReturnTaxLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReturnTaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnTaxLines[i]);
                                    }
                                }
                                else {
                                    this.ReturnTaxLines[i] = new TaxLineClass(odataObject.ReturnTaxLines[i]);
                                }
                            }
                            else {
                                this.ReturnTaxLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SalesLineClass;
            }());
            Entities.SalesLineClass = SalesLineClass;
            var SearchAreaClass = (function () {
                function SearchAreaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
                    this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
                    this.Radius = (odataObject.Radius != null) ? parseFloat(odataObject.Radius) : undefined;
                    this.DistanceUnitValue = odataObject.DistanceUnitValue;
                }
                return SearchAreaClass;
            }());
            Entities.SearchAreaClass = SearchAreaClass;
            var ShiftAccountLineClass = (function () {
                function ShiftAccountLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AccountTypeValue = odataObject.AccountTypeValue;
                    this.AccountNumber = odataObject.AccountNumber;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShiftAccountLineClass;
            }());
            Entities.ShiftAccountLineClass = ShiftAccountLineClass;
            var ShiftTenderLineClass = (function () {
                function ShiftTenderLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TenderTypeId = odataObject.TenderTypeId;
                    this.TenderTypeName = odataObject.TenderTypeName;
                    this.CardTypeId = odataObject.CardTypeId;
                    this.TenderCurrency = odataObject.TenderCurrency;
                    this.CountingRequired = odataObject.CountingRequired;
                    this.StartingAmountOfStoreCurrency = (odataObject.StartingAmountOfStoreCurrency != null) ? parseFloat(odataObject.StartingAmountOfStoreCurrency) : undefined;
                    this.StartingAmountOfTenderCurrency = (odataObject.StartingAmountOfTenderCurrency != null) ? parseFloat(odataObject.StartingAmountOfTenderCurrency) : undefined;
                    this.FloatingEntryAmountOfStoreCurrency = (odataObject.FloatingEntryAmountOfStoreCurrency != null) ? parseFloat(odataObject.FloatingEntryAmountOfStoreCurrency) : undefined;
                    this.FloatingEntryAmountOfTenderCurrency = (odataObject.FloatingEntryAmountOfTenderCurrency != null) ? parseFloat(odataObject.FloatingEntryAmountOfTenderCurrency) : undefined;
                    this.SafeDropAmountOfStoreCurrency = (odataObject.SafeDropAmountOfStoreCurrency != null) ? parseFloat(odataObject.SafeDropAmountOfStoreCurrency) : undefined;
                    this.SafeDropAmountOfTenderCurrency = (odataObject.SafeDropAmountOfTenderCurrency != null) ? parseFloat(odataObject.SafeDropAmountOfTenderCurrency) : undefined;
                    this.BankDropAmountOfStoreCurrency = (odataObject.BankDropAmountOfStoreCurrency != null) ? parseFloat(odataObject.BankDropAmountOfStoreCurrency) : undefined;
                    this.BankDropAmountOfTenderCurrency = (odataObject.BankDropAmountOfTenderCurrency != null) ? parseFloat(odataObject.BankDropAmountOfTenderCurrency) : undefined;
                    this.RemoveTenderAmountOfStoreCurrency = (odataObject.RemoveTenderAmountOfStoreCurrency != null) ? parseFloat(odataObject.RemoveTenderAmountOfStoreCurrency) : undefined;
                    this.RemoveTenderAmountOfTenderCurrency = (odataObject.RemoveTenderAmountOfTenderCurrency != null) ? parseFloat(odataObject.RemoveTenderAmountOfTenderCurrency) : undefined;
                    this.DeclareTenderAmountOfStoreCurrency = (odataObject.DeclareTenderAmountOfStoreCurrency != null) ? parseFloat(odataObject.DeclareTenderAmountOfStoreCurrency) : undefined;
                    this.DeclareTenderAmountOfTenderCurrency = (odataObject.DeclareTenderAmountOfTenderCurrency != null) ? parseFloat(odataObject.DeclareTenderAmountOfTenderCurrency) : undefined;
                    this.TenderedAmountOfStoreCurrency = (odataObject.TenderedAmountOfStoreCurrency != null) ? parseFloat(odataObject.TenderedAmountOfStoreCurrency) : undefined;
                    this.TenderedAmountOfTenderCurrency = (odataObject.TenderedAmountOfTenderCurrency != null) ? parseFloat(odataObject.TenderedAmountOfTenderCurrency) : undefined;
                    this.ChangeAmountOfStoreCurrency = (odataObject.ChangeAmountOfStoreCurrency != null) ? parseFloat(odataObject.ChangeAmountOfStoreCurrency) : undefined;
                    this.ChangeAmountOfTenderCurrency = (odataObject.ChangeAmountOfTenderCurrency != null) ? parseFloat(odataObject.ChangeAmountOfTenderCurrency) : undefined;
                    this.Count = odataObject.Count;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShiftTenderLineClass;
            }());
            Entities.ShiftTenderLineClass = ShiftTenderLineClass;
            var StockCountJournalTransactionClass = (function () {
                function StockCountJournalTransactionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.JournalId = odataObject.JournalId;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.OperationType = odataObject.OperationType;
                    this.ItemId = odataObject.ItemId;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.ItemName = odataObject.ItemName;
                    this.InventDimId = odataObject.InventDimId;
                    this.Counted = (odataObject.Counted != null) ? parseFloat(odataObject.Counted) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Unit = odataObject.Unit;
                    this.UserId = odataObject.UserId;
                    this.TerminalId = odataObject.TerminalId;
                    this.CountedDate = (odataObject.CountedDate instanceof Date) ? odataObject.CountedDate
                        : (odataObject.CountedDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CountedDate, "Edm.DateTimeOffset", false) : undefined;
                    this.Status = odataObject.Status;
                    this.InventBatchId = odataObject.InventBatchId;
                    this.WarehouseLocationId = odataObject.WarehouseLocationId;
                    this.InventoryStatus = odataObject.InventoryStatus;
                    this.LicensePlate = odataObject.LicensePlate;
                    this.WarehousePalletId = odataObject.WarehousePalletId;
                    this.InventSiteId = odataObject.InventSiteId;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.ConfigId = odataObject.ConfigId;
                    this.InventSizeId = odataObject.InventSizeId;
                    this.InventColorId = odataObject.InventColorId;
                    this.InventStyleId = odataObject.InventStyleId;
                    this.InventSerialId = odataObject.InventSerialId;
                    this.TrackingGuid = odataObject.TrackingGuid;
                    this.UpdatedInAx = odataObject.UpdatedInAx;
                    this.Message = odataObject.Message;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return StockCountJournalTransactionClass;
            }());
            Entities.StockCountJournalTransactionClass = StockCountJournalTransactionClass;
            var TaxLineClass = (function () {
                function TaxLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TaxGroup = odataObject.TaxGroup;
                    this.Percentage = (odataObject.Percentage != null) ? parseFloat(odataObject.Percentage) : undefined;
                    this.IsExempt = odataObject.IsExempt;
                    this.TaxBasis = (odataObject.TaxBasis != null) ? parseFloat(odataObject.TaxBasis) : undefined;
                    this.IsIncludedInPrice = odataObject.IsIncludedInPrice;
                    this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.TransactionId = odataObject.TransactionId;
                    this.TaxCode = odataObject.TaxCode;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TaxLineClass;
            }());
            Entities.TaxLineClass = TaxLineClass;
            var TenderLineClass = (function () {
                function TenderLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CardToken = odataObject.CardToken;
                    this.Authorization = odataObject.Authorization;
                    this.TransactionStatusValue = odataObject.TransactionStatusValue;
                    this.IncomeExpenseAccountTypeValue = odataObject.IncomeExpenseAccountTypeValue;
                    this.MaskedCardNumber = odataObject.MaskedCardNumber;
                    this.TenderDate = (odataObject.TenderDate instanceof Date) ? odataObject.TenderDate
                        : (odataObject.TenderDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TenderDate, "Edm.DateTimeOffset", false) : undefined;
                    this.IsPreProcessed = odataObject.IsPreProcessed;
                    this.IsDeposit = odataObject.IsDeposit;
                    this.TenderLineId = odataObject.TenderLineId;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.CashBackAmount = (odataObject.CashBackAmount != null) ? parseFloat(odataObject.CashBackAmount) : undefined;
                    this.AmountInTenderedCurrency = (odataObject.AmountInTenderedCurrency != null) ? parseFloat(odataObject.AmountInTenderedCurrency) : undefined;
                    this.AmountInCompanyCurrency = (odataObject.AmountInCompanyCurrency != null) ? parseFloat(odataObject.AmountInCompanyCurrency) : undefined;
                    this.Currency = odataObject.Currency;
                    this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
                    this.CompanyCurrencyExchangeRate = (odataObject.CompanyCurrencyExchangeRate != null) ? parseFloat(odataObject.CompanyCurrencyExchangeRate) : undefined;
                    this.TenderTypeId = odataObject.TenderTypeId;
                    this.SignatureData = odataObject.SignatureData;
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.GiftCardId = odataObject.GiftCardId;
                    this.CreditMemoId = odataObject.CreditMemoId;
                    this.CustomerId = odataObject.CustomerId;
                    this.LoyaltyCardId = odataObject.LoyaltyCardId;
                    this.CardTypeId = odataObject.CardTypeId;
                    this.IsChangeLine = odataObject.IsChangeLine;
                    this.IsHistorical = odataObject.IsHistorical;
                    this.IsVoidable = odataObject.IsVoidable;
                    this.StatusValue = odataObject.StatusValue;
                    this.VoidStatusValue = odataObject.VoidStatusValue;
                    this.AuthorizedAmount = (odataObject.AuthorizedAmount != null) ? parseFloat(odataObject.AuthorizedAmount) : undefined;
                    this.PaymentRefRecId = (odataObject.PaymentRefRecId != null) ? parseInt(odataObject.PaymentRefRecId, 10) : undefined;
                    this.CardPaymentAccountId = odataObject.CardPaymentAccountId;
                    this.ProcessingTypeValue = odataObject.ProcessingTypeValue;
                    this.CardProcessorStatusValue = odataObject.CardProcessorStatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TenderLineClass;
            }());
            Entities.TenderLineClass = TenderLineClass;
            var TextValueTranslationClass = (function () {
                function TextValueTranslationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Language = odataObject.Language;
                    this.Text = odataObject.Text;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TextValueTranslationClass;
            }());
            Entities.TextValueTranslationClass = TextValueTranslationClass;
            var UnitOfMeasureClass = (function () {
                function UnitOfMeasureClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DecimalPrecision = odataObject.DecimalPrecision;
                    this.Symbol = odataObject.Symbol;
                    this.Description = odataObject.Description;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return UnitOfMeasureClass;
            }());
            Entities.UnitOfMeasureClass = UnitOfMeasureClass;
            var CommerceListLineClass = (function () {
                function CommerceListLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CommerceListId = (odataObject.CommerceListId != null) ? parseInt(odataObject.CommerceListId, 10) : undefined;
                    this.LineId = (odataObject.LineId != null) ? parseInt(odataObject.LineId, 10) : undefined;
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerName = odataObject.CustomerName;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.IsFavorite = odataObject.IsFavorite;
                    this.IsRecurring = odataObject.IsRecurring;
                    this.IsPrivate = odataObject.IsPrivate;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommerceListLineClass;
            }());
            Entities.CommerceListLineClass = CommerceListLineClass;
            var CommerceListContributorClass = (function () {
                function CommerceListContributorClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerName = odataObject.CustomerName;
                    this.InvitationId = (odataObject.InvitationId != null) ? parseInt(odataObject.InvitationId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommerceListContributorClass;
            }());
            Entities.CommerceListContributorClass = CommerceListContributorClass;
            var CommerceListInvitationClass = (function () {
                function CommerceListInvitationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Invitee = odataObject.Invitee;
                    this.IsSent = odataObject.IsSent;
                    this.LastRequestDateTime = (odataObject.LastRequestDateTime instanceof Date) ? odataObject.LastRequestDateTime
                        : (odataObject.LastRequestDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastRequestDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.LastSentDateTime = (odataObject.LastSentDateTime instanceof Date) ? odataObject.LastSentDateTime
                        : (odataObject.LastSentDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastSentDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.StatusValue = odataObject.StatusValue;
                    this.Token = odataObject.Token;
                    this.InvitationTypeValue = odataObject.InvitationTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommerceListInvitationClass;
            }());
            Entities.CommerceListInvitationClass = CommerceListInvitationClass;
            var SearchFilterClass = (function () {
                function SearchFilterClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Key = odataObject.Key;
                    this.FilterTypeValue = odataObject.FilterTypeValue;
                    this.SearchValues = undefined;
                    if (odataObject.SearchValues) {
                        this.SearchValues = [];
                        for (var i = 0; i < odataObject.SearchValues.length; i++) {
                            if (odataObject.SearchValues[i] != null) {
                                if (odataObject.SearchValues[i]['@odata.type'] != null) {
                                    var className = odataObject.SearchValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SearchValues[i] = new Commerce.Proxy.Entities[className](odataObject.SearchValues[i]);
                                    }
                                }
                                else {
                                    this.SearchValues[i] = new SearchFilterValueClass(odataObject.SearchValues[i]);
                                }
                            }
                            else {
                                this.SearchValues[i] = undefined;
                            }
                        }
                    }
                }
                return SearchFilterClass;
            }());
            Entities.SearchFilterClass = SearchFilterClass;
            var SearchFilterValueClass = (function () {
                function SearchFilterValueClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.Value == null) {
                        this.Value = undefined;
                    }
                    else if (odataObject.Value['@odata.type'] == null) {
                        this.Value = new CommercePropertyValueClass(odataObject.Value);
                    }
                    else {
                        var className = odataObject.Value['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Value = new Commerce.Proxy.Entities[className](odataObject.Value);
                        }
                    }
                }
                return SearchFilterValueClass;
            }());
            Entities.SearchFilterValueClass = SearchFilterValueClass;
            var TransactionSearchCriteriaClass = (function () {
                function TransactionSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionIds = undefined;
                    if (odataObject.TransactionIds) {
                        this.TransactionIds = [];
                        for (var i = 0; i < odataObject.TransactionIds.length; i++) {
                            if (odataObject.TransactionIds[i] != null) {
                                this.TransactionIds[i] = odataObject.TransactionIds[i];
                            }
                            else {
                                this.TransactionIds[i] = undefined;
                            }
                        }
                    }
                    this.SalesId = odataObject.SalesId;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
                    this.CustomerFirstName = odataObject.CustomerFirstName;
                    this.CustomerLastName = odataObject.CustomerLastName;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.ItemId = odataObject.ItemId;
                    this.Barcode = odataObject.Barcode;
                    this.SerialNumber = odataObject.SerialNumber;
                    this.StaffId = odataObject.StaffId;
                    this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
                        : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
                        : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ReceiptEmailAddress = odataObject.ReceiptEmailAddress;
                    this.SearchIdentifiers = odataObject.SearchIdentifiers;
                    this.SearchLocationTypeValue = odataObject.SearchLocationTypeValue;
                    this.CustomFilters = undefined;
                    if (odataObject.CustomFilters) {
                        this.CustomFilters = [];
                        for (var i = 0; i < odataObject.CustomFilters.length; i++) {
                            if (odataObject.CustomFilters[i] != null) {
                                if (odataObject.CustomFilters[i]['@odata.type'] != null) {
                                    var className = odataObject.CustomFilters[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CustomFilters[i] = new Commerce.Proxy.Entities[className](odataObject.CustomFilters[i]);
                                    }
                                }
                                else {
                                    this.CustomFilters[i] = new SearchFilterClass(odataObject.CustomFilters[i]);
                                }
                            }
                            else {
                                this.CustomFilters[i] = undefined;
                            }
                        }
                    }
                }
                return TransactionSearchCriteriaClass;
            }());
            Entities.TransactionSearchCriteriaClass = TransactionSearchCriteriaClass;
            var SalesOrderSearchCriteriaClass = (function () {
                function SalesOrderSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionIds = undefined;
                    if (odataObject.TransactionIds) {
                        this.TransactionIds = [];
                        for (var i = 0; i < odataObject.TransactionIds.length; i++) {
                            if (odataObject.TransactionIds[i] != null) {
                                this.TransactionIds[i] = odataObject.TransactionIds[i];
                            }
                            else {
                                this.TransactionIds[i] = undefined;
                            }
                        }
                    }
                    this.SalesId = odataObject.SalesId;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
                    this.CustomerFirstName = odataObject.CustomerFirstName;
                    this.CustomerLastName = odataObject.CustomerLastName;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.ItemId = odataObject.ItemId;
                    this.Barcode = odataObject.Barcode;
                    this.SerialNumber = odataObject.SerialNumber;
                    this.StaffId = odataObject.StaffId;
                    this.SearchTypeValue = odataObject.SearchTypeValue;
                    this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
                        : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
                        : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.IncludeDetails = odataObject.IncludeDetails;
                    this.ReceiptEmailAddress = odataObject.ReceiptEmailAddress;
                    this.SearchIdentifiers = odataObject.SearchIdentifiers;
                    this.SalesTransactionTypeValues = undefined;
                    if (odataObject.SalesTransactionTypeValues) {
                        this.SalesTransactionTypeValues = [];
                        for (var i = 0; i < odataObject.SalesTransactionTypeValues.length; i++) {
                            if (odataObject.SalesTransactionTypeValues[i] != null) {
                                this.SalesTransactionTypeValues[i] = odataObject.SalesTransactionTypeValues[i];
                            }
                            else {
                                this.SalesTransactionTypeValues[i] = undefined;
                            }
                        }
                    }
                    this.SearchLocationTypeValue = odataObject.SearchLocationTypeValue;
                    this.TransactionStatusTypeValues = undefined;
                    if (odataObject.TransactionStatusTypeValues) {
                        this.TransactionStatusTypeValues = [];
                        for (var i = 0; i < odataObject.TransactionStatusTypeValues.length; i++) {
                            if (odataObject.TransactionStatusTypeValues[i] != null) {
                                this.TransactionStatusTypeValues[i] = odataObject.TransactionStatusTypeValues[i];
                            }
                            else {
                                this.TransactionStatusTypeValues[i] = undefined;
                            }
                        }
                    }
                }
                return SalesOrderSearchCriteriaClass;
            }());
            Entities.SalesOrderSearchCriteriaClass = SalesOrderSearchCriteriaClass;
            var SearchStoreCriteriaClass = (function () {
                function SearchStoreCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                }
                return SearchStoreCriteriaClass;
            }());
            Entities.SearchStoreCriteriaClass = SearchStoreCriteriaClass;
            var CustomerSearchCriteriaClass = (function () {
                function CustomerSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Keyword = odataObject.Keyword;
                    this.SearchOnlyCurrentCompany = odataObject.SearchOnlyCurrentCompany;
                    this.SearchLocationValue = odataObject.SearchLocationValue;
                    this.DataLevelValue = odataObject.DataLevelValue;
                }
                return CustomerSearchCriteriaClass;
            }());
            Entities.CustomerSearchCriteriaClass = CustomerSearchCriteriaClass;
            var ProductPriceClass = (function () {
                function ProductPriceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.ListingId = (odataObject.ListingId != null) ? parseInt(odataObject.ListingId, 10) : undefined;
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.TradeAgreementPrice = (odataObject.TradeAgreementPrice != null) ? parseFloat(odataObject.TradeAgreementPrice) : undefined;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    this.CustomerContextualPrice = (odataObject.CustomerContextualPrice != null) ? parseFloat(odataObject.CustomerContextualPrice) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.ItemId = odataObject.ItemId;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
                        : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.ProductLookupId = (odataObject.ProductLookupId != null) ? parseInt(odataObject.ProductLookupId, 10) : undefined;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductPriceClass;
            }());
            Entities.ProductPriceClass = ProductPriceClass;
            var OrgUnitAvailabilityClass = (function () {
                function OrgUnitAvailabilityClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.OrgUnitLocation == null) {
                        this.OrgUnitLocation = undefined;
                    }
                    else if (odataObject.OrgUnitLocation['@odata.type'] == null) {
                        this.OrgUnitLocation = new OrgUnitLocationClass(odataObject.OrgUnitLocation);
                    }
                    else {
                        var className = odataObject.OrgUnitLocation['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.OrgUnitLocation = new Commerce.Proxy.Entities[className](odataObject.OrgUnitLocation);
                        }
                    }
                    this.ItemAvailabilities = undefined;
                    if (odataObject.ItemAvailabilities) {
                        this.ItemAvailabilities = [];
                        for (var i = 0; i < odataObject.ItemAvailabilities.length; i++) {
                            if (odataObject.ItemAvailabilities[i] != null) {
                                if (odataObject.ItemAvailabilities[i]['@odata.type'] != null) {
                                    var className = odataObject.ItemAvailabilities[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ItemAvailabilities[i] = new Commerce.Proxy.Entities[className](odataObject.ItemAvailabilities[i]);
                                    }
                                }
                                else {
                                    this.ItemAvailabilities[i] = new ItemAvailabilityClass(odataObject.ItemAvailabilities[i]);
                                }
                            }
                            else {
                                this.ItemAvailabilities[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OrgUnitAvailabilityClass;
            }());
            Entities.OrgUnitAvailabilityClass = OrgUnitAvailabilityClass;
            var ProductVariantPropertySetClass = (function () {
                function ProductVariantPropertySetClass(odataObject) {
                    odataObject = odataObject || {};
                    this.VariantId = (odataObject.VariantId != null) ? parseInt(odataObject.VariantId, 10) : undefined;
                    this.ProductVariantPropertiesAsList = undefined;
                    if (odataObject.ProductVariantPropertiesAsList) {
                        this.ProductVariantPropertiesAsList = [];
                        for (var i = 0; i < odataObject.ProductVariantPropertiesAsList.length; i++) {
                            if (odataObject.ProductVariantPropertiesAsList[i] != null) {
                                if (odataObject.ProductVariantPropertiesAsList[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductVariantPropertiesAsList[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductVariantPropertiesAsList[i] = new Commerce.Proxy.Entities[className](odataObject.ProductVariantPropertiesAsList[i]);
                                    }
                                }
                                else {
                                    this.ProductVariantPropertiesAsList[i] = new ProductPropertyTranslationClass(odataObject.ProductVariantPropertiesAsList[i]);
                                }
                            }
                            else {
                                this.ProductVariantPropertiesAsList[i] = undefined;
                            }
                        }
                    }
                }
                return ProductVariantPropertySetClass;
            }());
            Entities.ProductVariantPropertySetClass = ProductVariantPropertySetClass;
            var PurchaseOrderLineClass = (function () {
                function PurchaseOrderLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.OrderId = odataObject.OrderId;
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.ItemName = odataObject.ItemName;
                    this.InventDimId = odataObject.InventDimId;
                    this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
                    this.PurchaseQuantity = (odataObject.PurchaseQuantity != null) ? parseFloat(odataObject.PurchaseQuantity) : undefined;
                    this.PurchaseUnit = odataObject.PurchaseUnit;
                    this.PurchaseReceived = (odataObject.PurchaseReceived != null) ? parseFloat(odataObject.PurchaseReceived) : undefined;
                    this.PurchaseReceivedNow = (odataObject.PurchaseReceivedNow != null) ? parseFloat(odataObject.PurchaseReceivedNow) : undefined;
                    this.InventBatchId = odataObject.InventBatchId;
                    this.WMSLocationId = odataObject.WMSLocationId;
                    this.WMSPalletId = odataObject.WMSPalletId;
                    this.InventoryStatus = odataObject.InventoryStatus;
                    this.LicensePlate = odataObject.LicensePlate;
                    this.InventSiteId = odataObject.InventSiteId;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.ConfigId = odataObject.ConfigId;
                    this.InventSerialId = odataObject.InventSerialId;
                    this.InventSizeId = odataObject.InventSizeId;
                    this.InventColorId = odataObject.InventColorId;
                    this.InventStyleId = odataObject.InventStyleId;
                    this.IsCommitted = odataObject.IsCommitted;
                    this.Message = odataObject.Message;
                    this.UniqueIdentifier = odataObject.UniqueIdentifier;
                    this.DeliveryMethod = odataObject.DeliveryMethod;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PurchaseOrderLineClass;
            }());
            Entities.PurchaseOrderLineClass = PurchaseOrderLineClass;
            var TransferOrderLineClass = (function () {
                function TransferOrderLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.OrderId = odataObject.OrderId;
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.ItemName = odataObject.ItemName;
                    this.InventDimId = odataObject.InventDimId;
                    this.QuantityTransferred = (odataObject.QuantityTransferred != null) ? parseFloat(odataObject.QuantityTransferred) : undefined;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
                    this.QuantityShipNow = (odataObject.QuantityShipNow != null) ? parseFloat(odataObject.QuantityShipNow) : undefined;
                    this.QuantityReceiveNow = (odataObject.QuantityReceiveNow != null) ? parseFloat(odataObject.QuantityReceiveNow) : undefined;
                    this.QuantityRemainShip = (odataObject.QuantityRemainShip != null) ? parseFloat(odataObject.QuantityRemainShip) : undefined;
                    this.QuantityRemainReceive = (odataObject.QuantityRemainReceive != null) ? parseFloat(odataObject.QuantityRemainReceive) : undefined;
                    this.PurchaseUnit = odataObject.PurchaseUnit;
                    this.InventBatchId = odataObject.InventBatchId;
                    this.WMSLocationId = odataObject.WMSLocationId;
                    this.WMSPalletId = odataObject.WMSPalletId;
                    this.InventoryStatus = odataObject.InventoryStatus;
                    this.LicensePlate = odataObject.LicensePlate;
                    this.InventSiteId = odataObject.InventSiteId;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.ConfigId = odataObject.ConfigId;
                    this.InventSerialId = odataObject.InventSerialId;
                    this.InventSizeId = odataObject.InventSizeId;
                    this.InventColorId = odataObject.InventColorId;
                    this.InventStyleId = odataObject.InventStyleId;
                    this.IsCommitted = odataObject.IsCommitted;
                    this.Message = odataObject.Message;
                    this.Guid = odataObject.Guid;
                    this.DeliveryMethod = odataObject.DeliveryMethod;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TransferOrderLineClass;
            }());
            Entities.TransferOrderLineClass = TransferOrderLineClass;
            var TransferOrderJournalClass = (function () {
                function TransferOrderJournalClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrderId = odataObject.OrderId;
                    this.VoucherId = odataObject.VoucherId;
                    this.UpdatedByWorker = odataObject.UpdatedByWorker;
                    this.InventLocationIdFrom = odataObject.InventLocationIdFrom;
                    this.InventLocationIdTo = odataObject.InventLocationIdTo;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.PostingDate = (odataObject.PostingDate instanceof Date) ? odataObject.PostingDate
                        : (odataObject.PostingDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.PostingDate, "Edm.DateTimeOffset", false) : undefined;
                    this.DeliveryMode = odataObject.DeliveryMode;
                    this.Comments = odataObject.Comments;
                    this.JournalLines = undefined;
                    if (odataObject.JournalLines) {
                        this.JournalLines = [];
                        for (var i = 0; i < odataObject.JournalLines.length; i++) {
                            if (odataObject.JournalLines[i] != null) {
                                if (odataObject.JournalLines[i]['@odata.type'] != null) {
                                    var className = odataObject.JournalLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.JournalLines[i] = new Commerce.Proxy.Entities[className](odataObject.JournalLines[i]);
                                    }
                                }
                                else {
                                    this.JournalLines[i] = new TransferOrderJournalLineClass(odataObject.JournalLines[i]);
                                }
                            }
                            else {
                                this.JournalLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TransferOrderJournalClass;
            }());
            Entities.TransferOrderJournalClass = TransferOrderJournalClass;
            var PickingListLineClass = (function () {
                function PickingListLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.OrderId = odataObject.OrderId;
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.ItemName = odataObject.ItemName;
                    this.InventDimId = odataObject.InventDimId;
                    this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
                    this.PurchaseReceivedNow = (odataObject.PurchaseReceivedNow != null) ? parseFloat(odataObject.PurchaseReceivedNow) : undefined;
                    this.InventBatchId = odataObject.InventBatchId;
                    this.WMSLocationId = odataObject.WMSLocationId;
                    this.WMSPalletId = odataObject.WMSPalletId;
                    this.InventoryStatus = odataObject.InventoryStatus;
                    this.LicensePlate = odataObject.LicensePlate;
                    this.InventSiteId = odataObject.InventSiteId;
                    this.InventLocationId = odataObject.InventLocationId;
                    this.ConfigId = odataObject.ConfigId;
                    this.InventSerialId = odataObject.InventSerialId;
                    this.InventSizeId = odataObject.InventSizeId;
                    this.InventColorId = odataObject.InventColorId;
                    this.InventStyleId = odataObject.InventStyleId;
                    this.IsCommitted = odataObject.IsCommitted;
                    this.Message = odataObject.Message;
                    this.Guid = odataObject.Guid;
                    this.DeliveryMethod = odataObject.DeliveryMethod;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PickingListLineClass;
            }());
            Entities.PickingListLineClass = PickingListLineClass;
            var AffiliationClass = (function () {
                function AffiliationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.AffiliationTypeValue = odataObject.AffiliationTypeValue;
                    this.Description = odataObject.Description;
                    this.Name = odataObject.Name;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AffiliationClass;
            }());
            Entities.AffiliationClass = AffiliationClass;
            var ProductDimensionClass = (function () {
                function ProductDimensionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DimensionTypeValue = odataObject.DimensionTypeValue;
                    if (odataObject.DimensionValue == null) {
                        this.DimensionValue = undefined;
                    }
                    else if (odataObject.DimensionValue['@odata.type'] == null) {
                        this.DimensionValue = new ProductDimensionValueClass(odataObject.DimensionValue);
                    }
                    else {
                        var className = odataObject.DimensionValue['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DimensionValue = new Commerce.Proxy.Entities[className](odataObject.DimensionValue);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductDimensionClass;
            }());
            Entities.ProductDimensionClass = ProductDimensionClass;
            var ProductDimensionValueClass = (function () {
                function ProductDimensionValueClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Value = odataObject.Value;
                    this.DimensionId = odataObject.DimensionId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductDimensionValueClass;
            }());
            Entities.ProductDimensionValueClass = ProductDimensionValueClass;
            var ProductDimensionCombinationClass = (function () {
                function ProductDimensionCombinationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductDimensions = undefined;
                    if (odataObject.ProductDimensions) {
                        this.ProductDimensions = [];
                        for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                            if (odataObject.ProductDimensions[i] != null) {
                                if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductDimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i]);
                                    }
                                }
                                else {
                                    this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                                }
                            }
                            else {
                                this.ProductDimensions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductDimensionCombinationClass;
            }());
            Entities.ProductDimensionCombinationClass = ProductDimensionCombinationClass;
            var ProductRefinerClass = (function () {
                function ProductRefinerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.KeyName = odataObject.KeyName;
                    this.SourceValue = odataObject.SourceValue;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.RefinerTypeValue = odataObject.RefinerTypeValue;
                    this.DisplayTemplateValue = odataObject.DisplayTemplateValue;
                    this.Values = undefined;
                    if (odataObject.Values) {
                        this.Values = [];
                        for (var i = 0; i < odataObject.Values.length; i++) {
                            if (odataObject.Values[i] != null) {
                                if (odataObject.Values[i]['@odata.type'] != null) {
                                    var className = odataObject.Values[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Values[i] = new Commerce.Proxy.Entities[className](odataObject.Values[i]);
                                    }
                                }
                                else {
                                    this.Values[i] = new ProductRefinerValueClass(odataObject.Values[i]);
                                }
                            }
                            else {
                                this.Values[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductRefinerClass;
            }());
            Entities.ProductRefinerClass = ProductRefinerClass;
            var ProductRefinerValueClass = (function () {
                function ProductRefinerValueClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RefinerRecordId = (odataObject.RefinerRecordId != null) ? parseInt(odataObject.RefinerRecordId, 10) : undefined;
                    this.RefinerSourceValue = odataObject.RefinerSourceValue;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.LeftValueBoundString = odataObject.LeftValueBoundString;
                    this.RightValueBoundString = odataObject.RightValueBoundString;
                    this.UnitText = odataObject.UnitText;
                    this.RowNumber = odataObject.RowNumber;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductRefinerValueClass;
            }());
            Entities.ProductRefinerValueClass = ProductRefinerValueClass;
            var ProductRelationTypeClass = (function () {
                function ProductRelationTypeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductRelationTypeClass;
            }());
            Entities.ProductRelationTypeClass = ProductRelationTypeClass;
            var ComponentInSlotRelationClass = (function () {
                function ComponentInSlotRelationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ComponentId = (odataObject.ComponentId != null) ? parseInt(odataObject.ComponentId, 10) : undefined;
                    this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ComponentInSlotRelationClass;
            }());
            Entities.ComponentInSlotRelationClass = ComponentInSlotRelationClass;
            var ProductRulesClass = (function () {
                function ProductRulesClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HasLinkedProducts = odataObject.HasLinkedProducts;
                    this.IsSerialized = odataObject.IsSerialized;
                    this.IsActiveInSalesProcess = odataObject.IsActiveInSalesProcess;
                    this.IsBlocked = odataObject.IsBlocked;
                    this.DateOfBlocking = (odataObject.DateOfBlocking instanceof Date) ? odataObject.DateOfBlocking
                        : (odataObject.DateOfBlocking != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateOfBlocking, "Edm.DateTimeOffset", false) : undefined;
                    this.DateToActivate = (odataObject.DateToActivate instanceof Date) ? odataObject.DateToActivate
                        : (odataObject.DateToActivate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToActivate, "Edm.DateTimeOffset", false) : undefined;
                    this.DateToBlock = (odataObject.DateToBlock instanceof Date) ? odataObject.DateToBlock
                        : (odataObject.DateToBlock != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBlock, "Edm.DateTimeOffset", false) : undefined;
                    this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
                    this.PriceKeyingRequirementValue = odataObject.PriceKeyingRequirementValue;
                    this.QuantityKeyingRequirementValue = odataObject.QuantityKeyingRequirementValue;
                    this.MustKeyInComment = odataObject.MustKeyInComment;
                    this.CanQuantityBecomeNegative = odataObject.CanQuantityBecomeNegative;
                    this.MustScaleItem = odataObject.MustScaleItem;
                    this.CanPriceBeZero = odataObject.CanPriceBeZero;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductRulesClass;
            }());
            Entities.ProductRulesClass = ProductRulesClass;
            var LocalizedStringClass = (function () {
                function LocalizedStringClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.LanguageId = odataObject.LanguageId;
                    this.TextId = odataObject.TextId;
                    this.Text = odataObject.Text;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LocalizedStringClass;
            }());
            Entities.LocalizedStringClass = LocalizedStringClass;
            var LoyaltyCardClass = (function () {
                function LoyaltyCardClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CardNumber = odataObject.CardNumber;
                    this.CardTenderTypeValue = odataObject.CardTenderTypeValue;
                    this.CustomerAccount = odataObject.CustomerAccount;
                    this.LoyaltyGroups = undefined;
                    if (odataObject.LoyaltyGroups) {
                        this.LoyaltyGroups = [];
                        for (var i = 0; i < odataObject.LoyaltyGroups.length; i++) {
                            if (odataObject.LoyaltyGroups[i] != null) {
                                if (odataObject.LoyaltyGroups[i]['@odata.type'] != null) {
                                    var className = odataObject.LoyaltyGroups[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LoyaltyGroups[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyGroups[i]);
                                    }
                                }
                                else {
                                    this.LoyaltyGroups[i] = new LoyaltyGroupClass(odataObject.LoyaltyGroups[i]);
                                }
                            }
                            else {
                                this.LoyaltyGroups[i] = undefined;
                            }
                        }
                    }
                    this.RewardPoints = undefined;
                    if (odataObject.RewardPoints) {
                        this.RewardPoints = [];
                        for (var i = 0; i < odataObject.RewardPoints.length; i++) {
                            if (odataObject.RewardPoints[i] != null) {
                                if (odataObject.RewardPoints[i]['@odata.type'] != null) {
                                    var className = odataObject.RewardPoints[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.RewardPoints[i] = new Commerce.Proxy.Entities[className](odataObject.RewardPoints[i]);
                                    }
                                }
                                else {
                                    this.RewardPoints[i] = new LoyaltyRewardPointClass(odataObject.RewardPoints[i]);
                                }
                            }
                            else {
                                this.RewardPoints[i] = undefined;
                            }
                        }
                    }
                    this.LoyaltyEnrollmentDate = (odataObject.LoyaltyEnrollmentDate instanceof Date) ? odataObject.LoyaltyEnrollmentDate
                        : (odataObject.LoyaltyEnrollmentDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LoyaltyEnrollmentDate, "Edm.DateTimeOffset", false) : undefined;
                    this.OmOperatingUnitId = (odataObject.OmOperatingUnitId != null) ? parseInt(odataObject.OmOperatingUnitId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyCardClass;
            }());
            Entities.LoyaltyCardClass = LoyaltyCardClass;
            var ProductComponentClass = (function () {
                function ProductComponentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined;
                    if (odataObject.Product == null) {
                        this.Product = undefined;
                    }
                    else if (odataObject.Product['@odata.type'] == null) {
                        this.Product = new SimpleProductClass(odataObject.Product);
                    }
                    else {
                        var className = odataObject.Product['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Product = new Commerce.Proxy.Entities[className](odataObject.Product);
                        }
                    }
                    this.AdditionalChargeForComponent = (odataObject.AdditionalChargeForComponent != null) ? parseFloat(odataObject.AdditionalChargeForComponent) : undefined;
                    if (odataObject.Behavior == null) {
                        this.Behavior = undefined;
                    }
                    else if (odataObject.Behavior['@odata.type'] == null) {
                        this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
                    }
                    else {
                        var className = odataObject.Behavior['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior);
                        }
                    }
                    this.Description = odataObject.Description;
                    this.Dimensions = undefined;
                    if (odataObject.Dimensions) {
                        this.Dimensions = [];
                        for (var i = 0; i < odataObject.Dimensions.length; i++) {
                            if (odataObject.Dimensions[i] != null) {
                                if (odataObject.Dimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.Dimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i]);
                                    }
                                }
                                else {
                                    this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                                }
                            }
                            else {
                                this.Dimensions[i] = undefined;
                            }
                        }
                    }
                    this.ItemId = odataObject.ItemId;
                    this.Name = odataObject.Name;
                    this.ProductTypeValue = odataObject.ProductTypeValue;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductComponentClass;
            }());
            Entities.ProductComponentClass = ProductComponentClass;
            var SimpleProductClass = (function () {
                function SimpleProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.ProductTypeValue = odataObject.ProductTypeValue;
                    this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
                    this.Components = undefined;
                    if (odataObject.Components) {
                        this.Components = [];
                        for (var i = 0; i < odataObject.Components.length; i++) {
                            if (odataObject.Components[i] != null) {
                                if (odataObject.Components[i]['@odata.type'] != null) {
                                    var className = odataObject.Components[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Components[i] = new Commerce.Proxy.Entities[className](odataObject.Components[i]);
                                    }
                                }
                                else {
                                    this.Components[i] = new ProductComponentClass(odataObject.Components[i]);
                                }
                            }
                            else {
                                this.Components[i] = undefined;
                            }
                        }
                    }
                    this.Dimensions = undefined;
                    if (odataObject.Dimensions) {
                        this.Dimensions = [];
                        for (var i = 0; i < odataObject.Dimensions.length; i++) {
                            if (odataObject.Dimensions[i] != null) {
                                if (odataObject.Dimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.Dimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i]);
                                    }
                                }
                                else {
                                    this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                                }
                            }
                            else {
                                this.Dimensions[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.Behavior == null) {
                        this.Behavior = undefined;
                    }
                    else if (odataObject.Behavior['@odata.type'] == null) {
                        this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
                    }
                    else {
                        var className = odataObject.Behavior['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior);
                        }
                    }
                    this.LinkedProducts = undefined;
                    if (odataObject.LinkedProducts) {
                        this.LinkedProducts = [];
                        for (var i = 0; i < odataObject.LinkedProducts.length; i++) {
                            if (odataObject.LinkedProducts[i] != null) {
                                if (odataObject.LinkedProducts[i]['@odata.type'] != null) {
                                    var className = odataObject.LinkedProducts[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LinkedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.LinkedProducts[i]);
                                    }
                                }
                                else {
                                    this.LinkedProducts[i] = new SimpleLinkedProductClass(odataObject.LinkedProducts[i]);
                                }
                            }
                            else {
                                this.LinkedProducts[i] = undefined;
                            }
                        }
                    }
                    this.PrimaryImageUrl = odataObject.PrimaryImageUrl;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SimpleProductClass;
            }());
            Entities.SimpleProductClass = SimpleProductClass;
            var ProductBehaviorClass = (function () {
                function ProductBehaviorClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HasSerialNumber = odataObject.HasSerialNumber;
                    this.IsDiscountAllowed = odataObject.IsDiscountAllowed;
                    this.IsManualDiscountAllowed = odataObject.IsManualDiscountAllowed;
                    this.IsKitDisassemblyAllowed = odataObject.IsKitDisassemblyAllowed;
                    this.IsNegativeQuantityAllowed = odataObject.IsNegativeQuantityAllowed;
                    this.IsReturnAllowed = odataObject.IsReturnAllowed;
                    this.IsSaleAtPhysicalStoresAllowed = odataObject.IsSaleAtPhysicalStoresAllowed;
                    this.IsZeroSalePriceAllowed = odataObject.IsZeroSalePriceAllowed;
                    this.KeyInPriceValue = odataObject.KeyInPriceValue;
                    this.KeyInQuantityValue = odataObject.KeyInQuantityValue;
                    this.MustKeyInComment = odataObject.MustKeyInComment;
                    this.MustPrintIndividualShelfLabelsForVariants = odataObject.MustPrintIndividualShelfLabelsForVariants;
                    this.MustPromptForSerialNumberOnlyAtSale = odataObject.MustPromptForSerialNumberOnlyAtSale;
                    this.MustWeighProductAtSale = odataObject.MustWeighProductAtSale;
                    this.ValidFromDateForSaleAtPhysicalStores = (odataObject.ValidFromDateForSaleAtPhysicalStores instanceof Date) ? odataObject.ValidFromDateForSaleAtPhysicalStores
                        : (odataObject.ValidFromDateForSaleAtPhysicalStores != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFromDateForSaleAtPhysicalStores, "Edm.DateTimeOffset", false) : undefined;
                    this.ValidToDateForSaleAtPhysicalStores = (odataObject.ValidToDateForSaleAtPhysicalStores instanceof Date) ? odataObject.ValidToDateForSaleAtPhysicalStores
                        : (odataObject.ValidToDateForSaleAtPhysicalStores != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidToDateForSaleAtPhysicalStores, "Edm.DateTimeOffset", false) : undefined;
                    this.IsBlankSerialNumberAllowed = odataObject.IsBlankSerialNumberAllowed;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductBehaviorClass;
            }());
            Entities.ProductBehaviorClass = ProductBehaviorClass;
            var SimpleLinkedProductClass = (function () {
                function SimpleLinkedProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.ProductTypeValue = odataObject.ProductTypeValue;
                    this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    if (odataObject.Behavior == null) {
                        this.Behavior = undefined;
                    }
                    else if (odataObject.Behavior['@odata.type'] == null) {
                        this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
                    }
                    else {
                        var className = odataObject.Behavior['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior);
                        }
                    }
                    this.Dimensions = undefined;
                    if (odataObject.Dimensions) {
                        this.Dimensions = [];
                        for (var i = 0; i < odataObject.Dimensions.length; i++) {
                            if (odataObject.Dimensions[i] != null) {
                                if (odataObject.Dimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.Dimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i]);
                                    }
                                }
                                else {
                                    this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                                }
                            }
                            else {
                                this.Dimensions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SimpleLinkedProductClass;
            }());
            Entities.SimpleLinkedProductClass = SimpleLinkedProductClass;
            var ProductSearchResultClass = (function () {
                function ProductSearchResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.Name = odataObject.Name;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.PrimaryImageUrl = odataObject.PrimaryImageUrl;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.TrackingId = odataObject.TrackingId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductSearchResultClass;
            }());
            Entities.ProductSearchResultClass = ProductSearchResultClass;
            var SearchSuggestionClass = (function () {
                function SearchSuggestionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Value = odataObject.Value;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SearchSuggestionClass;
            }());
            Entities.SearchSuggestionClass = SearchSuggestionClass;
            var LoyaltyPointRedemptionEstimateClass = (function () {
                function LoyaltyPointRedemptionEstimateClass(odataObject) {
                    odataObject = odataObject || {};
                    this.MaxCurrencyValueOfLoyaltyPoints = (odataObject.MaxCurrencyValueOfLoyaltyPoints != null) ? parseFloat(odataObject.MaxCurrencyValueOfLoyaltyPoints) : undefined;
                    this.RewardPointToRedeemList = undefined;
                    if (odataObject.RewardPointToRedeemList) {
                        this.RewardPointToRedeemList = [];
                        for (var i = 0; i < odataObject.RewardPointToRedeemList.length; i++) {
                            if (odataObject.RewardPointToRedeemList[i] != null) {
                                if (odataObject.RewardPointToRedeemList[i]['@odata.type'] != null) {
                                    var className = odataObject.RewardPointToRedeemList[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.RewardPointToRedeemList[i] = new Commerce.Proxy.Entities[className](odataObject.RewardPointToRedeemList[i]);
                                    }
                                }
                                else {
                                    this.RewardPointToRedeemList[i] = new LoyaltyRewardPointLineClass(odataObject.RewardPointToRedeemList[i]);
                                }
                            }
                            else {
                                this.RewardPointToRedeemList[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyPointRedemptionEstimateClass;
            }());
            Entities.LoyaltyPointRedemptionEstimateClass = LoyaltyPointRedemptionEstimateClass;
            var LoyaltyGroupClass = (function () {
                function LoyaltyGroupClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Description = odataObject.Description;
                    this.Name = odataObject.Name;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.LoyaltyTiers = undefined;
                    if (odataObject.LoyaltyTiers) {
                        this.LoyaltyTiers = [];
                        for (var i = 0; i < odataObject.LoyaltyTiers.length; i++) {
                            if (odataObject.LoyaltyTiers[i] != null) {
                                if (odataObject.LoyaltyTiers[i]['@odata.type'] != null) {
                                    var className = odataObject.LoyaltyTiers[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LoyaltyTiers[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyTiers[i]);
                                    }
                                }
                                else {
                                    this.LoyaltyTiers[i] = new LoyaltyTierClass(odataObject.LoyaltyTiers[i]);
                                }
                            }
                            else {
                                this.LoyaltyTiers[i] = undefined;
                            }
                        }
                    }
                    this.LoyaltyCardTiers = undefined;
                    if (odataObject.LoyaltyCardTiers) {
                        this.LoyaltyCardTiers = [];
                        for (var i = 0; i < odataObject.LoyaltyCardTiers.length; i++) {
                            if (odataObject.LoyaltyCardTiers[i] != null) {
                                if (odataObject.LoyaltyCardTiers[i]['@odata.type'] != null) {
                                    var className = odataObject.LoyaltyCardTiers[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.LoyaltyCardTiers[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyCardTiers[i]);
                                    }
                                }
                                else {
                                    this.LoyaltyCardTiers[i] = new LoyaltyCardTierClass(odataObject.LoyaltyCardTiers[i]);
                                }
                            }
                            else {
                                this.LoyaltyCardTiers[i] = undefined;
                            }
                        }
                    }
                    this.HighestActiveLoyaltyCardTier = (odataObject.HighestActiveLoyaltyCardTier != null) ? parseInt(odataObject.HighestActiveLoyaltyCardTier, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyGroupClass;
            }());
            Entities.LoyaltyGroupClass = LoyaltyGroupClass;
            var LoyaltyTierClass = (function () {
                function LoyaltyTierClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Description = odataObject.Description;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.TierId = odataObject.TierId;
                    this.TierLevel = (odataObject.TierLevel != null) ? parseFloat(odataObject.TierLevel) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyTierClass;
            }());
            Entities.LoyaltyTierClass = LoyaltyTierClass;
            var LoyaltyCardTierClass = (function () {
                function LoyaltyCardTierClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.TierId = odataObject.TierId;
                    this.LoyaltyTierRecordId = (odataObject.LoyaltyTierRecordId != null) ? parseInt(odataObject.LoyaltyTierRecordId, 10) : undefined;
                    this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
                        : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
                        : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyCardTierClass;
            }());
            Entities.LoyaltyCardTierClass = LoyaltyCardTierClass;
            var LoyaltyRewardPointClass = (function () {
                function LoyaltyRewardPointClass(odataObject) {
                    odataObject = odataObject || {};
                    this.IsRedeemable = odataObject.IsRedeemable;
                    this.RewardPointCurrency = odataObject.RewardPointCurrency;
                    this.RewardPointTypeValue = odataObject.RewardPointTypeValue;
                    this.Description = odataObject.Description;
                    this.RewardPointId = odataObject.RewardPointId;
                    this.IssuedPoints = (odataObject.IssuedPoints != null) ? parseFloat(odataObject.IssuedPoints) : undefined;
                    this.UsedPoints = (odataObject.UsedPoints != null) ? parseFloat(odataObject.UsedPoints) : undefined;
                    this.ExpiredPoints = (odataObject.ExpiredPoints != null) ? parseFloat(odataObject.ExpiredPoints) : undefined;
                    this.ActivePoints = (odataObject.ActivePoints != null) ? parseFloat(odataObject.ActivePoints) : undefined;
                    this.PointsExpiringSoon = (odataObject.PointsExpiringSoon != null) ? parseFloat(odataObject.PointsExpiringSoon) : undefined;
                    this.UnvestedPoints = (odataObject.UnvestedPoints != null) ? parseFloat(odataObject.UnvestedPoints) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyRewardPointClass;
            }());
            Entities.LoyaltyRewardPointClass = LoyaltyRewardPointClass;
            var LoyaltyCardTransactionClass = (function () {
                function LoyaltyCardTransactionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChannelName = odataObject.ChannelName;
                    this.EntryDateTime = (odataObject.EntryDateTime instanceof Date) ? odataObject.EntryDateTime
                        : (odataObject.EntryDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EntryDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EntryTypeValue = odataObject.EntryTypeValue;
                    this.ExpirationDate = (odataObject.ExpirationDate instanceof Date) ? odataObject.ExpirationDate
                        : (odataObject.ExpirationDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ExpirationDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RewardPointAmountQuantity = (odataObject.RewardPointAmountQuantity != null) ? parseFloat(odataObject.RewardPointAmountQuantity) : undefined;
                    this.TransactionId = odataObject.TransactionId;
                }
                return LoyaltyCardTransactionClass;
            }());
            Entities.LoyaltyCardTransactionClass = LoyaltyCardTransactionClass;
            var GiftCardClass = (function () {
                function GiftCardClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
                    this.BalanceCurrencyCode = odataObject.BalanceCurrencyCode;
                    this.BalanceInCardCurrency = (odataObject.BalanceInCardCurrency != null) ? parseFloat(odataObject.BalanceInCardCurrency) : undefined;
                    this.CardCurrencyCode = odataObject.CardCurrencyCode;
                    this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
                    this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
                        : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
                        : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
                    this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return GiftCardClass;
            }());
            Entities.GiftCardClass = GiftCardClass;
            var OperationPermissionClass = (function () {
                function OperationPermissionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OperationName = odataObject.OperationName;
                    this.OperationId = odataObject.OperationId;
                    this.CheckUserAccess = odataObject.CheckUserAccess;
                    this.AllowAnonymousAccess = odataObject.AllowAnonymousAccess;
                    this.AllowCustomerAccess = odataObject.AllowCustomerAccess;
                    this.AllowApplicationAccess = odataObject.AllowApplicationAccess;
                    this.Permissions = undefined;
                    if (odataObject.Permissions) {
                        this.Permissions = [];
                        for (var i = 0; i < odataObject.Permissions.length; i++) {
                            if (odataObject.Permissions[i] != null) {
                                this.Permissions[i] = odataObject.Permissions[i];
                            }
                            else {
                                this.Permissions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OperationPermissionClass;
            }());
            Entities.OperationPermissionClass = OperationPermissionClass;
            var StateProvinceInfoClass = (function () {
                function StateProvinceInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.StateId = odataObject.StateId;
                    this.StateName = odataObject.StateName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return StateProvinceInfoClass;
            }());
            Entities.StateProvinceInfoClass = StateProvinceInfoClass;
            var TransactionLogClass = (function (_super) {
                __extends(TransactionLogClass, _super);
                function TransactionLogClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TransactionLog";
                    return _this;
                }
                return TransactionLogClass;
            }(TransactionClass));
            Entities.TransactionLogClass = TransactionLogClass;
            var KitTransactionClass = (function (_super) {
                __extends(KitTransactionClass, _super);
                function KitTransactionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.KitTransactionLines = undefined;
                    if (odataObject.KitTransactionLines) {
                        _this.KitTransactionLines = [];
                        for (var i = 0; i < odataObject.KitTransactionLines.length; i++) {
                            if (odataObject.KitTransactionLines[i] != null) {
                                if (odataObject.KitTransactionLines[i]['@odata.type'] != null) {
                                    var className = odataObject.KitTransactionLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.KitTransactionLines[i] = new Commerce.Proxy.Entities[className](odataObject.KitTransactionLines[i]);
                                    }
                                }
                                else {
                                    _this.KitTransactionLines[i] = new KitTransactionLineClass(odataObject.KitTransactionLines[i]);
                                }
                            }
                            else {
                                _this.KitTransactionLines[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.KitTransaction";
                    return _this;
                }
                return KitTransactionClass;
            }(TransactionLogClass));
            Entities.KitTransactionClass = KitTransactionClass;
            var SalesTaxGroupClass = (function () {
                function SalesTaxGroupClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.TaxGroup = odataObject.TaxGroup;
                    this.TaxGroupName = odataObject.TaxGroupName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SalesTaxGroupClass;
            }());
            Entities.SalesTaxGroupClass = SalesTaxGroupClass;
            var ProductPropertyClass = (function () {
                function ProductPropertyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ValueString = odataObject.ValueString;
                    this.UnitText = odataObject.UnitText;
                    this.PropertyTypeValue = odataObject.PropertyTypeValue;
                    this.KeyName = odataObject.KeyName;
                    this.FriendlyName = odataObject.FriendlyName;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.IsDimensionProperty = odataObject.IsDimensionProperty;
                    this.AttributeValueId = (odataObject.AttributeValueId != null) ? parseInt(odataObject.AttributeValueId, 10) : undefined;
                    this.GroupId = (odataObject.GroupId != null) ? parseInt(odataObject.GroupId, 10) : undefined;
                    this.GroupTypeValue = odataObject.GroupTypeValue;
                    this.GroupName = odataObject.GroupName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                }
                return ProductPropertyClass;
            }());
            Entities.ProductPropertyClass = ProductPropertyClass;
            var ProductCompositionInformationClass = (function () {
                function ProductCompositionInformationClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.VariantInformation == null) {
                        this.VariantInformation = undefined;
                    }
                    else if (odataObject.VariantInformation['@odata.type'] == null) {
                        this.VariantInformation = new ProductVariantInformationClass(odataObject.VariantInformation);
                    }
                    else {
                        var className = odataObject.VariantInformation['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.VariantInformation = new Commerce.Proxy.Entities[className](odataObject.VariantInformation);
                        }
                    }
                    if (odataObject.KitDefinition == null) {
                        this.KitDefinition = undefined;
                    }
                    else if (odataObject.KitDefinition['@odata.type'] == null) {
                        this.KitDefinition = new KitDefinitionClass(odataObject.KitDefinition);
                    }
                    else {
                        var className = odataObject.KitDefinition['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.KitDefinition = new Commerce.Proxy.Entities[className](odataObject.KitDefinition);
                        }
                    }
                }
                return ProductCompositionInformationClass;
            }());
            Entities.ProductCompositionInformationClass = ProductCompositionInformationClass;
            var ProductVariantInformationClass = (function () {
                function ProductVariantInformationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ActiveVariantProductId = (odataObject.ActiveVariantProductId != null) ? parseInt(odataObject.ActiveVariantProductId, 10) : undefined;
                    this.Variants = undefined;
                    if (odataObject.Variants) {
                        this.Variants = [];
                        for (var i = 0; i < odataObject.Variants.length; i++) {
                            if (odataObject.Variants[i] != null) {
                                if (odataObject.Variants[i]['@odata.type'] != null) {
                                    var className = odataObject.Variants[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Variants[i] = new Commerce.Proxy.Entities[className](odataObject.Variants[i]);
                                    }
                                }
                                else {
                                    this.Variants[i] = new ProductVariantClass(odataObject.Variants[i]);
                                }
                            }
                            else {
                                this.Variants[i] = undefined;
                            }
                        }
                    }
                    this.Dimensions = undefined;
                    if (odataObject.Dimensions) {
                        this.Dimensions = [];
                        for (var i = 0; i < odataObject.Dimensions.length; i++) {
                            if (odataObject.Dimensions[i] != null) {
                                if (odataObject.Dimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.Dimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i]);
                                    }
                                }
                                else {
                                    this.Dimensions[i] = new ProductDimensionSetClass(odataObject.Dimensions[i]);
                                }
                            }
                            else {
                                this.Dimensions[i] = undefined;
                            }
                        }
                    }
                    this.ItemId = odataObject.ItemId;
                    this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
                }
                return ProductVariantInformationClass;
            }());
            Entities.ProductVariantInformationClass = ProductVariantInformationClass;
            var ProductChangeTrackingInformationClass = (function () {
                function ProductChangeTrackingInformationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
                        : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ChangeActionValue = odataObject.ChangeActionValue;
                    this.RequestedActionValue = odataObject.RequestedActionValue;
                }
                return ProductChangeTrackingInformationClass;
            }());
            Entities.ProductChangeTrackingInformationClass = ProductChangeTrackingInformationClass;
            var ProductDimensionSetClass = (function () {
                function ProductDimensionSetClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DimensionKey = odataObject.DimensionKey;
                    this.DimensionValues = undefined;
                    if (odataObject.DimensionValues) {
                        this.DimensionValues = [];
                        for (var i = 0; i < odataObject.DimensionValues.length; i++) {
                            if (odataObject.DimensionValues[i] != null) {
                                if (odataObject.DimensionValues[i]['@odata.type'] != null) {
                                    var className = odataObject.DimensionValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DimensionValues[i] = new Commerce.Proxy.Entities[className](odataObject.DimensionValues[i]);
                                    }
                                }
                                else {
                                    this.DimensionValues[i] = new ProductDimensionValueSetClass(odataObject.DimensionValues[i]);
                                }
                            }
                            else {
                                this.DimensionValues[i] = undefined;
                            }
                        }
                    }
                }
                return ProductDimensionSetClass;
            }());
            Entities.ProductDimensionSetClass = ProductDimensionSetClass;
            var ProductDimensionValueSetClass = (function () {
                function ProductDimensionValueSetClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DimensionValue = odataObject.DimensionValue;
                    this.VariantSet = undefined;
                    if (odataObject.VariantSet) {
                        this.VariantSet = [];
                        for (var i = 0; i < odataObject.VariantSet.length; i++) {
                            if (odataObject.VariantSet[i] != null) {
                                this.VariantSet[i] = parseInt(odataObject.VariantSet[i], 10);
                            }
                            else {
                                this.VariantSet[i] = undefined;
                            }
                        }
                    }
                }
                return ProductDimensionValueSetClass;
            }());
            Entities.ProductDimensionValueSetClass = ProductDimensionValueSetClass;
            var RichMediaLocationsClass = (function () {
                function RichMediaLocationsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Items = undefined;
                    if (odataObject.Items) {
                        this.Items = [];
                        for (var i = 0; i < odataObject.Items.length; i++) {
                            if (odataObject.Items[i] != null) {
                                if (odataObject.Items[i]['@odata.type'] != null) {
                                    var className = odataObject.Items[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Items[i] = new Commerce.Proxy.Entities[className](odataObject.Items[i]);
                                    }
                                }
                                else {
                                    this.Items[i] = new RichMediaLocationsRichMediaLocationClass(odataObject.Items[i]);
                                }
                            }
                            else {
                                this.Items[i] = undefined;
                            }
                        }
                    }
                }
                return RichMediaLocationsClass;
            }());
            Entities.RichMediaLocationsClass = RichMediaLocationsClass;
            var RichMediaLocationsRichMediaLocationClass = (function () {
                function RichMediaLocationsRichMediaLocationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Url = odataObject.Url;
                    this.AltText = odataObject.AltText;
                    this.IsSelfHosted = odataObject.IsSelfHosted;
                    this.IsDefault = odataObject.IsDefault;
                }
                return RichMediaLocationsRichMediaLocationClass;
            }());
            Entities.RichMediaLocationsRichMediaLocationClass = RichMediaLocationsRichMediaLocationClass;
            var KitDefinitionClass = (function () {
                function KitDefinitionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DisassembleAtRegister = odataObject.DisassembleAtRegister;
                    this.KitLineDefinitions = undefined;
                    if (odataObject.KitLineDefinitions) {
                        this.KitLineDefinitions = [];
                        for (var i = 0; i < odataObject.KitLineDefinitions.length; i++) {
                            if (odataObject.KitLineDefinitions[i] != null) {
                                if (odataObject.KitLineDefinitions[i]['@odata.type'] != null) {
                                    var className = odataObject.KitLineDefinitions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.KitLineDefinitions[i] = new Commerce.Proxy.Entities[className](odataObject.KitLineDefinitions[i]);
                                    }
                                }
                                else {
                                    this.KitLineDefinitions[i] = new KitLineDefinitionClass(odataObject.KitLineDefinitions[i]);
                                }
                            }
                            else {
                                this.KitLineDefinitions[i] = undefined;
                            }
                        }
                    }
                    this.KitLineProductToVariantMap = undefined;
                    if (odataObject.KitLineProductToVariantMap) {
                        this.KitLineProductToVariantMap = [];
                        for (var i = 0; i < odataObject.KitLineProductToVariantMap.length; i++) {
                            if (odataObject.KitLineProductToVariantMap[i] != null) {
                                if (odataObject.KitLineProductToVariantMap[i]['@odata.type'] != null) {
                                    var className = odataObject.KitLineProductToVariantMap[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.KitLineProductToVariantMap[i] = new Commerce.Proxy.Entities[className](odataObject.KitLineProductToVariantMap[i]);
                                    }
                                }
                                else {
                                    this.KitLineProductToVariantMap[i] = new ComponentKitVariantSetClass(odataObject.KitLineProductToVariantMap[i]);
                                }
                            }
                            else {
                                this.KitLineProductToVariantMap[i] = undefined;
                            }
                        }
                    }
                    this.KitVariantToComponentMap = undefined;
                    if (odataObject.KitVariantToComponentMap) {
                        this.KitVariantToComponentMap = [];
                        for (var i = 0; i < odataObject.KitVariantToComponentMap.length; i++) {
                            if (odataObject.KitVariantToComponentMap[i] != null) {
                                if (odataObject.KitVariantToComponentMap[i]['@odata.type'] != null) {
                                    var className = odataObject.KitVariantToComponentMap[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.KitVariantToComponentMap[i] = new Commerce.Proxy.Entities[className](odataObject.KitVariantToComponentMap[i]);
                                    }
                                }
                                else {
                                    this.KitVariantToComponentMap[i] = new KitVariantContentClass(odataObject.KitVariantToComponentMap[i]);
                                }
                            }
                            else {
                                this.KitVariantToComponentMap[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return KitDefinitionClass;
            }());
            Entities.KitDefinitionClass = KitDefinitionClass;
            var ComponentKitVariantSetClass = (function () {
                function ComponentKitVariantSetClass(odataObject) {
                    odataObject = odataObject || {};
                    this.KitLineProductId = (odataObject.KitLineProductId != null) ? parseInt(odataObject.KitLineProductId, 10) : undefined;
                    this.KitVariantIdList = undefined;
                    if (odataObject.KitVariantIdList) {
                        this.KitVariantIdList = [];
                        for (var i = 0; i < odataObject.KitVariantIdList.length; i++) {
                            if (odataObject.KitVariantIdList[i] != null) {
                                this.KitVariantIdList[i] = parseInt(odataObject.KitVariantIdList[i], 10);
                            }
                            else {
                                this.KitVariantIdList[i] = undefined;
                            }
                        }
                    }
                }
                return ComponentKitVariantSetClass;
            }());
            Entities.ComponentKitVariantSetClass = ComponentKitVariantSetClass;
            var KitLineDefinitionClass = (function () {
                function KitLineDefinitionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ComponentProductId = (odataObject.ComponentProductId != null) ? parseInt(odataObject.ComponentProductId, 10) : undefined;
                    this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
                    this.SubstituteProductIds = undefined;
                    if (odataObject.SubstituteProductIds) {
                        this.SubstituteProductIds = [];
                        for (var i = 0; i < odataObject.SubstituteProductIds.length; i++) {
                            if (odataObject.SubstituteProductIds[i] != null) {
                                this.SubstituteProductIds[i] = parseInt(odataObject.SubstituteProductIds[i], 10);
                            }
                            else {
                                this.SubstituteProductIds[i] = undefined;
                            }
                        }
                    }
                    this.ComponentProperties = undefined;
                    if (odataObject.ComponentProperties) {
                        this.ComponentProperties = [];
                        for (var i = 0; i < odataObject.ComponentProperties.length; i++) {
                            if (odataObject.ComponentProperties[i] != null) {
                                if (odataObject.ComponentProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ComponentProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ComponentProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ComponentProperties[i]);
                                    }
                                }
                                else {
                                    this.ComponentProperties[i] = new KitLineProductPropertyClass(odataObject.ComponentProperties[i]);
                                }
                            }
                            else {
                                this.ComponentProperties[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return KitLineDefinitionClass;
            }());
            Entities.KitLineDefinitionClass = KitLineDefinitionClass;
            var KitLineProductPropertyClass = (function () {
                function KitLineProductPropertyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.Unit = odataObject.Unit;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Charge = (odataObject.Charge != null) ? parseFloat(odataObject.Charge) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return KitLineProductPropertyClass;
            }());
            Entities.KitLineProductPropertyClass = KitLineProductPropertyClass;
            var KitComponentKeyClass = (function () {
                function KitComponentKeyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
                    this.DistinctProductId = (odataObject.DistinctProductId != null) ? parseInt(odataObject.DistinctProductId, 10) : undefined;
                }
                return KitComponentKeyClass;
            }());
            Entities.KitComponentKeyClass = KitComponentKeyClass;
            var KitVariantContentClass = (function () {
                function KitVariantContentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.KitVariantId = (odataObject.KitVariantId != null) ? parseInt(odataObject.KitVariantId, 10) : undefined;
                    this.KitComponentKeyList = undefined;
                    if (odataObject.KitComponentKeyList) {
                        this.KitComponentKeyList = [];
                        for (var i = 0; i < odataObject.KitComponentKeyList.length; i++) {
                            if (odataObject.KitComponentKeyList[i] != null) {
                                if (odataObject.KitComponentKeyList[i]['@odata.type'] != null) {
                                    var className = odataObject.KitComponentKeyList[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.KitComponentKeyList[i] = new Commerce.Proxy.Entities[className](odataObject.KitComponentKeyList[i]);
                                    }
                                }
                                else {
                                    this.KitComponentKeyList[i] = new KitComponentKeyClass(odataObject.KitComponentKeyList[i]);
                                }
                            }
                            else {
                                this.KitComponentKeyList[i] = undefined;
                            }
                        }
                    }
                }
                return KitVariantContentClass;
            }());
            Entities.KitVariantContentClass = KitVariantContentClass;
            var ProductLookupClauseClass = (function () {
                function ProductLookupClauseClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.InventDimensionId = odataObject.InventDimensionId;
                    this.Barcode = odataObject.Barcode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductLookupClauseClass;
            }());
            Entities.ProductLookupClauseClass = ProductLookupClauseClass;
            var OrgUnitLocationClass = (function () {
                function OrgUnitLocationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
                    this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
                    this.OrgUnitName = odataObject.OrgUnitName;
                    this.OrgUnitNumber = odataObject.OrgUnitNumber;
                    this.Address = odataObject.Address;
                    this.Street = odataObject.Street;
                    this.StreetNumber = odataObject.StreetNumber;
                    this.City = odataObject.City;
                    this.DistrictName = odataObject.DistrictName;
                    this.BuildingCompliment = odataObject.BuildingCompliment;
                    this.Postbox = odataObject.Postbox;
                    this.Zip = odataObject.Zip;
                    this.County = odataObject.County;
                    this.CountyName = odataObject.CountyName;
                    this.State = odataObject.State;
                    this.StateName = odataObject.StateName;
                    this.Country = odataObject.Country;
                    this.Distance = (odataObject.Distance != null) ? parseFloat(odataObject.Distance) : undefined;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.InventorySiteId = odataObject.InventorySiteId;
                    this.PostalAddressId = (odataObject.PostalAddressId != null) ? parseInt(odataObject.PostalAddressId, 10) : undefined;
                    this.OpenFrom = odataObject.OpenFrom;
                    this.OpenTo = odataObject.OpenTo;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OrgUnitLocationClass;
            }());
            Entities.OrgUnitLocationClass = OrgUnitLocationClass;
            var SalesLineDeliveryOptionClass = (function () {
                function SalesLineDeliveryOptionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesLineId = odataObject.SalesLineId;
                    this.DeliveryOptions = undefined;
                    if (odataObject.DeliveryOptions) {
                        this.DeliveryOptions = [];
                        for (var i = 0; i < odataObject.DeliveryOptions.length; i++) {
                            if (odataObject.DeliveryOptions[i] != null) {
                                if (odataObject.DeliveryOptions[i]['@odata.type'] != null) {
                                    var className = odataObject.DeliveryOptions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DeliveryOptions[i] = new Commerce.Proxy.Entities[className](odataObject.DeliveryOptions[i]);
                                    }
                                }
                                else {
                                    this.DeliveryOptions[i] = new DeliveryOptionClass(odataObject.DeliveryOptions[i]);
                                }
                            }
                            else {
                                this.DeliveryOptions[i] = undefined;
                            }
                        }
                    }
                }
                return SalesLineDeliveryOptionClass;
            }());
            Entities.SalesLineDeliveryOptionClass = SalesLineDeliveryOptionClass;
            var DeliveryOptionClass = (function () {
                function DeliveryOptionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChargeGroup = odataObject.ChargeGroup;
                    this.Code = odataObject.Code;
                    this.Description = odataObject.Description;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DeliveryOptionClass;
            }());
            Entities.DeliveryOptionClass = DeliveryOptionClass;
            var ChannelProfilePropertyClass = (function () {
                function ChannelProfilePropertyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Key = odataObject.Key;
                    this.Value = odataObject.Value;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChannelProfilePropertyClass;
            }());
            Entities.ChannelProfilePropertyClass = ChannelProfilePropertyClass;
            var ChannelConfigurationClass = (function () {
                function ChannelConfigurationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ChannelNaturalId = odataObject.ChannelNaturalId;
                    this.MinimumDepositPercentage = (odataObject.MinimumDepositPercentage != null) ? parseFloat(odataObject.MinimumDepositPercentage) : undefined;
                    this.QuoteExpirationDays = odataObject.QuoteExpirationDays;
                    this.PickupDeliveryModeCode = odataObject.PickupDeliveryModeCode;
                    this.CarryoutDeliveryModeCode = odataObject.CarryoutDeliveryModeCode;
                    this.CancellationChargePercentage = (odataObject.CancellationChargePercentage != null) ? parseFloat(odataObject.CancellationChargePercentage) : undefined;
                    this.InventLocation = odataObject.InventLocation;
                    this.InventLocationDataAreaId = odataObject.InventLocationDataAreaId;
                    this.BingMapsApiKey = odataObject.BingMapsApiKey;
                    this.BingMapsEnabled = odataObject.BingMapsEnabled;
                    this.Currency = odataObject.Currency;
                    this.CatalogDefaultImageTemplate = odataObject.CatalogDefaultImageTemplate;
                    this.CompanyCurrency = odataObject.CompanyCurrency;
                    this.PriceIncludesSalesTax = odataObject.PriceIncludesSalesTax;
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.ChannelCountryRegionISOCode = odataObject.ChannelCountryRegionISOCode;
                    this.DefaultLanguageId = odataObject.DefaultLanguageId;
                    this.TimeZoneInfoId = odataObject.TimeZoneInfoId;
                    this.EmailDeliveryModeCode = odataObject.EmailDeliveryModeCode;
                    this.GiftCardItemId = odataObject.GiftCardItemId;
                    this.EnableProductRecommendations = odataObject.EnableProductRecommendations;
                    this.RefundableShippingAmountWithoutApproval = (odataObject.RefundableShippingAmountWithoutApproval != null) ? parseFloat(odataObject.RefundableShippingAmountWithoutApproval) : undefined;
                    this.RefundShippingCharges = odataObject.RefundShippingCharges;
                    this.ReceiptSettingsValue = odataObject.ReceiptSettingsValue;
                    this.CustomerAttributeGroupId = (odataObject.CustomerAttributeGroupId != null) ? parseInt(odataObject.CustomerAttributeGroupId, 10) : undefined;
                    this.NotificationRefreshInterval = odataObject.NotificationRefreshInterval;
                    this.AllowExchangeOnReturnOrders = odataObject.AllowExchangeOnReturnOrders;
                    this.FiscalRegistrationProcessId = odataObject.FiscalRegistrationProcessId;
                    this.ProfileProperties = undefined;
                    if (odataObject.ProfileProperties) {
                        this.ProfileProperties = [];
                        for (var i = 0; i < odataObject.ProfileProperties.length; i++) {
                            if (odataObject.ProfileProperties[i] != null) {
                                if (odataObject.ProfileProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ProfileProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProfileProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ProfileProperties[i]);
                                    }
                                }
                                else {
                                    this.ProfileProperties[i] = new ChannelProfilePropertyClass(odataObject.ProfileProperties[i]);
                                }
                            }
                            else {
                                this.ProfileProperties[i] = undefined;
                            }
                        }
                    }
                    this.Properties = undefined;
                    if (odataObject.Properties) {
                        this.Properties = [];
                        for (var i = 0; i < odataObject.Properties.length; i++) {
                            if (odataObject.Properties[i] != null) {
                                if (odataObject.Properties[i]['@odata.type'] != null) {
                                    var className = odataObject.Properties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Properties[i] = new Commerce.Proxy.Entities[className](odataObject.Properties[i]);
                                    }
                                }
                                else {
                                    this.Properties[i] = new ChannelPropertyClass(odataObject.Properties[i]);
                                }
                            }
                            else {
                                this.Properties[i] = undefined;
                            }
                        }
                    }
                    this.Languages = undefined;
                    if (odataObject.Languages) {
                        this.Languages = [];
                        for (var i = 0; i < odataObject.Languages.length; i++) {
                            if (odataObject.Languages[i] != null) {
                                if (odataObject.Languages[i]['@odata.type'] != null) {
                                    var className = odataObject.Languages[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Languages[i] = new Commerce.Proxy.Entities[className](odataObject.Languages[i]);
                                    }
                                }
                                else {
                                    this.Languages[i] = new ChannelLanguageClass(odataObject.Languages[i]);
                                }
                            }
                            else {
                                this.Languages[i] = undefined;
                            }
                        }
                    }
                    this.UseAdvancedAutoCharges = odataObject.UseAdvancedAutoCharges;
                    this.EnableReturnsForMultipleOrderInvoices = odataObject.EnableReturnsForMultipleOrderInvoices;
                    this.VoidSuspendedTransactionsOnCloseShift = odataObject.VoidSuspendedTransactionsOnCloseShift;
                    this.EnableOmniChannelPayments = odataObject.EnableOmniChannelPayments;
                    this.UseAdvancedCashManagement = odataObject.UseAdvancedCashManagement;
                    this.SalesOrderHeaderAttributeGroups = undefined;
                    if (odataObject.SalesOrderHeaderAttributeGroups) {
                        this.SalesOrderHeaderAttributeGroups = [];
                        for (var i = 0; i < odataObject.SalesOrderHeaderAttributeGroups.length; i++) {
                            if (odataObject.SalesOrderHeaderAttributeGroups[i] != null) {
                                this.SalesOrderHeaderAttributeGroups[i] = parseInt(odataObject.SalesOrderHeaderAttributeGroups[i], 10);
                            }
                            else {
                                this.SalesOrderHeaderAttributeGroups[i] = undefined;
                            }
                        }
                    }
                    this.SalesOrderLinesAttributeGroups = undefined;
                    if (odataObject.SalesOrderLinesAttributeGroups) {
                        this.SalesOrderLinesAttributeGroups = [];
                        for (var i = 0; i < odataObject.SalesOrderLinesAttributeGroups.length; i++) {
                            if (odataObject.SalesOrderLinesAttributeGroups[i] != null) {
                                this.SalesOrderLinesAttributeGroups[i] = parseInt(odataObject.SalesOrderLinesAttributeGroups[i], 10);
                            }
                            else {
                                this.SalesOrderLinesAttributeGroups[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChannelConfigurationClass;
            }());
            Entities.ChannelConfigurationClass = ChannelConfigurationClass;
            var ChannelPropertyClass = (function () {
                function ChannelPropertyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.Value = odataObject.Value;
                    this.Channel = (odataObject.Channel != null) ? parseInt(odataObject.Channel, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChannelPropertyClass;
            }());
            Entities.ChannelPropertyClass = ChannelPropertyClass;
            var ChannelLanguageClass = (function () {
                function ChannelLanguageClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LanguageId = odataObject.LanguageId;
                    this.IsDefault = odataObject.IsDefault;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChannelLanguageClass;
            }());
            Entities.ChannelLanguageClass = ChannelLanguageClass;
            var NonSalesTransactionClass = (function (_super) {
                __extends(NonSalesTransactionClass, _super);
                function NonSalesTransactionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        _this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    _this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                _this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    _this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    _this.ForeignCurrency = odataObject.ForeignCurrency;
                    _this.OpenDrawer = odataObject.OpenDrawer;
                    _this.DenominationDetails = undefined;
                    if (odataObject.DenominationDetails) {
                        _this.DenominationDetails = [];
                        for (var i = 0; i < odataObject.DenominationDetails.length; i++) {
                            if (odataObject.DenominationDetails[i] != null) {
                                if (odataObject.DenominationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.DenominationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.DenominationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.DenominationDetails[i]);
                                    }
                                }
                                else {
                                    _this.DenominationDetails[i] = new DenominationDetailClass(odataObject.DenominationDetails[i]);
                                }
                            }
                            else {
                                _this.DenominationDetails[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.NonSalesTransaction";
                    return _this;
                }
                return NonSalesTransactionClass;
            }(TransactionClass));
            Entities.NonSalesTransactionClass = NonSalesTransactionClass;
            var DropAndDeclareTransactionClass = (function (_super) {
                __extends(DropAndDeclareTransactionClass, _super);
                function DropAndDeclareTransactionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.TenderDetails = undefined;
                    if (odataObject.TenderDetails) {
                        _this.TenderDetails = [];
                        for (var i = 0; i < odataObject.TenderDetails.length; i++) {
                            if (odataObject.TenderDetails[i] != null) {
                                if (odataObject.TenderDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.TenderDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TenderDetails[i]);
                                    }
                                }
                                else {
                                    _this.TenderDetails[i] = new TenderDetailClass(odataObject.TenderDetails[i]);
                                }
                            }
                            else {
                                _this.TenderDetails[i] = undefined;
                            }
                        }
                    }
                    _this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        _this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    _this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                _this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    _this.OpenDrawer = odataObject.OpenDrawer;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.DropAndDeclareTransaction";
                    return _this;
                }
                return DropAndDeclareTransactionClass;
            }(TransactionClass));
            Entities.DropAndDeclareTransactionClass = DropAndDeclareTransactionClass;
            var ProductSearchCriteriaClass = (function () {
                function ProductSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Ids = undefined;
                    if (odataObject.Ids) {
                        this.Ids = [];
                        for (var i = 0; i < odataObject.Ids.length; i++) {
                            if (odataObject.Ids[i] != null) {
                                this.Ids[i] = parseInt(odataObject.Ids[i], 10);
                            }
                            else {
                                this.Ids[i] = undefined;
                            }
                        }
                    }
                    this.CategoryIds = undefined;
                    if (odataObject.CategoryIds) {
                        this.CategoryIds = [];
                        for (var i = 0; i < odataObject.CategoryIds.length; i++) {
                            if (odataObject.CategoryIds[i] != null) {
                                this.CategoryIds[i] = parseInt(odataObject.CategoryIds[i], 10);
                            }
                            else {
                                this.CategoryIds[i] = undefined;
                            }
                        }
                    }
                    this.IncludeProductsFromDescendantCategories = odataObject.IncludeProductsFromDescendantCategories;
                    this.SearchCondition = odataObject.SearchCondition;
                    this.SkipVariantExpansion = odataObject.SkipVariantExpansion;
                    this.Barcodes = undefined;
                    if (odataObject.Barcodes) {
                        this.Barcodes = [];
                        for (var i = 0; i < odataObject.Barcodes.length; i++) {
                            if (odataObject.Barcodes[i] != null) {
                                this.Barcodes[i] = odataObject.Barcodes[i];
                            }
                            else {
                                this.Barcodes[i] = undefined;
                            }
                        }
                    }
                    this.ItemIds = undefined;
                    if (odataObject.ItemIds) {
                        this.ItemIds = [];
                        for (var i = 0; i < odataObject.ItemIds.length; i++) {
                            if (odataObject.ItemIds[i] != null) {
                                if (odataObject.ItemIds[i]['@odata.type'] != null) {
                                    var className = odataObject.ItemIds[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ItemIds[i] = new Commerce.Proxy.Entities[className](odataObject.ItemIds[i]);
                                    }
                                }
                                else {
                                    this.ItemIds[i] = new ProductLookupClauseClass(odataObject.ItemIds[i]);
                                }
                            }
                            else {
                                this.ItemIds[i] = undefined;
                            }
                        }
                    }
                    this.Refinement = undefined;
                    if (odataObject.Refinement) {
                        this.Refinement = [];
                        for (var i = 0; i < odataObject.Refinement.length; i++) {
                            if (odataObject.Refinement[i] != null) {
                                if (odataObject.Refinement[i]['@odata.type'] != null) {
                                    var className = odataObject.Refinement[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Refinement[i] = new Commerce.Proxy.Entities[className](odataObject.Refinement[i]);
                                    }
                                }
                                else {
                                    this.Refinement[i] = new ProductRefinerValueClass(odataObject.Refinement[i]);
                                }
                            }
                            else {
                                this.Refinement[i] = undefined;
                            }
                        }
                    }
                    this.DownloadProductData = odataObject.DownloadProductData;
                    if (odataObject.Context == null) {
                        this.Context = undefined;
                    }
                    else if (odataObject.Context['@odata.type'] == null) {
                        this.Context = new ProjectionDomainClass(odataObject.Context);
                    }
                    else {
                        var className = odataObject.Context['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Context = new Commerce.Proxy.Entities[className](odataObject.Context);
                        }
                    }
                    this.Language = odataObject.Language;
                    this.IsOnline = odataObject.IsOnline;
                    this.DataLevelValue = odataObject.DataLevelValue;
                }
                return ProductSearchCriteriaClass;
            }());
            Entities.ProductSearchCriteriaClass = ProductSearchCriteriaClass;
            var ChangedProductsSearchCriteriaClass = (function () {
                function ChangedProductsSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SynchronizationToken = odataObject.SynchronizationToken;
                    if (odataObject.Context == null) {
                        this.Context = undefined;
                    }
                    else if (odataObject.Context['@odata.type'] == null) {
                        this.Context = new ProjectionDomainClass(odataObject.Context);
                    }
                    else {
                        var className = odataObject.Context['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Context = new Commerce.Proxy.Entities[className](odataObject.Context);
                        }
                    }
                    this.AsListings = odataObject.AsListings;
                    if (odataObject.Session == null) {
                        this.Session = undefined;
                    }
                    else if (odataObject.Session['@odata.type'] == null) {
                        this.Session = new ReadChangedProductsSessionClass(odataObject.Session);
                    }
                    else {
                        var className = odataObject.Session['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Session = new Commerce.Proxy.Entities[className](odataObject.Session);
                        }
                    }
                    this.DataLevelValue = odataObject.DataLevelValue;
                }
                return ChangedProductsSearchCriteriaClass;
            }());
            Entities.ChangedProductsSearchCriteriaClass = ChangedProductsSearchCriteriaClass;
            var EmployeeActivitySearchCriteriaClass = (function () {
                function EmployeeActivitySearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.FromDateTimeOffset = (odataObject.FromDateTimeOffset instanceof Date) ? odataObject.FromDateTimeOffset
                        : (odataObject.FromDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.FromDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
                    this.ToDateTimeOffset = (odataObject.ToDateTimeOffset instanceof Date) ? odataObject.ToDateTimeOffset
                        : (odataObject.ToDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ToDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.EmployeeActivityTypeValues = undefined;
                    if (odataObject.EmployeeActivityTypeValues) {
                        this.EmployeeActivityTypeValues = [];
                        for (var i = 0; i < odataObject.EmployeeActivityTypeValues.length; i++) {
                            if (odataObject.EmployeeActivityTypeValues[i] != null) {
                                this.EmployeeActivityTypeValues[i] = odataObject.EmployeeActivityTypeValues[i];
                            }
                            else {
                                this.EmployeeActivityTypeValues[i] = undefined;
                            }
                        }
                    }
                    this.DataLevelValue = odataObject.DataLevelValue;
                }
                return EmployeeActivitySearchCriteriaClass;
            }());
            Entities.EmployeeActivitySearchCriteriaClass = EmployeeActivitySearchCriteriaClass;
            var CartLineDeliveryPreferenceClass = (function () {
                function CartLineDeliveryPreferenceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    this.DeliveryPreferenceTypeValues = undefined;
                    if (odataObject.DeliveryPreferenceTypeValues) {
                        this.DeliveryPreferenceTypeValues = [];
                        for (var i = 0; i < odataObject.DeliveryPreferenceTypeValues.length; i++) {
                            if (odataObject.DeliveryPreferenceTypeValues[i] != null) {
                                this.DeliveryPreferenceTypeValues[i] = odataObject.DeliveryPreferenceTypeValues[i];
                            }
                            else {
                                this.DeliveryPreferenceTypeValues[i] = undefined;
                            }
                        }
                    }
                }
                return CartLineDeliveryPreferenceClass;
            }());
            Entities.CartLineDeliveryPreferenceClass = CartLineDeliveryPreferenceClass;
            var CartLinePromotionClass = (function () {
                function CartLinePromotionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    this.Promotions = undefined;
                    if (odataObject.Promotions) {
                        this.Promotions = [];
                        for (var i = 0; i < odataObject.Promotions.length; i++) {
                            if (odataObject.Promotions[i] != null) {
                                this.Promotions[i] = odataObject.Promotions[i];
                            }
                            else {
                                this.Promotions[i] = undefined;
                            }
                        }
                    }
                }
                return CartLinePromotionClass;
            }());
            Entities.CartLinePromotionClass = CartLinePromotionClass;
            var ProductVariantClass = (function () {
                function ProductVariantClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
                    this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.Color = odataObject.Color;
                    this.Style = odataObject.Style;
                    this.Size = odataObject.Size;
                    this.Configuration = odataObject.Configuration;
                    this.ColorId = odataObject.ColorId;
                    this.StyleId = odataObject.StyleId;
                    this.SizeId = odataObject.SizeId;
                    this.ConfigId = odataObject.ConfigId;
                    this.VariantId = odataObject.VariantId;
                    this.Images = undefined;
                    if (odataObject.Images) {
                        this.Images = [];
                        for (var i = 0; i < odataObject.Images.length; i++) {
                            if (odataObject.Images[i] != null) {
                                if (odataObject.Images[i]['@odata.type'] != null) {
                                    var className = odataObject.Images[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i]);
                                    }
                                }
                                else {
                                    this.Images[i] = new RichMediaLocationsClass(odataObject.Images[i]);
                                }
                            }
                            else {
                                this.Images[i] = undefined;
                            }
                        }
                    }
                    this.DistinctProductVariantId = (odataObject.DistinctProductVariantId != null) ? parseInt(odataObject.DistinctProductVariantId, 10) : undefined;
                    this.ProductNumber = odataObject.ProductNumber;
                    this.PropertiesAsList = undefined;
                    if (odataObject.PropertiesAsList) {
                        this.PropertiesAsList = [];
                        for (var i = 0; i < odataObject.PropertiesAsList.length; i++) {
                            if (odataObject.PropertiesAsList[i] != null) {
                                if (odataObject.PropertiesAsList[i]['@odata.type'] != null) {
                                    var className = odataObject.PropertiesAsList[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.PropertiesAsList[i] = new Commerce.Proxy.Entities[className](odataObject.PropertiesAsList[i]);
                                    }
                                }
                                else {
                                    this.PropertiesAsList[i] = new ProductPropertyTranslationClass(odataObject.PropertiesAsList[i]);
                                }
                            }
                            else {
                                this.PropertiesAsList[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductVariantClass;
            }());
            Entities.ProductVariantClass = ProductVariantClass;
            var HardwareProfilePrinterClass = (function () {
                function HardwareProfilePrinterClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProfileId = odataObject.ProfileId;
                    this.DeviceTypeValue = odataObject.DeviceTypeValue;
                    this.DeviceName = odataObject.DeviceName;
                    this.DeviceMake = odataObject.DeviceMake;
                    this.DeviceModel = odataObject.DeviceModel;
                    this.DeviceDescription = odataObject.DeviceDescription;
                    this.CharacterSet = odataObject.CharacterSet;
                    this.ReceiptProfileId = odataObject.ReceiptProfileId;
                    this.BinaryConversion = odataObject.BinaryConversion;
                    this.DocInsertRemovalTimeout = odataObject.DocInsertRemovalTimeout;
                    this.Logo = odataObject.Logo;
                    this.LogoAlignment = odataObject.LogoAlignment;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareProfilePrinterClass;
            }());
            Entities.HardwareProfilePrinterClass = HardwareProfilePrinterClass;
            var HardwareProfileScannerClass = (function () {
                function HardwareProfileScannerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProfileId = odataObject.ProfileId;
                    this.DeviceTypeValue = odataObject.DeviceTypeValue;
                    this.DeviceName = odataObject.DeviceName;
                    this.DeviceDescription = odataObject.DeviceDescription;
                    this.DecodeData = odataObject.DecodeData;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareProfileScannerClass;
            }());
            Entities.HardwareProfileScannerClass = HardwareProfileScannerClass;
            var HardwareProfileCashDrawerClass = (function () {
                function HardwareProfileCashDrawerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProfileId = odataObject.ProfileId;
                    this.DeviceTypeValue = odataObject.DeviceTypeValue;
                    this.DeviceName = odataObject.DeviceName;
                    this.DeviceDescription = odataObject.DeviceDescription;
                    this.DeviceMake = odataObject.DeviceMake;
                    this.DeviceModel = odataObject.DeviceModel;
                    this.IsSharedShiftDrawer = odataObject.IsSharedShiftDrawer;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareProfileCashDrawerClass;
            }());
            Entities.HardwareProfileCashDrawerClass = HardwareProfileCashDrawerClass;
            var TillLayoutClass = (function () {
                function TillLayoutClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CashChangerLayoutXml = odataObject.CashChangerLayoutXml;
                    this.CustomerLayoutId = odataObject.CustomerLayoutId;
                    this.CustomerLayoutXml = odataObject.CustomerLayoutXml;
                    this.Height = odataObject.Height;
                    this.LayoutId = odataObject.LayoutId;
                    this.LayoutTypeValue = odataObject.LayoutTypeValue;
                    this.LayoutXml = odataObject.LayoutXml;
                    this.LayoutXmlPortrait = odataObject.LayoutXmlPortrait;
                    this.Name = odataObject.Name;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.ReceiptItemsLayoutXml = odataObject.ReceiptItemsLayoutXml;
                    this.ReceiptPaymentLayoutXml = odataObject.ReceiptPaymentLayoutXml;
                    this.TotalId = odataObject.TotalId;
                    this.TotalsLayoutXml = odataObject.TotalsLayoutXml;
                    this.Width = odataObject.Width;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.StartScreen = odataObject.StartScreen;
                    this.ButtonGridZones = undefined;
                    if (odataObject.ButtonGridZones) {
                        this.ButtonGridZones = [];
                        for (var i = 0; i < odataObject.ButtonGridZones.length; i++) {
                            if (odataObject.ButtonGridZones[i] != null) {
                                if (odataObject.ButtonGridZones[i]['@odata.type'] != null) {
                                    var className = odataObject.ButtonGridZones[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ButtonGridZones[i] = new Commerce.Proxy.Entities[className](odataObject.ButtonGridZones[i]);
                                    }
                                }
                                else {
                                    this.ButtonGridZones[i] = new ButtonGridZoneClass(odataObject.ButtonGridZones[i]);
                                }
                            }
                            else {
                                this.ButtonGridZones[i] = undefined;
                            }
                        }
                    }
                    this.ImageZones = undefined;
                    if (odataObject.ImageZones) {
                        this.ImageZones = [];
                        for (var i = 0; i < odataObject.ImageZones.length; i++) {
                            if (odataObject.ImageZones[i] != null) {
                                if (odataObject.ImageZones[i]['@odata.type'] != null) {
                                    var className = odataObject.ImageZones[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ImageZones[i] = new Commerce.Proxy.Entities[className](odataObject.ImageZones[i]);
                                    }
                                }
                                else {
                                    this.ImageZones[i] = new ImageZoneClass(odataObject.ImageZones[i]);
                                }
                            }
                            else {
                                this.ImageZones[i] = undefined;
                            }
                        }
                    }
                    this.ReportZones = undefined;
                    if (odataObject.ReportZones) {
                        this.ReportZones = [];
                        for (var i = 0; i < odataObject.ReportZones.length; i++) {
                            if (odataObject.ReportZones[i] != null) {
                                if (odataObject.ReportZones[i]['@odata.type'] != null) {
                                    var className = odataObject.ReportZones[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReportZones[i] = new Commerce.Proxy.Entities[className](odataObject.ReportZones[i]);
                                    }
                                }
                                else {
                                    this.ReportZones[i] = new ReportZoneClass(odataObject.ReportZones[i]);
                                }
                            }
                            else {
                                this.ReportZones[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TillLayoutClass;
            }());
            Entities.TillLayoutClass = TillLayoutClass;
            var SalesInvoiceClass = (function () {
                function SalesInvoiceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Id = odataObject.Id;
                    this.SalesId = odataObject.SalesId;
                    this.SalesType = odataObject.SalesType;
                    this.InvoiceDate = (odataObject.InvoiceDate instanceof Date) ? odataObject.InvoiceDate
                        : (odataObject.InvoiceDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.InvoiceDate, "Edm.DateTimeOffset", false) : undefined;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
                    this.Account = odataObject.Account;
                    this.Name = odataObject.Name;
                    this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
                    this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
                    this.SalesInvoiceLine = undefined;
                    if (odataObject.SalesInvoiceLine) {
                        this.SalesInvoiceLine = [];
                        for (var i = 0; i < odataObject.SalesInvoiceLine.length; i++) {
                            if (odataObject.SalesInvoiceLine[i] != null) {
                                if (odataObject.SalesInvoiceLine[i]['@odata.type'] != null) {
                                    var className = odataObject.SalesInvoiceLine[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SalesInvoiceLine[i] = new Commerce.Proxy.Entities[className](odataObject.SalesInvoiceLine[i]);
                                    }
                                }
                                else {
                                    this.SalesInvoiceLine[i] = new SalesInvoiceLineClass(odataObject.SalesInvoiceLine[i]);
                                }
                            }
                            else {
                                this.SalesInvoiceLine[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SalesInvoiceClass;
            }());
            Entities.SalesInvoiceClass = SalesInvoiceClass;
            var OrderInvoiceClass = (function () {
                function OrderInvoiceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
                    this.CustomerName = odataObject.CustomerName;
                    this.InvoiceDate = (odataObject.InvoiceDate instanceof Date) ? odataObject.InvoiceDate
                        : (odataObject.InvoiceDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.InvoiceDate, "Edm.DateTimeOffset", false) : undefined;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
                    this.AmountBalance = (odataObject.AmountBalance != null) ? parseFloat(odataObject.AmountBalance) : undefined;
                    this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OrderInvoiceClass;
            }());
            Entities.OrderInvoiceClass = OrderInvoiceClass;
            var TaxOverrideClass = (function () {
                function TaxOverrideClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Code = odataObject.Code;
                    this.SourceTaxGroup = odataObject.SourceTaxGroup;
                    this.DestinationTaxGroup = odataObject.DestinationTaxGroup;
                    this.SourceItemTaxGroup = odataObject.SourceItemTaxGroup;
                    this.DestinationItemTaxGroup = odataObject.DestinationItemTaxGroup;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.AdditionalDescription = odataObject.AdditionalDescription;
                    this.Status = odataObject.Status;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TaxOverrideClass;
            }());
            Entities.TaxOverrideClass = TaxOverrideClass;
            var TenderTypeClass = (function () {
                function TenderTypeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Function = odataObject.Function;
                    this.TenderTypeId = odataObject.TenderTypeId;
                    this.Name = odataObject.Name;
                    this.OperationId = odataObject.OperationId;
                    this.OperationName = odataObject.OperationName;
                    this.ChangeTenderTypeId = odataObject.ChangeTenderTypeId;
                    this.AboveMinimumChangeAmount = (odataObject.AboveMinimumChangeAmount != null) ? parseFloat(odataObject.AboveMinimumChangeAmount) : undefined;
                    this.AboveMinimumChangeTenderTypeId = odataObject.AboveMinimumChangeTenderTypeId;
                    this.OpenDrawer = odataObject.OpenDrawer;
                    this.UseSignatureCaptureDevice = odataObject.UseSignatureCaptureDevice;
                    this.MinimumSignatureCaptureAmount = (odataObject.MinimumSignatureCaptureAmount != null) ? parseFloat(odataObject.MinimumSignatureCaptureAmount) : undefined;
                    this.IsOvertenderAllowed = odataObject.IsOvertenderAllowed;
                    this.IsUndertenderAllowed = odataObject.IsUndertenderAllowed;
                    this.MaximumOvertenderAmount = (odataObject.MaximumOvertenderAmount != null) ? parseFloat(odataObject.MaximumOvertenderAmount) : undefined;
                    this.MaximumUndertenderAmount = (odataObject.MaximumUndertenderAmount != null) ? parseFloat(odataObject.MaximumUndertenderAmount) : undefined;
                    this.MaximumAmountPerTransaction = (odataObject.MaximumAmountPerTransaction != null) ? parseFloat(odataObject.MaximumAmountPerTransaction) : undefined;
                    this.MaximumAmountPerLine = (odataObject.MaximumAmountPerLine != null) ? parseFloat(odataObject.MaximumAmountPerLine) : undefined;
                    this.MinimumAmountPerTransaction = (odataObject.MinimumAmountPerTransaction != null) ? parseFloat(odataObject.MinimumAmountPerTransaction) : undefined;
                    this.MinimumAmountPerLine = (odataObject.MinimumAmountPerLine != null) ? parseFloat(odataObject.MinimumAmountPerLine) : undefined;
                    this.RoundOff = (odataObject.RoundOff != null) ? parseFloat(odataObject.RoundOff) : undefined;
                    this.CountingRequired = odataObject.CountingRequired;
                    this.TakenToBank = odataObject.TakenToBank;
                    this.TakenToSafe = odataObject.TakenToSafe;
                    this.ConnectorId = odataObject.ConnectorId;
                    this.GiftCardItem = odataObject.GiftCardItem;
                    this.GiftCardCashoutOutThreshold = (odataObject.GiftCardCashoutOutThreshold != null) ? parseFloat(odataObject.GiftCardCashoutOutThreshold) : undefined;
                    this.ChangeLineOnReceipt = odataObject.ChangeLineOnReceipt;
                    this.HideCardInputDetails = odataObject.HideCardInputDetails;
                    this.CashDrawerLimitEnabled = odataObject.CashDrawerLimitEnabled;
                    this.CashDrawerLimit = (odataObject.CashDrawerLimit != null) ? parseFloat(odataObject.CashDrawerLimit) : undefined;
                    this.RestrictReturnsWithoutReceipt = odataObject.RestrictReturnsWithoutReceipt;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TenderTypeClass;
            }());
            Entities.TenderTypeClass = TenderTypeClass;
            var ReasonCodeClass = (function () {
                function ReasonCodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.InputRequired = odataObject.InputRequired;
                    this.LinkedReasonCodeId = odataObject.LinkedReasonCodeId;
                    this.MaximumLength = odataObject.MaximumLength;
                    this.MaximumValue = (odataObject.MaximumValue != null) ? parseFloat(odataObject.MaximumValue) : undefined;
                    this.MinimumLength = odataObject.MinimumLength;
                    this.MinimumValue = (odataObject.MinimumValue != null) ? parseFloat(odataObject.MinimumValue) : undefined;
                    this.OncePerTransaction = odataObject.OncePerTransaction;
                    this.PrintInputNameOnReceipt = odataObject.PrintInputNameOnReceipt;
                    this.PrintInputToReceipt = odataObject.PrintInputToReceipt;
                    this.PrintPromptToReceipt = odataObject.PrintPromptToReceipt;
                    this.Prompt = odataObject.Prompt;
                    this.RandomFactor = (odataObject.RandomFactor != null) ? parseFloat(odataObject.RandomFactor) : undefined;
                    this.RetailUseReasonCode = odataObject.RetailUseReasonCode;
                    this.ReasonCodeId = odataObject.ReasonCodeId;
                    this.Description = odataObject.Description;
                    this.InputTypeValue = odataObject.InputTypeValue;
                    this.ActivityValue = odataObject.ActivityValue;
                    this.IsMultiLineText = odataObject.IsMultiLineText;
                    this.ReasonSubCodes = undefined;
                    if (odataObject.ReasonSubCodes) {
                        this.ReasonSubCodes = [];
                        for (var i = 0; i < odataObject.ReasonSubCodes.length; i++) {
                            if (odataObject.ReasonSubCodes[i] != null) {
                                if (odataObject.ReasonSubCodes[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonSubCodes[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonSubCodes[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonSubCodes[i]);
                                    }
                                }
                                else {
                                    this.ReasonSubCodes[i] = new ReasonSubCodeClass(odataObject.ReasonSubCodes[i]);
                                }
                            }
                            else {
                                this.ReasonSubCodes[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReasonCodeClass;
            }());
            Entities.ReasonCodeClass = ReasonCodeClass;
            var ReportDataSetClass = (function () {
                function ReportDataSetClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ReportId = odataObject.ReportId;
                    this.Parameters = undefined;
                    if (odataObject.Parameters) {
                        this.Parameters = [];
                        for (var i = 0; i < odataObject.Parameters.length; i++) {
                            if (odataObject.Parameters[i] != null) {
                                if (odataObject.Parameters[i]['@odata.type'] != null) {
                                    var className = odataObject.Parameters[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Parameters[i] = new Commerce.Proxy.Entities[className](odataObject.Parameters[i]);
                                    }
                                }
                                else {
                                    this.Parameters[i] = new CommercePropertyClass(odataObject.Parameters[i]);
                                }
                            }
                            else {
                                this.Parameters[i] = undefined;
                            }
                        }
                    }
                    this.Locale = odataObject.Locale;
                    this.Output = undefined;
                    if (odataObject.Output) {
                        this.Output = [];
                        for (var i = 0; i < odataObject.Output.length; i++) {
                            if (odataObject.Output[i] != null) {
                                if (odataObject.Output[i]['@odata.type'] != null) {
                                    var className = odataObject.Output[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Output[i] = new Commerce.Proxy.Entities[className](odataObject.Output[i]);
                                    }
                                }
                                else {
                                    this.Output[i] = new ReportRowClass(odataObject.Output[i]);
                                }
                            }
                            else {
                                this.Output[i] = undefined;
                            }
                        }
                    }
                    this.HasTotalRow = odataObject.HasTotalRow;
                    this.HasDisclaimer = odataObject.HasDisclaimer;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReportDataSetClass;
            }());
            Entities.ReportDataSetClass = ReportDataSetClass;
            var ZipCodeInfoClass = (function () {
                function ZipCodeInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ZipPostalCode = odataObject.ZipPostalCode;
                    this.StreetName = odataObject.StreetName;
                    this.TimeZone = odataObject.TimeZone;
                    this.CountryRegionId = odataObject.CountryRegionId;
                    this.StateId = odataObject.StateId;
                    this.CountyId = odataObject.CountyId;
                    this.CityName = odataObject.CityName;
                    this.CityAlias = odataObject.CityAlias;
                    this.District = odataObject.District;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ZipCodeInfoClass;
            }());
            Entities.ZipCodeInfoClass = ZipCodeInfoClass;
            var ReasonCodeRequirementClass = (function () {
                function ReasonCodeRequirementClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ReasonCodeId = odataObject.ReasonCodeId;
                    this.SourceId = odataObject.SourceId;
                    this.TableRefTypeValue = odataObject.TableRefTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReasonCodeRequirementClass;
            }());
            Entities.ReasonCodeRequirementClass = ReasonCodeRequirementClass;
            var QueryResultSettingsClass = (function () {
                function QueryResultSettingsClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.Paging == null) {
                        this.Paging = undefined;
                    }
                    else if (odataObject.Paging['@odata.type'] == null) {
                        this.Paging = new PagingInfoClass(odataObject.Paging);
                    }
                    else {
                        var className = odataObject.Paging['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Paging = new Commerce.Proxy.Entities[className](odataObject.Paging);
                        }
                    }
                    if (odataObject.Sorting == null) {
                        this.Sorting = undefined;
                    }
                    else if (odataObject.Sorting['@odata.type'] == null) {
                        this.Sorting = new SortingInfoClass(odataObject.Sorting);
                    }
                    else {
                        var className = odataObject.Sorting['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Sorting = new Commerce.Proxy.Entities[className](odataObject.Sorting);
                        }
                    }
                }
                return QueryResultSettingsClass;
            }());
            Entities.QueryResultSettingsClass = QueryResultSettingsClass;
            var SortingInfoClass = (function () {
                function SortingInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Columns = undefined;
                    if (odataObject.Columns) {
                        this.Columns = [];
                        for (var i = 0; i < odataObject.Columns.length; i++) {
                            if (odataObject.Columns[i] != null) {
                                if (odataObject.Columns[i]['@odata.type'] != null) {
                                    var className = odataObject.Columns[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Columns[i] = new Commerce.Proxy.Entities[className](odataObject.Columns[i]);
                                    }
                                }
                                else {
                                    this.Columns[i] = new SortColumnClass(odataObject.Columns[i]);
                                }
                            }
                            else {
                                this.Columns[i] = undefined;
                            }
                        }
                    }
                }
                return SortingInfoClass;
            }());
            Entities.SortingInfoClass = SortingInfoClass;
            var SortColumnClass = (function () {
                function SortColumnClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ColumnName = odataObject.ColumnName;
                    this.IsDescending = odataObject.IsDescending;
                }
                return SortColumnClass;
            }());
            Entities.SortColumnClass = SortColumnClass;
            var PagingInfoClass = (function () {
                function PagingInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Top = (odataObject.Top != null) ? parseInt(odataObject.Top, 10) : undefined;
                    this.Skip = (odataObject.Skip != null) ? parseInt(odataObject.Skip, 10) : undefined;
                }
                return PagingInfoClass;
            }());
            Entities.PagingInfoClass = PagingInfoClass;
            var ProductPropertyTranslationClass = (function () {
                function ProductPropertyTranslationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TranslationLanguage = odataObject.TranslationLanguage;
                    this.TranslatedProperties = undefined;
                    if (odataObject.TranslatedProperties) {
                        this.TranslatedProperties = [];
                        for (var i = 0; i < odataObject.TranslatedProperties.length; i++) {
                            if (odataObject.TranslatedProperties[i] != null) {
                                if (odataObject.TranslatedProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.TranslatedProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TranslatedProperties[i] = new Commerce.Proxy.Entities[className](odataObject.TranslatedProperties[i]);
                                    }
                                }
                                else {
                                    this.TranslatedProperties[i] = new ProductPropertyClass(odataObject.TranslatedProperties[i]);
                                }
                            }
                            else {
                                this.TranslatedProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductPropertyTranslationClass;
            }());
            Entities.ProductPropertyTranslationClass = ProductPropertyTranslationClass;
            var NumberSequenceSeedDataClass = (function () {
                function NumberSequenceSeedDataClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.DataValue = (odataObject.DataValue != null) ? parseInt(odataObject.DataValue, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return NumberSequenceSeedDataClass;
            }());
            Entities.NumberSequenceSeedDataClass = NumberSequenceSeedDataClass;
            var DeviceActivationResultClass = (function () {
                function DeviceActivationResultClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.Device == null) {
                        this.Device = undefined;
                    }
                    else if (odataObject.Device['@odata.type'] == null) {
                        this.Device = new DeviceClass(odataObject.Device);
                    }
                    else {
                        var className = odataObject.Device['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Device = new Commerce.Proxy.Entities[className](odataObject.Device);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DeviceActivationResultClass;
            }());
            Entities.DeviceActivationResultClass = DeviceActivationResultClass;
            var PurchaseHistoryClass = (function () {
                function PurchaseHistoryClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DatePurchased = (odataObject.DatePurchased instanceof Date) ? odataObject.DatePurchased
                        : (odataObject.DatePurchased != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DatePurchased, "Edm.DateTimeOffset", false) : undefined;
                    this.ImageUrl = odataObject.ImageUrl;
                    this.ItemId = odataObject.ItemId;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.ProductName = odataObject.ProductName;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.SalesId = odataObject.SalesId;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PurchaseHistoryClass;
            }());
            Entities.PurchaseHistoryClass = PurchaseHistoryClass;
            var NodeClass = (function () {
                function NodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ParentScopeId = odataObject.ParentScopeId;
                    this.ParentSequence = odataObject.ParentSequence;
                    this.Id = odataObject.Id;
                    this.Sequence = odataObject.Sequence;
                    this.Description = odataObject.Description;
                    this.ScreenshotUri = odataObject.ScreenshotUri;
                }
                return NodeClass;
            }());
            Entities.NodeClass = NodeClass;
            var LineClass = (function () {
                function LineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChildrenIds = undefined;
                    if (odataObject.ChildrenIds) {
                        this.ChildrenIds = [];
                        for (var i = 0; i < odataObject.ChildrenIds.length; i++) {
                            if (odataObject.ChildrenIds[i] != null) {
                                this.ChildrenIds[i] = parseInt(odataObject.ChildrenIds[i], 10);
                            }
                            else {
                                this.ChildrenIds[i] = undefined;
                            }
                        }
                    }
                    this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.IsLinked = odataObject.IsLinked;
                    this.LineMetadataId = (odataObject.LineMetadataId != null) ? parseInt(odataObject.LineMetadataId, 10) : undefined;
                    this.Artifacts = undefined;
                    if (odataObject.Artifacts) {
                        this.Artifacts = [];
                        for (var i = 0; i < odataObject.Artifacts.length; i++) {
                            if (odataObject.Artifacts[i] != null) {
                                if (odataObject.Artifacts[i]['@odata.type'] != null) {
                                    var className = odataObject.Artifacts[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Artifacts[i] = new Commerce.Proxy.Entities[className](odataObject.Artifacts[i]);
                                    }
                                }
                                else {
                                    this.Artifacts[i] = new ArtifactSummaryClass(odataObject.Artifacts[i]);
                                }
                            }
                            else {
                                this.Artifacts[i] = undefined;
                            }
                        }
                    }
                    this.MetadataPropertyValues = undefined;
                    if (odataObject.MetadataPropertyValues) {
                        this.MetadataPropertyValues = [];
                        for (var i = 0; i < odataObject.MetadataPropertyValues.length; i++) {
                            if (odataObject.MetadataPropertyValues[i] != null) {
                                if (odataObject.MetadataPropertyValues[i]['@odata.type'] != null) {
                                    var className = odataObject.MetadataPropertyValues[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.MetadataPropertyValues[i] = new Commerce.Proxy.Entities[className](odataObject.MetadataPropertyValues[i]);
                                    }
                                }
                                else {
                                    this.MetadataPropertyValues[i] = new MetadataPropertyValueClass(odataObject.MetadataPropertyValues[i]);
                                }
                            }
                            else {
                                this.MetadataPropertyValues[i] = undefined;
                            }
                        }
                    }
                }
                return LineClass;
            }());
            Entities.LineClass = LineClass;
            var ScopeClass = (function (_super) {
                __extends(ScopeClass, _super);
                function ScopeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Name = odataObject.Name;
                    _this.ScopeTypeValue = odataObject.ScopeTypeValue;
                    _this.Children = undefined;
                    if (odataObject.Children) {
                        _this.Children = [];
                        for (var i = 0; i < odataObject.Children.length; i++) {
                            if (odataObject.Children[i] != null) {
                                if (odataObject.Children[i]['@odata.type'] != null) {
                                    var className = odataObject.Children[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.Children[i] = new Commerce.Proxy.Entities[className](odataObject.Children[i]);
                                    }
                                }
                                else {
                                    _this.Children[i] = new NodeClass(odataObject.Children[i]);
                                }
                            }
                            else {
                                _this.Children[i] = undefined;
                            }
                        }
                    }
                    _this.ActiveCount = odataObject.ActiveCount;
                    _this.IsForm = odataObject.IsForm;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.Scope";
                    return _this;
                }
                return ScopeClass;
            }(NodeClass));
            Entities.ScopeClass = ScopeClass;
            var FrameworkClass = (function () {
                function FrameworkClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Lines = undefined;
                    if (odataObject.Lines) {
                        this.Lines = [];
                        for (var i = 0; i < odataObject.Lines.length; i++) {
                            if (odataObject.Lines[i] != null) {
                                if (odataObject.Lines[i]['@odata.type'] != null) {
                                    var className = odataObject.Lines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Lines[i] = new Commerce.Proxy.Entities[className](odataObject.Lines[i]);
                                    }
                                }
                                else {
                                    this.Lines[i] = new LineClass(odataObject.Lines[i]);
                                }
                            }
                            else {
                                this.Lines[i] = undefined;
                            }
                        }
                    }
                    this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.Access = odataObject.Access;
                    this.Hierarchy = undefined;
                    if (odataObject.Hierarchy) {
                        this.Hierarchy = [];
                        for (var i = 0; i < odataObject.Hierarchy.length; i++) {
                            if (odataObject.Hierarchy[i] != null) {
                                if (odataObject.Hierarchy[i]['@odata.type'] != null) {
                                    var className = odataObject.Hierarchy[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Hierarchy[i] = new Commerce.Proxy.Entities[className](odataObject.Hierarchy[i]);
                                    }
                                }
                                else {
                                    this.Hierarchy[i] = new LineClass(odataObject.Hierarchy[i]);
                                }
                            }
                            else {
                                this.Hierarchy[i] = undefined;
                            }
                        }
                    }
                    this.Publisher = odataObject.Publisher;
                }
                return FrameworkClass;
            }());
            Entities.FrameworkClass = FrameworkClass;
            var UserActionClass = (function (_super) {
                __extends(UserActionClass, _super);
                function UserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.SystemGenerated = odataObject.SystemGenerated;
                    _this.GlobalId = odataObject.GlobalId;
                    _this.Annotations = undefined;
                    if (odataObject.Annotations) {
                        _this.Annotations = [];
                        for (var i = 0; i < odataObject.Annotations.length; i++) {
                            if (odataObject.Annotations[i] != null) {
                                if (odataObject.Annotations[i]['@odata.type'] != null) {
                                    var className = odataObject.Annotations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.Annotations[i] = new Commerce.Proxy.Entities[className](odataObject.Annotations[i]);
                                    }
                                }
                                else {
                                    _this.Annotations[i] = new AnnotationClass(odataObject.Annotations[i]);
                                }
                            }
                            else {
                                _this.Annotations[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.UserAction";
                    return _this;
                }
                return UserActionClass;
            }(NodeClass));
            Entities.UserActionClass = UserActionClass;
            var TaskUserActionClass = (function (_super) {
                __extends(TaskUserActionClass, _super);
                function TaskUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.UserActionTypeValue = odataObject.UserActionTypeValue;
                    _this.Name = odataObject.Name;
                    _this.Comment = odataObject.Comment;
                    _this.TaskId = odataObject.TaskId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaskUserAction";
                    return _this;
                }
                return TaskUserActionClass;
            }(UserActionClass));
            Entities.TaskUserActionClass = TaskUserActionClass;
            var FormUserActionClass = (function (_super) {
                __extends(FormUserActionClass, _super);
                function FormUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.FormId = odataObject.FormId;
                    _this.ControlLabel = odataObject.ControlLabel;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FormUserAction";
                    return _this;
                }
                return FormUserActionClass;
            }(UserActionClass));
            Entities.FormUserActionClass = FormUserActionClass;
            var CommandUserActionClass = (function (_super) {
                __extends(CommandUserActionClass, _super);
                function CommandUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.ReturnTypeValue = odataObject.ReturnTypeValue;
                    _this.CommandName = odataObject.CommandName;
                    _this.ControlName = odataObject.ControlName;
                    _this.ControlType = odataObject.ControlType;
                    _this.Arguments = undefined;
                    if (odataObject.Arguments) {
                        _this.Arguments = [];
                        for (var i = 0; i < odataObject.Arguments.length; i++) {
                            if (odataObject.Arguments[i] != null) {
                                if (odataObject.Arguments[i]['@odata.type'] != null) {
                                    var className = odataObject.Arguments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.Arguments[i] = new Commerce.Proxy.Entities[className](odataObject.Arguments[i]);
                                    }
                                }
                                else {
                                    _this.Arguments[i] = new CommandArgumentClass(odataObject.Arguments[i]);
                                }
                            }
                            else {
                                _this.Arguments[i] = undefined;
                            }
                        }
                    }
                    _this.LabelId = odataObject.LabelId;
                    _this.ReturnValue = odataObject.ReturnValue;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.CommandUserAction";
                    return _this;
                }
                return CommandUserActionClass;
            }(FormUserActionClass));
            Entities.CommandUserActionClass = CommandUserActionClass;
            var AnnotationClass = (function () {
                function AnnotationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Description = odataObject.Description;
                }
                return AnnotationClass;
            }());
            Entities.AnnotationClass = AnnotationClass;
            var RecordingClass = (function () {
                function RecordingClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Scopes = undefined;
                    if (odataObject.Scopes) {
                        this.Scopes = [];
                        for (var i = 0; i < odataObject.Scopes.length; i++) {
                            if (odataObject.Scopes[i] != null) {
                                if (odataObject.Scopes[i]['@odata.type'] != null) {
                                    var className = odataObject.Scopes[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Scopes[i] = new Commerce.Proxy.Entities[className](odataObject.Scopes[i]);
                                    }
                                }
                                else {
                                    this.Scopes[i] = new ScopeClass(odataObject.Scopes[i]);
                                }
                            }
                            else {
                                this.Scopes[i] = undefined;
                            }
                        }
                    }
                    this.FormContextEntries = undefined;
                    if (odataObject.FormContextEntries) {
                        this.FormContextEntries = [];
                        for (var i = 0; i < odataObject.FormContextEntries.length; i++) {
                            if (odataObject.FormContextEntries[i] != null) {
                                if (odataObject.FormContextEntries[i]['@odata.type'] != null) {
                                    var className = odataObject.FormContextEntries[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.FormContextEntries[i] = new Commerce.Proxy.Entities[className](odataObject.FormContextEntries[i]);
                                    }
                                }
                                else {
                                    this.FormContextEntries[i] = new FormContextDictionaryEntryClass(odataObject.FormContextEntries[i]);
                                }
                            }
                            else {
                                this.FormContextEntries[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.RootScope == null) {
                        this.RootScope = undefined;
                    }
                    else if (odataObject.RootScope['@odata.type'] == null) {
                        this.RootScope = new ScopeClass(odataObject.RootScope);
                    }
                    else {
                        var className = odataObject.RootScope['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.RootScope = new Commerce.Proxy.Entities[className](odataObject.RootScope);
                        }
                    }
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                }
                return RecordingClass;
            }());
            Entities.RecordingClass = RecordingClass;
            var FormContextDictionaryEntryClass = (function () {
                function FormContextDictionaryEntryClass(odataObject) {
                    odataObject = odataObject || {};
                    this.FormId = odataObject.FormId;
                    if (odataObject.FormContext == null) {
                        this.FormContext = undefined;
                    }
                    else if (odataObject.FormContext['@odata.type'] == null) {
                        this.FormContext = new FormContextClass(odataObject.FormContext);
                    }
                    else {
                        var className = odataObject.FormContext['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.FormContext = new Commerce.Proxy.Entities[className](odataObject.FormContext);
                        }
                    }
                }
                return FormContextDictionaryEntryClass;
            }());
            Entities.FormContextDictionaryEntryClass = FormContextDictionaryEntryClass;
            var ProductVariantResolutionContextClass = (function () {
                function ProductVariantResolutionContextClass(odataObject) {
                    odataObject = odataObject || {};
                }
                return ProductVariantResolutionContextClass;
            }());
            Entities.ProductVariantResolutionContextClass = ProductVariantResolutionContextClass;
            var ProductVariantResolutionOnKitSelectionContextClass = (function (_super) {
                __extends(ProductVariantResolutionOnKitSelectionContextClass, _super);
                function ProductVariantResolutionOnKitSelectionContextClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.SelectedComponents = undefined;
                    if (odataObject.SelectedComponents) {
                        _this.SelectedComponents = [];
                        for (var i = 0; i < odataObject.SelectedComponents.length; i++) {
                            if (odataObject.SelectedComponents[i] != null) {
                                if (odataObject.SelectedComponents[i]['@odata.type'] != null) {
                                    var className = odataObject.SelectedComponents[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.SelectedComponents[i] = new Commerce.Proxy.Entities[className](odataObject.SelectedComponents[i]);
                                    }
                                }
                                else {
                                    _this.SelectedComponents[i] = new ComponentInSlotRelationClass(odataObject.SelectedComponents[i]);
                                }
                            }
                            else {
                                _this.SelectedComponents[i] = undefined;
                            }
                        }
                    }
                    _this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductVariantResolutionOnKitSelectionContext";
                    return _this;
                }
                return ProductVariantResolutionOnKitSelectionContextClass;
            }(ProductVariantResolutionContextClass));
            Entities.ProductVariantResolutionOnKitSelectionContextClass = ProductVariantResolutionOnKitSelectionContextClass;
            var WarehouseLocationClass = (function () {
                function WarehouseLocationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LocationId = odataObject.LocationId;
                    this.IsLicensePlateControlled = odataObject.IsLicensePlateControlled;
                    this.ProfileId = odataObject.ProfileId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return WarehouseLocationClass;
            }());
            Entities.WarehouseLocationClass = WarehouseLocationClass;
            var FiscalTransactionClass = (function () {
                function FiscalTransactionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.TransactionId = odataObject.TransactionId;
                    this.TransDateTime = (odataObject.TransDateTime instanceof Date) ? odataObject.TransDateTime
                        : (odataObject.TransDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TransDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.RegisterResponse = odataObject.RegisterResponse;
                    this.ReceiptCopy = odataObject.ReceiptCopy;
                    this.RecordGUID = odataObject.RecordGUID;
                    this.RegisterStoreId = odataObject.RegisterStoreId;
                    this.RegisterTerminalId = odataObject.RegisterTerminalId;
                    this.StaffId = odataObject.StaffId;
                    this.RegistrationStatusValue = odataObject.RegistrationStatusValue;
                    this.RegistrationProcessId = odataObject.RegistrationProcessId;
                    this.ConnectorGroup = odataObject.ConnectorGroup;
                    this.ConnectorName = odataObject.ConnectorName;
                    this.ConnectorFunctionalityProfileId = odataObject.ConnectorFunctionalityProfileId;
                    this.RegisterInfo = odataObject.RegisterInfo;
                    this.TenderLineAdjustments = undefined;
                    if (odataObject.TenderLineAdjustments) {
                        this.TenderLineAdjustments = [];
                        for (var i = 0; i < odataObject.TenderLineAdjustments.length; i++) {
                            if (odataObject.TenderLineAdjustments[i] != null) {
                                if (odataObject.TenderLineAdjustments[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderLineAdjustments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TenderLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLineAdjustments[i]);
                                    }
                                }
                                else {
                                    this.TenderLineAdjustments[i] = new FiscalTransactionTenderLineAdjustmentClass(odataObject.TenderLineAdjustments[i]);
                                }
                            }
                            else {
                                this.TenderLineAdjustments[i] = undefined;
                            }
                        }
                    }
                    this.SalesLineAdjustments = undefined;
                    if (odataObject.SalesLineAdjustments) {
                        this.SalesLineAdjustments = [];
                        for (var i = 0; i < odataObject.SalesLineAdjustments.length; i++) {
                            if (odataObject.SalesLineAdjustments[i] != null) {
                                if (odataObject.SalesLineAdjustments[i]['@odata.type'] != null) {
                                    var className = odataObject.SalesLineAdjustments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SalesLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLineAdjustments[i]);
                                    }
                                }
                                else {
                                    this.SalesLineAdjustments[i] = new FiscalTransactionSalesLineAdjustmentClass(odataObject.SalesLineAdjustments[i]);
                                }
                            }
                            else {
                                this.SalesLineAdjustments[i] = undefined;
                            }
                        }
                    }
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalTransactionClass;
            }());
            Entities.FiscalTransactionClass = FiscalTransactionClass;
            var FulfillmentLineClass = (function () {
                function FulfillmentLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesId = odataObject.SalesId;
                    this.SalesPersonStoreId = odataObject.SalesPersonStoreId;
                    this.SalesPersonId = odataObject.SalesPersonId;
                    this.SalesPersonFirstName = odataObject.SalesPersonFirstName;
                    this.SalesPersonLastName = odataObject.SalesPersonLastName;
                    this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerName = odataObject.CustomerName;
                    this.EmailAddress = odataObject.EmailAddress;
                    this.DeliveryModeCode = odataObject.DeliveryModeCode;
                    this.DocumentStatusValue = odataObject.DocumentStatusValue;
                    if (odataObject.FulfillmentDeliveryType == null) {
                        this.FulfillmentDeliveryType = undefined;
                    }
                    else if (odataObject.FulfillmentDeliveryType['@odata.type'] == null) {
                        this.FulfillmentDeliveryType = new FulfillmentLineDeliveryTypeClass(odataObject.FulfillmentDeliveryType);
                    }
                    else {
                        var className = odataObject.FulfillmentDeliveryType['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.FulfillmentDeliveryType = new Commerce.Proxy.Entities[className](odataObject.FulfillmentDeliveryType);
                        }
                    }
                    this.DeliveryTypeValue = odataObject.DeliveryTypeValue;
                    this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
                    this.QuantityPicked = (odataObject.QuantityPicked != null) ? parseFloat(odataObject.QuantityPicked) : undefined;
                    this.QuantityPacked = (odataObject.QuantityPacked != null) ? parseFloat(odataObject.QuantityPacked) : undefined;
                    this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
                    this.StoreInventoryTotalQuantity = (odataObject.StoreInventoryTotalQuantity != null) ? parseFloat(odataObject.StoreInventoryTotalQuantity) : undefined;
                    this.StoreInventoryReservedQuantity = (odataObject.StoreInventoryReservedQuantity != null) ? parseFloat(odataObject.StoreInventoryReservedQuantity) : undefined;
                    this.StoreInventoryOrderedQuantity = (odataObject.StoreInventoryOrderedQuantity != null) ? parseFloat(odataObject.StoreInventoryOrderedQuantity) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.ProductVariant = odataObject.ProductVariant;
                    this.ItemName = odataObject.ItemName;
                    if (odataObject.FulfillmentStatus == null) {
                        this.FulfillmentStatus = undefined;
                    }
                    else if (odataObject.FulfillmentStatus['@odata.type'] == null) {
                        this.FulfillmentStatus = new FulfillmentLineStatusClass(odataObject.FulfillmentStatus);
                    }
                    else {
                        var className = odataObject.FulfillmentStatus['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.FulfillmentStatus = new Commerce.Proxy.Entities[className](odataObject.FulfillmentStatus);
                        }
                    }
                    this.FulfillmentStatusValue = odataObject.FulfillmentStatusValue;
                    this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
                    this.RequestedShipDate = (odataObject.RequestedShipDate instanceof Date) ? odataObject.RequestedShipDate
                        : (odataObject.RequestedShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedShipDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
                        : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequestedReceiptDate = (odataObject.RequestedReceiptDate instanceof Date) ? odataObject.RequestedReceiptDate
                        : (odataObject.RequestedReceiptDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptDate, "Edm.DateTimeOffset", false) : undefined;
                    this.CreatedDate = (odataObject.CreatedDate instanceof Date) ? odataObject.CreatedDate
                        : (odataObject.CreatedDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDate, "Edm.DateTimeOffset", false) : undefined;
                    this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
                    this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FulfillmentLineClass;
            }());
            Entities.FulfillmentLineClass = FulfillmentLineClass;
            var FulfillmentLineSearchCriteriaClass = (function () {
                function FulfillmentLineSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CustomerId = odataObject.CustomerId;
                    this.CustomerName = odataObject.CustomerName;
                    this.EmailAddress = odataObject.EmailAddress;
                    this.SalesId = odataObject.SalesId;
                    this.OrderCreatedStartDate = (odataObject.OrderCreatedStartDate instanceof Date) ? odataObject.OrderCreatedStartDate
                        : (odataObject.OrderCreatedStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OrderCreatedStartDate, "Edm.DateTimeOffset", false) : undefined;
                    this.OrderCreatedEndDate = (odataObject.OrderCreatedEndDate instanceof Date) ? odataObject.OrderCreatedEndDate
                        : (odataObject.OrderCreatedEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OrderCreatedEndDate, "Edm.DateTimeOffset", false) : undefined;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.StoreId = odataObject.StoreId;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.RequestedReceiptStartDate = (odataObject.RequestedReceiptStartDate instanceof Date) ? odataObject.RequestedReceiptStartDate
                        : (odataObject.RequestedReceiptStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptStartDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequestedReceiptEndDate = (odataObject.RequestedReceiptEndDate instanceof Date) ? odataObject.RequestedReceiptEndDate
                        : (odataObject.RequestedReceiptEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptEndDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequestedDeliveryStartDate = (odataObject.RequestedDeliveryStartDate instanceof Date) ? odataObject.RequestedDeliveryStartDate
                        : (odataObject.RequestedDeliveryStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryStartDate, "Edm.DateTimeOffset", false) : undefined;
                    this.RequestedDeliveryEndDate = (odataObject.RequestedDeliveryEndDate instanceof Date) ? odataObject.RequestedDeliveryEndDate
                        : (odataObject.RequestedDeliveryEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryEndDate, "Edm.DateTimeOffset", false) : undefined;
                    this.FulfillmentStatusValues = undefined;
                    if (odataObject.FulfillmentStatusValues) {
                        this.FulfillmentStatusValues = [];
                        for (var i = 0; i < odataObject.FulfillmentStatusValues.length; i++) {
                            if (odataObject.FulfillmentStatusValues[i] != null) {
                                this.FulfillmentStatusValues[i] = odataObject.FulfillmentStatusValues[i];
                            }
                            else {
                                this.FulfillmentStatusValues[i] = undefined;
                            }
                        }
                    }
                    this.DeliveryModeCode = odataObject.DeliveryModeCode;
                    this.WarehouseId = odataObject.WarehouseId;
                    this.DeliveryTypeValue = odataObject.DeliveryTypeValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FulfillmentLineSearchCriteriaClass;
            }());
            Entities.FulfillmentLineSearchCriteriaClass = FulfillmentLineSearchCriteriaClass;
            var CommentClass = (function () {
                function CommentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.AuthorStaffId = odataObject.AuthorStaffId;
                    this.AuthorName = odataObject.AuthorName;
                    this.Text = odataObject.Text;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CommentClass;
            }());
            Entities.CommentClass = CommentClass;
            var AddressPurposeClass = (function () {
                function AddressPurposeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.AddressType = odataObject.AddressType;
                    this.Name = odataObject.Name;
                    this.Description = odataObject.Description;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AddressPurposeClass;
            }());
            Entities.AddressPurposeClass = AddressPurposeClass;
            var MediaLocationClass = (function () {
                function MediaLocationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Uri = odataObject.Uri;
                    this.AltText = odataObject.AltText;
                    this.IsDefault = odataObject.IsDefault;
                    this.IsSelfHosted = odataObject.IsSelfHosted;
                    this.Priority = odataObject.Priority;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return MediaLocationClass;
            }());
            Entities.MediaLocationClass = MediaLocationClass;
            var EmployeeActivityClass = (function () {
                function EmployeeActivityClass(odataObject) {
                    odataObject = odataObject || {};
                    this.StaffId = odataObject.StaffId;
                    this.StaffName = odataObject.StaffName;
                    this.Activity = odataObject.Activity;
                    this.ActivityDateTimeOffset = (odataObject.ActivityDateTimeOffset instanceof Date) ? odataObject.ActivityDateTimeOffset
                        : (odataObject.ActivityDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ActivityDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.EmployeeActivityTypeValue = odataObject.EmployeeActivityTypeValue;
                    this.BreakCategory = odataObject.BreakCategory;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return EmployeeActivityClass;
            }());
            Entities.EmployeeActivityClass = EmployeeActivityClass;
            var TokenizedPaymentCardClass = (function () {
                function TokenizedPaymentCardClass(odataObject) {
                    odataObject = odataObject || {};
                    this.IsSwipe = odataObject.IsSwipe;
                    this.TenderType = odataObject.TenderType;
                    if (odataObject.CardTokenInfo == null) {
                        this.CardTokenInfo = undefined;
                    }
                    else if (odataObject.CardTokenInfo['@odata.type'] == null) {
                        this.CardTokenInfo = new CardTokenInfoClass(odataObject.CardTokenInfo);
                    }
                    else {
                        var className = odataObject.CardTokenInfo['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.CardTokenInfo = new Commerce.Proxy.Entities[className](odataObject.CardTokenInfo);
                        }
                    }
                    this.Phone = odataObject.Phone;
                    this.Country = odataObject.Country;
                    this.House = odataObject.House;
                    this.Address1 = odataObject.Address1;
                    this.Address2 = odataObject.Address2;
                    this.City = odataObject.City;
                    this.State = odataObject.State;
                    this.Zip = odataObject.Zip;
                    this.NameOnCard = odataObject.NameOnCard;
                    this.CardTypeId = odataObject.CardTypeId;
                    this.ExpirationMonth = odataObject.ExpirationMonth;
                    this.ExpirationYear = odataObject.ExpirationYear;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TokenizedPaymentCardClass;
            }());
            Entities.TokenizedPaymentCardClass = TokenizedPaymentCardClass;
            var LineShippingAddressClass = (function () {
                function LineShippingAddressClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    if (odataObject.ShippingAddress == null) {
                        this.ShippingAddress = undefined;
                    }
                    else if (odataObject.ShippingAddress['@odata.type'] == null) {
                        this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
                    }
                    else {
                        var className = odataObject.ShippingAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress);
                        }
                    }
                }
                return LineShippingAddressClass;
            }());
            Entities.LineShippingAddressClass = LineShippingAddressClass;
            var CartDeliveryPreferencesClass = (function () {
                function CartDeliveryPreferencesClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HeaderDeliveryPreferenceTypeValues = undefined;
                    if (odataObject.HeaderDeliveryPreferenceTypeValues) {
                        this.HeaderDeliveryPreferenceTypeValues = [];
                        for (var i = 0; i < odataObject.HeaderDeliveryPreferenceTypeValues.length; i++) {
                            if (odataObject.HeaderDeliveryPreferenceTypeValues[i] != null) {
                                this.HeaderDeliveryPreferenceTypeValues[i] = odataObject.HeaderDeliveryPreferenceTypeValues[i];
                            }
                            else {
                                this.HeaderDeliveryPreferenceTypeValues[i] = undefined;
                            }
                        }
                    }
                    this.CartLineDeliveryPreferences = undefined;
                    if (odataObject.CartLineDeliveryPreferences) {
                        this.CartLineDeliveryPreferences = [];
                        for (var i = 0; i < odataObject.CartLineDeliveryPreferences.length; i++) {
                            if (odataObject.CartLineDeliveryPreferences[i] != null) {
                                if (odataObject.CartLineDeliveryPreferences[i]['@odata.type'] != null) {
                                    var className = odataObject.CartLineDeliveryPreferences[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CartLineDeliveryPreferences[i] = new Commerce.Proxy.Entities[className](odataObject.CartLineDeliveryPreferences[i]);
                                    }
                                }
                                else {
                                    this.CartLineDeliveryPreferences[i] = new CartLineDeliveryPreferenceClass(odataObject.CartLineDeliveryPreferences[i]);
                                }
                            }
                            else {
                                this.CartLineDeliveryPreferences[i] = undefined;
                            }
                        }
                    }
                }
                return CartDeliveryPreferencesClass;
            }());
            Entities.CartDeliveryPreferencesClass = CartDeliveryPreferencesClass;
            var LineDeliverySpecificationClass = (function () {
                function LineDeliverySpecificationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineId = odataObject.LineId;
                    if (odataObject.DeliverySpecification == null) {
                        this.DeliverySpecification = undefined;
                    }
                    else if (odataObject.DeliverySpecification['@odata.type'] == null) {
                        this.DeliverySpecification = new DeliverySpecificationClass(odataObject.DeliverySpecification);
                    }
                    else {
                        var className = odataObject.DeliverySpecification['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DeliverySpecification = new Commerce.Proxy.Entities[className](odataObject.DeliverySpecification);
                        }
                    }
                }
                return LineDeliverySpecificationClass;
            }());
            Entities.LineDeliverySpecificationClass = LineDeliverySpecificationClass;
            var DeliverySpecificationClass = (function () {
                function DeliverySpecificationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.DeliveryModeId = odataObject.DeliveryModeId;
                    this.DeliveryPreferenceTypeValue = odataObject.DeliveryPreferenceTypeValue;
                    if (odataObject.DeliveryAddress == null) {
                        this.DeliveryAddress = undefined;
                    }
                    else if (odataObject.DeliveryAddress['@odata.type'] == null) {
                        this.DeliveryAddress = new AddressClass(odataObject.DeliveryAddress);
                    }
                    else {
                        var className = odataObject.DeliveryAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DeliveryAddress = new Commerce.Proxy.Entities[className](odataObject.DeliveryAddress);
                        }
                    }
                    this.PickUpStoreId = odataObject.PickUpStoreId;
                    this.ElectronicDeliveryEmailAddress = odataObject.ElectronicDeliveryEmailAddress;
                    this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
                }
                return DeliverySpecificationClass;
            }());
            Entities.DeliverySpecificationClass = DeliverySpecificationClass;
            var OrderSearchCriteriaClass = (function () {
                function OrderSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
                    this.CustomerName = odataObject.CustomerName;
                    this.EmailAddress = odataObject.EmailAddress;
                    this.SalesId = odataObject.SalesId;
                    this.ReceiptId = odataObject.ReceiptId;
                    this.OrderStatusValues = undefined;
                    if (odataObject.OrderStatusValues) {
                        this.OrderStatusValues = [];
                        for (var i = 0; i < odataObject.OrderStatusValues.length; i++) {
                            if (odataObject.OrderStatusValues[i] != null) {
                                this.OrderStatusValues[i] = odataObject.OrderStatusValues[i];
                            }
                            else {
                                this.OrderStatusValues[i] = undefined;
                            }
                        }
                    }
                    this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
                        : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
                        : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ChannelReferenceId = odataObject.ChannelReferenceId;
                    this.StoreId = odataObject.StoreId;
                    this.OrderType = odataObject.OrderType;
                    this.CustomFilters = undefined;
                    if (odataObject.CustomFilters) {
                        this.CustomFilters = [];
                        for (var i = 0; i < odataObject.CustomFilters.length; i++) {
                            if (odataObject.CustomFilters[i] != null) {
                                if (odataObject.CustomFilters[i]['@odata.type'] != null) {
                                    var className = odataObject.CustomFilters[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CustomFilters[i] = new Commerce.Proxy.Entities[className](odataObject.CustomFilters[i]);
                                    }
                                }
                                else {
                                    this.CustomFilters[i] = new SearchFilterClass(odataObject.CustomFilters[i]);
                                }
                            }
                            else {
                                this.CustomFilters[i] = undefined;
                            }
                        }
                    }
                }
                return OrderSearchCriteriaClass;
            }());
            Entities.OrderSearchCriteriaClass = OrderSearchCriteriaClass;
            var ReceiptRetrievalCriteriaClass = (function () {
                function ReceiptRetrievalCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.IsCopy = odataObject.IsCopy;
                    this.IsRemoteTransaction = odataObject.IsRemoteTransaction;
                    this.IsPreview = odataObject.IsPreview;
                    this.QueryBySalesId = odataObject.QueryBySalesId;
                    this.ReceiptTypeValue = odataObject.ReceiptTypeValue;
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    this.HardwareProfileId = odataObject.HardwareProfileId;
                }
                return ReceiptRetrievalCriteriaClass;
            }());
            Entities.ReceiptRetrievalCriteriaClass = ReceiptRetrievalCriteriaClass;
            var CartSearchCriteriaClass = (function () {
                function CartSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CartId = odataObject.CartId;
                    this.ExpectedCartVersion = (odataObject.ExpectedCartVersion != null) ? parseInt(odataObject.ExpectedCartVersion, 10) : undefined;
                    this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
                    this.IncludeAnonymous = odataObject.IncludeAnonymous;
                    this.SuspendedOnly = odataObject.SuspendedOnly;
                    this.CartTypeValue = odataObject.CartTypeValue;
                }
                return CartSearchCriteriaClass;
            }());
            Entities.CartSearchCriteriaClass = CartSearchCriteriaClass;
            var FulfillmentLineParameterClass = (function () {
                function FulfillmentLineParameterClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesId = odataObject.SalesId;
                    this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FulfillmentLineParameterClass;
            }());
            Entities.FulfillmentLineParameterClass = FulfillmentLineParameterClass;
            var ShipFulfillmentLineClass = (function (_super) {
                __extends(ShipFulfillmentLineClass, _super);
                function ShipFulfillmentLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ShipFulfillmentLine";
                    return _this;
                }
                return ShipFulfillmentLineClass;
            }(FulfillmentLineParameterClass));
            Entities.ShipFulfillmentLineClass = ShipFulfillmentLineClass;
            var RejectFulfillmentLineClass = (function (_super) {
                __extends(RejectFulfillmentLineClass, _super);
                function RejectFulfillmentLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.RejectedQuantity = (odataObject.RejectedQuantity != null) ? parseFloat(odataObject.RejectedQuantity) : undefined;
                    _this.InfoCodeId = odataObject.InfoCodeId;
                    _this.SubInfoCodeId = odataObject.SubInfoCodeId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.RejectFulfillmentLine";
                    return _this;
                }
                return RejectFulfillmentLineClass;
            }(FulfillmentLineParameterClass));
            Entities.RejectFulfillmentLineClass = RejectFulfillmentLineClass;
            var ReadChangedProductsSessionClass = (function () {
                function ReadChangedProductsSessionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.TotalNumberOfProducts = odataObject.TotalNumberOfProducts;
                    this.NumberOfProductsRead = odataObject.NumberOfProductsRead;
                    this.NumberOfProductsReadInCurrentPage = odataObject.NumberOfProductsReadInCurrentPage;
                    this.NextSynchronizationToken = odataObject.NextSynchronizationToken;
                    this.IsInitialSync = odataObject.IsInitialSync;
                }
                return ReadChangedProductsSessionClass;
            }());
            Entities.ReadChangedProductsSessionClass = ReadChangedProductsSessionClass;
            var DeletedListingsResultClass = (function () {
                function DeletedListingsResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HasMorePublishedListings = odataObject.HasMorePublishedListings;
                    this.DeletedListings = undefined;
                    if (odataObject.DeletedListings) {
                        this.DeletedListings = [];
                        for (var i = 0; i < odataObject.DeletedListings.length; i++) {
                            if (odataObject.DeletedListings[i] != null) {
                                if (odataObject.DeletedListings[i]['@odata.type'] != null) {
                                    var className = odataObject.DeletedListings[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DeletedListings[i] = new Commerce.Proxy.Entities[className](odataObject.DeletedListings[i]);
                                    }
                                }
                                else {
                                    this.DeletedListings[i] = new ListingIdentityClass(odataObject.DeletedListings[i]);
                                }
                            }
                            else {
                                this.DeletedListings[i] = undefined;
                            }
                        }
                    }
                }
                return DeletedListingsResultClass;
            }());
            Entities.DeletedListingsResultClass = DeletedListingsResultClass;
            var ListingPublishStatusClass = (function () {
                function ListingPublishStatusClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PublishStatusValue = odataObject.PublishStatusValue;
                    this.ListingModifiedDateTime = (odataObject.ListingModifiedDateTime instanceof Date) ? odataObject.ListingModifiedDateTime
                        : (odataObject.ListingModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ListingModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ChannelListingId = odataObject.ChannelListingId;
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.LanguageId = odataObject.LanguageId;
                    this.AppliedActionValue = odataObject.AppliedActionValue;
                    this.StatusMessage = odataObject.StatusMessage;
                    this.Tag = odataObject.Tag;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ListingPublishStatusClass;
            }());
            Entities.ListingPublishStatusClass = ListingPublishStatusClass;
            var OrgUnitLocationSearchCriteriaClass = (function () {
                function OrgUnitLocationSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrgUnitNumber = odataObject.OrgUnitNumber;
                    this.OrgUnitName = odataObject.OrgUnitName;
                }
                return OrgUnitLocationSearchCriteriaClass;
            }());
            Entities.OrgUnitLocationSearchCriteriaClass = OrgUnitLocationSearchCriteriaClass;
            var StoreHoursClass = (function () {
                function StoreHoursClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.RegularStoreHours == null) {
                        this.RegularStoreHours = undefined;
                    }
                    else if (odataObject.RegularStoreHours['@odata.type'] == null) {
                        this.RegularStoreHours = new RegularStoreHoursClass(odataObject.RegularStoreHours);
                    }
                    else {
                        var className = odataObject.RegularStoreHours['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.RegularStoreHours = new Commerce.Proxy.Entities[className](odataObject.RegularStoreHours);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return StoreHoursClass;
            }());
            Entities.StoreHoursClass = StoreHoursClass;
            var CartPromotionsClass = (function () {
                function CartPromotionsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HeaderPromotions = undefined;
                    if (odataObject.HeaderPromotions) {
                        this.HeaderPromotions = [];
                        for (var i = 0; i < odataObject.HeaderPromotions.length; i++) {
                            if (odataObject.HeaderPromotions[i] != null) {
                                this.HeaderPromotions[i] = odataObject.HeaderPromotions[i];
                            }
                            else {
                                this.HeaderPromotions[i] = undefined;
                            }
                        }
                    }
                    this.CartLinePromotions = undefined;
                    if (odataObject.CartLinePromotions) {
                        this.CartLinePromotions = [];
                        for (var i = 0; i < odataObject.CartLinePromotions.length; i++) {
                            if (odataObject.CartLinePromotions[i] != null) {
                                if (odataObject.CartLinePromotions[i]['@odata.type'] != null) {
                                    var className = odataObject.CartLinePromotions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CartLinePromotions[i] = new Commerce.Proxy.Entities[className](odataObject.CartLinePromotions[i]);
                                    }
                                }
                                else {
                                    this.CartLinePromotions[i] = new CartLinePromotionClass(odataObject.CartLinePromotions[i]);
                                }
                            }
                            else {
                                this.CartLinePromotions[i] = undefined;
                            }
                        }
                    }
                }
                return CartPromotionsClass;
            }());
            Entities.CartPromotionsClass = CartPromotionsClass;
            var ItemUnitClass = (function () {
                function ItemUnitClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.VariantInventoryDimensionId = odataObject.VariantInventoryDimensionId;
                    this.Product = (odataObject.Product != null) ? parseInt(odataObject.Product, 10) : undefined;
                    this.DistinctProductVariant = (odataObject.DistinctProductVariant != null) ? parseInt(odataObject.DistinctProductVariant, 10) : undefined;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ItemUnitClass;
            }());
            Entities.ItemUnitClass = ItemUnitClass;
            var ProductAvailableQuantityClass = (function () {
                function ProductAvailableQuantityClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.AvailableQuantity = (odataObject.AvailableQuantity != null) ? parseFloat(odataObject.AvailableQuantity) : undefined;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ProductAvailableQuantityClass;
            }());
            Entities.ProductAvailableQuantityClass = ProductAvailableQuantityClass;
            var OrgUnitAvailabilitySearchCriteriaClass = (function () {
                function OrgUnitAvailabilitySearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OrgUnitName = odataObject.OrgUnitName;
                    this.OrgUnitNumber = odataObject.OrgUnitNumber;
                }
                return OrgUnitAvailabilitySearchCriteriaClass;
            }());
            Entities.OrgUnitAvailabilitySearchCriteriaClass = OrgUnitAvailabilitySearchCriteriaClass;
            var InvoiceSearchCriteriaClass = (function () {
                function InvoiceSearchCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CustomerId = odataObject.CustomerId;
                    this.InvoiceIds = undefined;
                    if (odataObject.InvoiceIds) {
                        this.InvoiceIds = [];
                        for (var i = 0; i < odataObject.InvoiceIds.length; i++) {
                            if (odataObject.InvoiceIds[i] != null) {
                                this.InvoiceIds[i] = odataObject.InvoiceIds[i];
                            }
                            else {
                                this.InvoiceIds[i] = undefined;
                            }
                        }
                    }
                    this.InvoiceTypeValues = undefined;
                    if (odataObject.InvoiceTypeValues) {
                        this.InvoiceTypeValues = [];
                        for (var i = 0; i < odataObject.InvoiceTypeValues.length; i++) {
                            if (odataObject.InvoiceTypeValues[i] != null) {
                                this.InvoiceTypeValues[i] = odataObject.InvoiceTypeValues[i];
                            }
                            else {
                                this.InvoiceTypeValues[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return InvoiceSearchCriteriaClass;
            }());
            Entities.InvoiceSearchCriteriaClass = InvoiceSearchCriteriaClass;
            var PickAndPackSalesLineParameterClass = (function () {
                function PickAndPackSalesLineParameterClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                }
                return PickAndPackSalesLineParameterClass;
            }());
            Entities.PickAndPackSalesLineParameterClass = PickAndPackSalesLineParameterClass;
            var ProjectionDomainClass = (function () {
                function ProjectionDomainClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                }
                return ProjectionDomainClass;
            }());
            Entities.ProjectionDomainClass = ProjectionDomainClass;
            var AffiliationLoyaltyTierClass = (function () {
                function AffiliationLoyaltyTierClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AffiliationId = (odataObject.AffiliationId != null) ? parseInt(odataObject.AffiliationId, 10) : undefined;
                    this.LoyaltyTierId = (odataObject.LoyaltyTierId != null) ? parseInt(odataObject.LoyaltyTierId, 10) : undefined;
                    this.AffiliationTypeValue = odataObject.AffiliationTypeValue;
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                    this.CustomerId = odataObject.CustomerId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AffiliationLoyaltyTierClass;
            }());
            Entities.AffiliationLoyaltyTierClass = AffiliationLoyaltyTierClass;
            var ChargeCodeClass = (function () {
                function ChargeCodeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Code = odataObject.Code;
                    this.ModuleTypeValue = odataObject.ModuleTypeValue;
                    this.Description = odataObject.Description;
                    this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ChargeCodeClass;
            }());
            Entities.ChargeCodeClass = ChargeCodeClass;
            var PaymentMerchantInformationClass = (function () {
                function PaymentMerchantInformationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PaymentConnectorPropertiesXml = odataObject.PaymentConnectorPropertiesXml;
                    this.MerchantPropertiesHashValue = odataObject.MerchantPropertiesHashValue;
                    this.ServiceAccountId = odataObject.ServiceAccountId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PaymentMerchantInformationClass;
            }());
            Entities.PaymentMerchantInformationClass = PaymentMerchantInformationClass;
            var StoreSafeClass = (function () {
                function StoreSafeClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SafeNumber = odataObject.SafeNumber;
                    this.Name = odataObject.Name;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.SafeBalance = (odataObject.SafeBalance != null) ? parseFloat(odataObject.SafeBalance) : undefined;
                    this.LastUpdatedTime = (odataObject.LastUpdatedTime instanceof Date) ? odataObject.LastUpdatedTime
                        : (odataObject.LastUpdatedTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastUpdatedTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return StoreSafeClass;
            }());
            Entities.StoreSafeClass = StoreSafeClass;
            var CreateHardwareStationTokenResultClass = (function () {
                function CreateHardwareStationTokenResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.HardwareStationToken = odataObject.HardwareStationToken;
                    this.PairingKey = odataObject.PairingKey;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CreateHardwareStationTokenResultClass;
            }());
            Entities.CreateHardwareStationTokenResultClass = CreateHardwareStationTokenResultClass;
            var ValidateHardwareStationTokenResultClass = (function () {
                function ValidateHardwareStationTokenResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PairingKey = odataObject.PairingKey;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ValidateHardwareStationTokenResultClass;
            }());
            Entities.ValidateHardwareStationTokenResultClass = ValidateHardwareStationTokenResultClass;
            var DownloadSessionClass = (function () {
                function DownloadSessionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
                    this.JobId = odataObject.JobId;
                    this.JobDescription = odataObject.JobDescription;
                    this.FileSize = (odataObject.FileSize != null) ? parseInt(odataObject.FileSize, 10) : undefined;
                    this.RowsAffected = odataObject.RowsAffected;
                    this.Checksum = odataObject.Checksum;
                    this.DateDownloaded = odataObject.DateDownloaded;
                    this.DateRequested = odataObject.DateRequested;
                    this.DataStoreName = odataObject.DataStoreName;
                    this.StatusValue = odataObject.StatusValue;
                    this.Message = odataObject.Message;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DownloadSessionClass;
            }());
            Entities.DownloadSessionClass = DownloadSessionClass;
            var LoyaltyRewardPointActivityClass = (function () {
                function LoyaltyRewardPointActivityClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ActivityDate = (odataObject.ActivityDate instanceof Date) ? odataObject.ActivityDate
                        : (odataObject.ActivityDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ActivityDate, "Edm.DateTimeOffset", false) : undefined;
                    this.LoyaltyRewardPointTimelineEntryType = odataObject.LoyaltyRewardPointTimelineEntryType;
                    this.ExtensibleLoyaltyRewardPointActivityEntryTypeValue = odataObject.ExtensibleLoyaltyRewardPointActivityEntryTypeValue;
                    this.LoyaltyPoints = (odataObject.LoyaltyPoints != null) ? parseFloat(odataObject.LoyaltyPoints) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyRewardPointActivityClass;
            }());
            Entities.LoyaltyRewardPointActivityClass = LoyaltyRewardPointActivityClass;
            var CurrencyRequestClass = (function () {
                function CurrencyRequestClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AmountToConvert = (odataObject.AmountToConvert != null) ? parseFloat(odataObject.AmountToConvert) : undefined;
                    this.CurrencyCode = odataObject.CurrencyCode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CurrencyRequestClass;
            }());
            Entities.CurrencyRequestClass = CurrencyRequestClass;
            var HardwareStationProfileClass = (function () {
                function HardwareStationProfileClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.HardwareStationId = odataObject.HardwareStationId;
                    this.HardwareStationTypeValue = odataObject.HardwareStationTypeValue;
                    this.HardwareProfileId = odataObject.HardwareProfileId;
                    this.HardwareStationName = odataObject.HardwareStationName;
                    this.HardwareStationDescription = odataObject.HardwareStationDescription;
                    this.HardwareStationUrl = odataObject.HardwareStationUrl;
                    this.HardwareStationHostName = odataObject.HardwareStationHostName;
                    this.HardwareStationEftTerminalId = odataObject.HardwareStationEftTerminalId;
                    if (odataObject.HardwareConfigurations == null) {
                        this.HardwareConfigurations = undefined;
                    }
                    else if (odataObject.HardwareConfigurations['@odata.type'] == null) {
                        this.HardwareConfigurations = new HardwareConfigurationsClass(odataObject.HardwareConfigurations);
                    }
                    else {
                        var className = odataObject.HardwareConfigurations['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.HardwareConfigurations = new Commerce.Proxy.Entities[className](odataObject.HardwareConfigurations);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareStationProfileClass;
            }());
            Entities.HardwareStationProfileClass = HardwareStationProfileClass;
            var NameValuePairClass = (function () {
                function NameValuePairClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.Value = odataObject.Value;
                }
                return NameValuePairClass;
            }());
            Entities.NameValuePairClass = NameValuePairClass;
            var LinkToExistingCustomerResultClass = (function () {
                function LinkToExistingCustomerResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.EmailAddress = odataObject.EmailAddress;
                    this.ExternalIdentityProvider = odataObject.ExternalIdentityProvider;
                    this.ExternalIdentityLinkRecordId = (odataObject.ExternalIdentityLinkRecordId != null) ? parseInt(odataObject.ExternalIdentityLinkRecordId, 10) : undefined;
                }
                return LinkToExistingCustomerResultClass;
            }());
            Entities.LinkToExistingCustomerResultClass = LinkToExistingCustomerResultClass;
            var OfflineSyncStatsLineClass = (function () {
                function OfflineSyncStatsLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.IsUploadJob = odataObject.IsUploadJob;
                    this.JobDescription = odataObject.JobDescription;
                    this.LastSyncDateTime = (odataObject.LastSyncDateTime instanceof Date) ? odataObject.LastSyncDateTime
                        : (odataObject.LastSyncDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastSyncDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Status = odataObject.Status;
                    this.FileSize = odataObject.FileSize;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return OfflineSyncStatsLineClass;
            }());
            Entities.OfflineSyncStatsLineClass = OfflineSyncStatsLineClass;
            var StorageAccessTokenClass = (function () {
                function StorageAccessTokenClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Url = odataObject.Url;
                    this.SasKey = odataObject.SasKey;
                }
                return StorageAccessTokenClass;
            }());
            Entities.StorageAccessTokenClass = StorageAccessTokenClass;
            var TaskGuidesSearchResultClass = (function () {
                function TaskGuidesSearchResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Lines = undefined;
                    if (odataObject.Lines) {
                        this.Lines = [];
                        for (var i = 0; i < odataObject.Lines.length; i++) {
                            if (odataObject.Lines[i] != null) {
                                if (odataObject.Lines[i]['@odata.type'] != null) {
                                    var className = odataObject.Lines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Lines[i] = new Commerce.Proxy.Entities[className](odataObject.Lines[i]);
                                    }
                                }
                                else {
                                    this.Lines[i] = new LineClass(odataObject.Lines[i]);
                                }
                            }
                            else {
                                this.Lines[i] = undefined;
                            }
                        }
                    }
                    this.FrameworkPublisherName = odataObject.FrameworkPublisherName;
                    this.FrameworkName = odataObject.FrameworkName;
                }
                return TaskGuidesSearchResultClass;
            }());
            Entities.TaskGuidesSearchResultClass = TaskGuidesSearchResultClass;
            var AuditEventClass = (function () {
                function AuditEventClass(odataObject) {
                    odataObject = odataObject || {};
                    this.EventId = (odataObject.EventId != null) ? parseInt(odataObject.EventId, 10) : undefined;
                    this.Channel = (odataObject.Channel != null) ? parseInt(odataObject.Channel, 10) : undefined;
                    this.Store = odataObject.Store;
                    this.Terminal = odataObject.Terminal;
                    this.UploadType = odataObject.UploadType;
                    this.EventType = odataObject.EventType;
                    this.DurationInMilliseconds = odataObject.DurationInMilliseconds;
                    this.Source = odataObject.Source;
                    this.EventMessage = odataObject.EventMessage;
                    this.LogLevel = odataObject.LogLevel;
                    this.Staff = odataObject.Staff;
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.ReferenceId = (odataObject.ReferenceId != null) ? parseInt(odataObject.ReferenceId, 10) : undefined;
                    this.RefChannel = (odataObject.RefChannel != null) ? parseInt(odataObject.RefChannel, 10) : undefined;
                    this.RefStore = odataObject.RefStore;
                    this.RefTerminal = odataObject.RefTerminal;
                    this.RefTransactionId = odataObject.RefTransactionId;
                    this.AuditEventTypeValue = odataObject.AuditEventTypeValue;
                    this.FiscalTransactions = undefined;
                    if (odataObject.FiscalTransactions) {
                        this.FiscalTransactions = [];
                        for (var i = 0; i < odataObject.FiscalTransactions.length; i++) {
                            if (odataObject.FiscalTransactions[i] != null) {
                                if (odataObject.FiscalTransactions[i]['@odata.type'] != null) {
                                    var className = odataObject.FiscalTransactions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.FiscalTransactions[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalTransactions[i]);
                                    }
                                }
                                else {
                                    this.FiscalTransactions[i] = new AuditEventFiscalTransactionClass(odataObject.FiscalTransactions[i]);
                                }
                            }
                            else {
                                this.FiscalTransactions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AuditEventClass;
            }());
            Entities.AuditEventClass = AuditEventClass;
            var ItemAvailabilityClass = (function () {
                function ItemAvailabilityClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.VariantInventoryDimensionId = odataObject.VariantInventoryDimensionId;
                    this.InventoryLocationId = odataObject.InventoryLocationId;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.AvailableQuantity = (odataObject.AvailableQuantity != null) ? parseFloat(odataObject.AvailableQuantity) : undefined;
                    this.OrderedSum = (odataObject.OrderedSum != null) ? parseFloat(odataObject.OrderedSum) : undefined;
                    this.PhysicalReserved = (odataObject.PhysicalReserved != null) ? parseFloat(odataObject.PhysicalReserved) : undefined;
                    this.UnitOfMeasure = odataObject.UnitOfMeasure;
                    this.ProductDimensions = undefined;
                    if (odataObject.ProductDimensions) {
                        this.ProductDimensions = [];
                        for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                            if (odataObject.ProductDimensions[i] != null) {
                                if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                                    var className = odataObject.ProductDimensions[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i]);
                                    }
                                }
                                else {
                                    this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                                }
                            }
                            else {
                                this.ProductDimensions[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ItemAvailabilityClass;
            }());
            Entities.ItemAvailabilityClass = ItemAvailabilityClass;
            var InventoryAvailableToPromiseClass = (function (_super) {
                __extends(InventoryAvailableToPromiseClass, _super);
                function InventoryAvailableToPromiseClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Date = odataObject.Date;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.InventoryAvailableToPromise";
                    return _this;
                }
                return InventoryAvailableToPromiseClass;
            }(ItemAvailabilityClass));
            Entities.InventoryAvailableToPromiseClass = InventoryAvailableToPromiseClass;
            var NotificationItemClass = (function () {
                function NotificationItemClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Action = odataObject.Action;
                    this.ActionName = odataObject.ActionName;
                    this.NotificationDetails = undefined;
                    if (odataObject.NotificationDetails) {
                        this.NotificationDetails = [];
                        for (var i = 0; i < odataObject.NotificationDetails.length; i++) {
                            if (odataObject.NotificationDetails[i] != null) {
                                if (odataObject.NotificationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.NotificationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.NotificationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.NotificationDetails[i]);
                                    }
                                }
                                else {
                                    this.NotificationDetails[i] = new NotificationDetailClass(odataObject.NotificationDetails[i]);
                                }
                            }
                            else {
                                this.NotificationDetails[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return NotificationItemClass;
            }());
            Entities.NotificationItemClass = NotificationItemClass;
            var FiscalIntegrationDocumentRetrievalCriteriaClass = (function () {
                function FiscalIntegrationDocumentRetrievalCriteriaClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionId = odataObject.TransactionId;
                    this.IsRemoteTransaction = odataObject.IsRemoteTransaction;
                    this.QueryBySalesId = odataObject.QueryBySalesId;
                    this.FiscalRegistrationEventTypeValue = odataObject.FiscalRegistrationEventTypeValue;
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    if (odataObject.DocumentContext == null) {
                        this.DocumentContext = undefined;
                    }
                    else if (odataObject.DocumentContext['@odata.type'] == null) {
                        this.DocumentContext = new FiscalIntegrationDocumentContextClass(odataObject.DocumentContext);
                    }
                    else {
                        var className = odataObject.DocumentContext['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DocumentContext = new Commerce.Proxy.Entities[className](odataObject.DocumentContext);
                        }
                    }
                }
                return FiscalIntegrationDocumentRetrievalCriteriaClass;
            }());
            Entities.FiscalIntegrationDocumentRetrievalCriteriaClass = FiscalIntegrationDocumentRetrievalCriteriaClass;
            var FiscalIntegrationDocumentClass = (function () {
                function FiscalIntegrationDocumentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Document = odataObject.Document;
                    this.DocumentGenerationResultTypeValue = odataObject.DocumentGenerationResultTypeValue;
                    if (odataObject.FiscalConnectorTechnicalProfile == null) {
                        this.FiscalConnectorTechnicalProfile = undefined;
                    }
                    else if (odataObject.FiscalConnectorTechnicalProfile['@odata.type'] == null) {
                        this.FiscalConnectorTechnicalProfile = new FiscalIntegrationTechnicalProfileClass(odataObject.FiscalConnectorTechnicalProfile);
                    }
                    else {
                        var className = odataObject.FiscalConnectorTechnicalProfile['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.FiscalConnectorTechnicalProfile = new Commerce.Proxy.Entities[className](odataObject.FiscalConnectorTechnicalProfile);
                        }
                    }
                    if (odataObject.DocumentAdjustment == null) {
                        this.DocumentAdjustment = undefined;
                    }
                    else if (odataObject.DocumentAdjustment['@odata.type'] == null) {
                        this.DocumentAdjustment = new FiscalIntegrationDocumentAdjustmentClass(odataObject.DocumentAdjustment);
                    }
                    else {
                        var className = odataObject.DocumentAdjustment['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DocumentAdjustment = new Commerce.Proxy.Entities[className](odataObject.DocumentAdjustment);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationDocumentClass;
            }());
            Entities.FiscalIntegrationDocumentClass = FiscalIntegrationDocumentClass;
            var FiscalIntegrationRegistrationResultClass = (function () {
                function FiscalIntegrationRegistrationResultClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionID = odataObject.TransactionID;
                    this.Response = odataObject.Response;
                    this.SubmittedDocument = odataObject.SubmittedDocument;
                    this.RegisterInfo = odataObject.RegisterInfo;
                    this.RegistrationStatusValue = odataObject.RegistrationStatusValue;
                    this.FiscalRegistrationEventTypeValue = odataObject.FiscalRegistrationEventTypeValue;
                    if (odataObject.DocumentAdjustment == null) {
                        this.DocumentAdjustment = undefined;
                    }
                    else if (odataObject.DocumentAdjustment['@odata.type'] == null) {
                        this.DocumentAdjustment = new FiscalIntegrationDocumentAdjustmentClass(odataObject.DocumentAdjustment);
                    }
                    else {
                        var className = odataObject.DocumentAdjustment['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DocumentAdjustment = new Commerce.Proxy.Entities[className](odataObject.DocumentAdjustment);
                        }
                    }
                    this.ReasonCodeLines = undefined;
                    if (odataObject.ReasonCodeLines) {
                        this.ReasonCodeLines = [];
                        for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                            if (odataObject.ReasonCodeLines[i] != null) {
                                if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i]);
                                    }
                                }
                                else {
                                    this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                                }
                            }
                            else {
                                this.ReasonCodeLines[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationRegistrationResultClass;
            }());
            Entities.FiscalIntegrationRegistrationResultClass = FiscalIntegrationRegistrationResultClass;
            var FiscalIntegrationRegistrationProcessClass = (function () {
                function FiscalIntegrationRegistrationProcessClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.RegistrationProcessId = odataObject.RegistrationProcessId;
                    this.Description = odataObject.Description;
                    this.RegistrationProcessLines = undefined;
                    if (odataObject.RegistrationProcessLines) {
                        this.RegistrationProcessLines = [];
                        for (var i = 0; i < odataObject.RegistrationProcessLines.length; i++) {
                            if (odataObject.RegistrationProcessLines[i] != null) {
                                if (odataObject.RegistrationProcessLines[i]['@odata.type'] != null) {
                                    var className = odataObject.RegistrationProcessLines[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.RegistrationProcessLines[i] = new Commerce.Proxy.Entities[className](odataObject.RegistrationProcessLines[i]);
                                    }
                                }
                                else {
                                    this.RegistrationProcessLines[i] = new FiscalIntegrationRegistrationProcessLineClass(odataObject.RegistrationProcessLines[i]);
                                }
                            }
                            else {
                                this.RegistrationProcessLines[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationRegistrationProcessClass;
            }());
            Entities.FiscalIntegrationRegistrationProcessClass = FiscalIntegrationRegistrationProcessClass;
            var FiscalIntegrationSupportedEventsClass = (function () {
                function FiscalIntegrationSupportedEventsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.FunctionalityProfileGroupId = odataObject.FunctionalityProfileGroupId;
                    this.SupportedFiscalEventTypes = undefined;
                    if (odataObject.SupportedFiscalEventTypes) {
                        this.SupportedFiscalEventTypes = [];
                        for (var i = 0; i < odataObject.SupportedFiscalEventTypes.length; i++) {
                            if (odataObject.SupportedFiscalEventTypes[i] != null) {
                                this.SupportedFiscalEventTypes[i] = odataObject.SupportedFiscalEventTypes[i];
                            }
                            else {
                                this.SupportedFiscalEventTypes[i] = undefined;
                            }
                        }
                    }
                    this.SupportedNonFiscalEventTypes = undefined;
                    if (odataObject.SupportedNonFiscalEventTypes) {
                        this.SupportedNonFiscalEventTypes = [];
                        for (var i = 0; i < odataObject.SupportedNonFiscalEventTypes.length; i++) {
                            if (odataObject.SupportedNonFiscalEventTypes[i] != null) {
                                this.SupportedNonFiscalEventTypes[i] = odataObject.SupportedNonFiscalEventTypes[i];
                            }
                            else {
                                this.SupportedNonFiscalEventTypes[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationSupportedEventsClass;
            }());
            Entities.FiscalIntegrationSupportedEventsClass = FiscalIntegrationSupportedEventsClass;
            var FiscalIntegrationTechnicalProfileClass = (function () {
                function FiscalIntegrationTechnicalProfileClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProfileId = odataObject.ProfileId;
                    this.Description = odataObject.Description;
                    this.ConnectorName = odataObject.ConnectorName;
                    this.ConnectorTypeValue = odataObject.ConnectorTypeValue;
                    this.TechnicalProfile = odataObject.TechnicalProfile;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationTechnicalProfileClass;
            }());
            Entities.FiscalIntegrationTechnicalProfileClass = FiscalIntegrationTechnicalProfileClass;
            var ExtensionProfileClass = (function () {
                function ExtensionProfileClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ExtensionServiceUrl = odataObject.ExtensionServiceUrl;
                    this.AttachedServices = undefined;
                    if (odataObject.AttachedServices) {
                        this.AttachedServices = [];
                        for (var i = 0; i < odataObject.AttachedServices.length; i++) {
                            if (odataObject.AttachedServices[i] != null) {
                                if (odataObject.AttachedServices[i]['@odata.type'] != null) {
                                    var className = odataObject.AttachedServices[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.AttachedServices[i] = new Commerce.Proxy.Entities[className](odataObject.AttachedServices[i]);
                                    }
                                }
                                else {
                                    this.AttachedServices[i] = new AttachedServiceClass(odataObject.AttachedServices[i]);
                                }
                            }
                            else {
                                this.AttachedServices[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ExtensionProfileClass;
            }());
            Entities.ExtensionProfileClass = ExtensionProfileClass;
            var AttributeProductClass = (function () {
                function AttributeProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.KeyName = odataObject.KeyName;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.NameTranslations = undefined;
                    if (odataObject.NameTranslations) {
                        this.NameTranslations = [];
                        for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                            if (odataObject.NameTranslations[i] != null) {
                                if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.NameTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i]);
                                    }
                                }
                                else {
                                    this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                                }
                            }
                            else {
                                this.NameTranslations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttributeProductClass;
            }());
            Entities.AttributeProductClass = AttributeProductClass;
            var MediaBlobClass = (function () {
                function MediaBlobClass(odataObject) {
                    odataObject = odataObject || {};
                    this.MediaType = odataObject.MediaType;
                    this.Content = odataObject.Content;
                    this.IsDefault = odataObject.IsDefault;
                    this.AltText = odataObject.AltText;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return MediaBlobClass;
            }());
            Entities.MediaBlobClass = MediaBlobClass;
            var TerminalInfoClass = (function () {
                function TerminalInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TerminalId = odataObject.TerminalId;
                    this.DeviceNumber = odataObject.DeviceNumber;
                    this.Name = odataObject.Name;
                    this.DeviceType = odataObject.DeviceType;
                    this.ActivationStatusValue = odataObject.ActivationStatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TerminalInfoClass;
            }());
            Entities.TerminalInfoClass = TerminalInfoClass;
            var ExtensibleEnumerationContainerClass = (function () {
                function ExtensibleEnumerationContainerClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TypeName = odataObject.TypeName;
                    this.ExtensibleEnumerations = undefined;
                    if (odataObject.ExtensibleEnumerations) {
                        this.ExtensibleEnumerations = [];
                        for (var i = 0; i < odataObject.ExtensibleEnumerations.length; i++) {
                            if (odataObject.ExtensibleEnumerations[i] != null) {
                                if (odataObject.ExtensibleEnumerations[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensibleEnumerations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensibleEnumerations[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensibleEnumerations[i]);
                                    }
                                }
                                else {
                                    this.ExtensibleEnumerations[i] = new ExtensibleEnumerationClass(odataObject.ExtensibleEnumerations[i]);
                                }
                            }
                            else {
                                this.ExtensibleEnumerations[i] = undefined;
                            }
                        }
                    }
                }
                return ExtensibleEnumerationContainerClass;
            }());
            Entities.ExtensibleEnumerationContainerClass = ExtensibleEnumerationContainerClass;
            var PackingSlipDataClass = (function () {
                function PackingSlipDataClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PackingSlipId = odataObject.PackingSlipId;
                    this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
                        : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PackingSlipDataClass;
            }());
            Entities.PackingSlipDataClass = PackingSlipDataClass;
            var OrgUnitAddressClass = (function (_super) {
                __extends(OrgUnitAddressClass, _super);
                function OrgUnitAddressClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnitAddress";
                    return _this;
                }
                return OrgUnitAddressClass;
            }(AddressClass));
            Entities.OrgUnitAddressClass = OrgUnitAddressClass;
            var WarehouseDetailsClass = (function (_super) {
                __extends(WarehouseDetailsClass, _super);
                function WarehouseDetailsClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.InventoryLocationId = odataObject.InventoryLocationId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.WarehouseDetails";
                    return _this;
                }
                return WarehouseDetailsClass;
            }(AddressClass));
            Entities.WarehouseDetailsClass = WarehouseDetailsClass;
            var AttributeBooleanValueClass = (function (_super) {
                __extends(AttributeBooleanValueClass, _super);
                function AttributeBooleanValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = odataObject.Value;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeBooleanValue";
                    return _this;
                }
                return AttributeBooleanValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeBooleanValueClass = AttributeBooleanValueClass;
            var AttributeCurrencyValueClass = (function (_super) {
                __extends(AttributeCurrencyValueClass, _super);
                function AttributeCurrencyValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.CurrencyValue = (odataObject.CurrencyValue != null) ? parseFloat(odataObject.CurrencyValue) : undefined;
                    _this.CurrencyCode = odataObject.CurrencyCode;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeCurrencyValue";
                    return _this;
                }
                return AttributeCurrencyValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeCurrencyValueClass = AttributeCurrencyValueClass;
            var AttributeDateTimeOffsetValueClass = (function (_super) {
                __extends(AttributeDateTimeOffsetValueClass, _super);
                function AttributeDateTimeOffsetValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = (odataObject.Value instanceof Date) ? odataObject.Value
                        : (odataObject.Value != null) ? OData.jsonLightReadStringPropertyValue(odataObject.Value, "Edm.DateTimeOffset", false) : undefined;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeDateTimeOffsetValue";
                    return _this;
                }
                return AttributeDateTimeOffsetValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeDateTimeOffsetValueClass = AttributeDateTimeOffsetValueClass;
            var AttributeFloatValueClass = (function (_super) {
                __extends(AttributeFloatValueClass, _super);
                function AttributeFloatValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
                    _this.UnitSymbol = odataObject.UnitSymbol;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeFloatValue";
                    return _this;
                }
                return AttributeFloatValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeFloatValueClass = AttributeFloatValueClass;
            var AttributeIntValueClass = (function (_super) {
                __extends(AttributeIntValueClass, _super);
                function AttributeIntValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = odataObject.Value;
                    _this.UnitSymbol = odataObject.UnitSymbol;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeIntValue";
                    return _this;
                }
                return AttributeIntValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeIntValueClass = AttributeIntValueClass;
            var AttributeMediaLocationValueClass = (function (_super) {
                __extends(AttributeMediaLocationValueClass, _super);
                function AttributeMediaLocationValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = undefined;
                    if (odataObject.Value) {
                        _this.Value = [];
                        for (var i = 0; i < odataObject.Value.length; i++) {
                            if (odataObject.Value[i] != null) {
                                if (odataObject.Value[i]['@odata.type'] != null) {
                                    var className = odataObject.Value[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.Value[i] = new Commerce.Proxy.Entities[className](odataObject.Value[i]);
                                    }
                                }
                                else {
                                    _this.Value[i] = new MediaLocationClass(odataObject.Value[i]);
                                }
                            }
                            else {
                                _this.Value[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeMediaLocationValue";
                    return _this;
                }
                return AttributeMediaLocationValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeMediaLocationValueClass = AttributeMediaLocationValueClass;
            var AttributeTextValueClass = (function (_super) {
                __extends(AttributeTextValueClass, _super);
                function AttributeTextValueClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.TextValue = odataObject.TextValue;
                    _this.TextValueTranslations = undefined;
                    if (odataObject.TextValueTranslations) {
                        _this.TextValueTranslations = [];
                        for (var i = 0; i < odataObject.TextValueTranslations.length; i++) {
                            if (odataObject.TextValueTranslations[i] != null) {
                                if (odataObject.TextValueTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.TextValueTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.TextValueTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.TextValueTranslations[i]);
                                    }
                                }
                                else {
                                    _this.TextValueTranslations[i] = new TextValueTranslationClass(odataObject.TextValueTranslations[i]);
                                }
                            }
                            else {
                                _this.TextValueTranslations[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeTextValue";
                    return _this;
                }
                return AttributeTextValueClass;
            }(AttributeValueBaseClass));
            Entities.AttributeTextValueClass = AttributeTextValueClass;
            var ButtonGridButtonClass = (function () {
                function ButtonGridButtonClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Action = odataObject.Action;
                    this.ActionProperty = odataObject.ActionProperty;
                    if (odataObject.BackColorAsARGB == null) {
                        this.BackColorAsARGB = undefined;
                    }
                    else if (odataObject.BackColorAsARGB['@odata.type'] == null) {
                        this.BackColorAsARGB = new ARGBColorClass(odataObject.BackColorAsARGB);
                    }
                    else {
                        var className = odataObject.BackColorAsARGB['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.BackColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.BackColorAsARGB);
                        }
                    }
                    if (odataObject.BorderColorAsARGB == null) {
                        this.BorderColorAsARGB = undefined;
                    }
                    else if (odataObject.BorderColorAsARGB['@odata.type'] == null) {
                        this.BorderColorAsARGB = new ARGBColorClass(odataObject.BorderColorAsARGB);
                    }
                    else {
                        var className = odataObject.BorderColorAsARGB['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.BorderColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.BorderColorAsARGB);
                        }
                    }
                    this.Column = odataObject.Column;
                    this.ColumnSpan = odataObject.ColumnSpan;
                    this.DisplayText = odataObject.DisplayText;
                    if (odataObject.FontColorAsARGB == null) {
                        this.FontColorAsARGB = undefined;
                    }
                    else if (odataObject.FontColorAsARGB['@odata.type'] == null) {
                        this.FontColorAsARGB = new ARGBColorClass(odataObject.FontColorAsARGB);
                    }
                    else {
                        var className = odataObject.FontColorAsARGB['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.FontColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.FontColorAsARGB);
                        }
                    }
                    this.ButtonId = odataObject.ButtonId;
                    this.Row = odataObject.Row;
                    this.RowSpan = odataObject.RowSpan;
                    this.UseCustomLookAndFeel = odataObject.UseCustomLookAndFeel;
                    this.PictureAsBase64 = odataObject.PictureAsBase64;
                    this.FontStyle = odataObject.FontStyle;
                    this.FontSize = odataObject.FontSize;
                    this.EnableCustomFontForPOS = odataObject.EnableCustomFontForPOS;
                    this.HideButtonText = odataObject.HideButtonText;
                    this.Tooltip = odataObject.Tooltip;
                    this.EnableLiveContent = odataObject.EnableLiveContent;
                    this.NotificationContentAlignment = odataObject.NotificationContentAlignment;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ButtonGridButtonClass;
            }());
            Entities.ButtonGridButtonClass = ButtonGridButtonClass;
            var ARGBColorClass = (function () {
                function ARGBColorClass(odataObject) {
                    odataObject = odataObject || {};
                    this.A = (odataObject.A != null) ? parseInt(odataObject.A, 10) : undefined;
                    this.R = (odataObject.R != null) ? parseInt(odataObject.R, 10) : undefined;
                    this.G = (odataObject.G != null) ? parseInt(odataObject.G, 10) : undefined;
                    this.B = (odataObject.B != null) ? parseInt(odataObject.B, 10) : undefined;
                }
                return ARGBColorClass;
            }());
            Entities.ARGBColorClass = ARGBColorClass;
            var ExtensiblePeriodicDiscountOfferTypeClass = (function (_super) {
                __extends(ExtensiblePeriodicDiscountOfferTypeClass, _super);
                function ExtensiblePeriodicDiscountOfferTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType";
                    return _this;
                }
                return ExtensiblePeriodicDiscountOfferTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensiblePeriodicDiscountOfferTypeClass = ExtensiblePeriodicDiscountOfferTypeClass;
            var ChargeLineOverrideClass = (function () {
                function ChargeLineOverrideClass(odataObject) {
                    odataObject = odataObject || {};
                    this.OriginalAmount = (odataObject.OriginalAmount != null) ? parseFloat(odataObject.OriginalAmount) : undefined;
                    this.OverrideAmount = (odataObject.OverrideAmount != null) ? parseFloat(odataObject.OverrideAmount) : undefined;
                    this.OverrideReasonDescription = odataObject.OverrideReasonDescription;
                    this.OverrideDateTime = (odataObject.OverrideDateTime instanceof Date) ? odataObject.OverrideDateTime
                        : (odataObject.OverrideDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OverrideDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.UserId = odataObject.UserId;
                }
                return ChargeLineOverrideClass;
            }());
            Entities.ChargeLineOverrideClass = ChargeLineOverrideClass;
            var TaxLineGTEClass = (function (_super) {
                __extends(TaxLineGTEClass, _super);
                function TaxLineGTEClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.TaxComponent = odataObject.TaxComponent;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaxLineGTE";
                    return _this;
                }
                return TaxLineGTEClass;
            }(TaxLineClass));
            Entities.TaxLineGTEClass = TaxLineGTEClass;
            var TaxMeasureClass = (function () {
                function TaxMeasureClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Path = odataObject.Path;
                    this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
                    this.DataAreaId = odataObject.DataAreaId;
                    this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
                    this.StoreId = odataObject.StoreId;
                    this.TerminalId = odataObject.TerminalId;
                    this.TransactionId = odataObject.TransactionId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TaxMeasureClass;
            }());
            Entities.TaxMeasureClass = TaxMeasureClass;
            var CardTokenInfoClass = (function () {
                function CardTokenInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CardToken = odataObject.CardToken;
                    this.UniqueCardId = odataObject.UniqueCardId;
                    this.ServiceAccountId = odataObject.ServiceAccountId;
                    this.MaskedCardNumber = odataObject.MaskedCardNumber;
                }
                return CardTokenInfoClass;
            }());
            Entities.CardTokenInfoClass = CardTokenInfoClass;
            var TrackingInfoClass = (function () {
                function TrackingInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TrackingNumber = odataObject.TrackingNumber;
                    this.ServiceType = odataObject.ServiceType;
                    if (odataObject.PackageWeight == null) {
                        this.PackageWeight = undefined;
                    }
                    else if (odataObject.PackageWeight['@odata.type'] == null) {
                        this.PackageWeight = new WeightClass(odataObject.PackageWeight);
                    }
                    else {
                        var className = odataObject.PackageWeight['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.PackageWeight = new Commerce.Proxy.Entities[className](odataObject.PackageWeight);
                        }
                    }
                    this.ShippedOnDate = (odataObject.ShippedOnDate instanceof Date) ? odataObject.ShippedOnDate
                        : (odataObject.ShippedOnDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShippedOnDate, "Edm.DateTimeOffset", false) : undefined;
                    this.Status = odataObject.Status;
                    this.DeliveredOnDate = (odataObject.DeliveredOnDate instanceof Date) ? odataObject.DeliveredOnDate
                        : (odataObject.DeliveredOnDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeliveredOnDate, "Edm.DateTimeOffset", false) : undefined;
                    this.EstimatedDeliveryDate = (odataObject.EstimatedDeliveryDate instanceof Date) ? odataObject.EstimatedDeliveryDate
                        : (odataObject.EstimatedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EstimatedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.TrackingUrl = odataObject.TrackingUrl;
                    this.PackagingType = odataObject.PackagingType;
                    if (odataObject.DestinationAddress == null) {
                        this.DestinationAddress = undefined;
                    }
                    else if (odataObject.DestinationAddress['@odata.type'] == null) {
                        this.DestinationAddress = new AddressClass(odataObject.DestinationAddress);
                    }
                    else {
                        var className = odataObject.DestinationAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.DestinationAddress = new Commerce.Proxy.Entities[className](odataObject.DestinationAddress);
                        }
                    }
                    if (odataObject.OriginAddress == null) {
                        this.OriginAddress = undefined;
                    }
                    else if (odataObject.OriginAddress['@odata.type'] == null) {
                        this.OriginAddress = new AddressClass(odataObject.OriginAddress);
                    }
                    else {
                        var className = odataObject.OriginAddress['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.OriginAddress = new Commerce.Proxy.Entities[className](odataObject.OriginAddress);
                        }
                    }
                    this.ShipmentProgress = undefined;
                    if (odataObject.ShipmentProgress) {
                        this.ShipmentProgress = [];
                        for (var i = 0; i < odataObject.ShipmentProgress.length; i++) {
                            if (odataObject.ShipmentProgress[i] != null) {
                                if (odataObject.ShipmentProgress[i]['@odata.type'] != null) {
                                    var className = odataObject.ShipmentProgress[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ShipmentProgress[i] = new Commerce.Proxy.Entities[className](odataObject.ShipmentProgress[i]);
                                    }
                                }
                                else {
                                    this.ShipmentProgress[i] = new ShipmentProgressClass(odataObject.ShipmentProgress[i]);
                                }
                            }
                            else {
                                this.ShipmentProgress[i] = undefined;
                            }
                        }
                    }
                    this.ShippingCharge = (odataObject.ShippingCharge != null) ? parseFloat(odataObject.ShippingCharge) : undefined;
                }
                return TrackingInfoClass;
            }());
            Entities.TrackingInfoClass = TrackingInfoClass;
            var WeightClass = (function () {
                function WeightClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
                    this.Unit = odataObject.Unit;
                }
                return WeightClass;
            }());
            Entities.WeightClass = WeightClass;
            var ShipmentProgressClass = (function () {
                function ShipmentProgressClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.Location == null) {
                        this.Location = undefined;
                    }
                    else if (odataObject.Location['@odata.type'] == null) {
                        this.Location = new AddressClass(odataObject.Location);
                    }
                    else {
                        var className = odataObject.Location['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.Location = new Commerce.Proxy.Entities[className](odataObject.Location);
                        }
                    }
                    this.DateTime = (odataObject.DateTime instanceof Date) ? odataObject.DateTime
                        : (odataObject.DateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Activity = odataObject.Activity;
                }
                return ShipmentProgressClass;
            }());
            Entities.ShipmentProgressClass = ShipmentProgressClass;
            var ShiftKeyClass = (function () {
                function ShiftKeyClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ShiftTerminalId = odataObject.ShiftTerminalId;
                    this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
                    this.Store = odataObject.Store;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShiftKeyClass;
            }());
            Entities.ShiftKeyClass = ShiftKeyClass;
            var AddressFormattingInfoClass = (function () {
                function AddressFormattingInfoClass(odataObject) {
                    odataObject = odataObject || {};
                    this.AddressComponentNameValue = odataObject.AddressComponentNameValue;
                    this.LineNumber = odataObject.LineNumber;
                    this.IsDataEntryOnly = odataObject.IsDataEntryOnly;
                    this.NewLine = odataObject.NewLine;
                    this.Expand = odataObject.Expand;
                    this.Inactive = odataObject.Inactive;
                    this.Special = odataObject.Special;
                    this.NumberOfSpaces = odataObject.NumberOfSpaces;
                    this.Separator = odataObject.Separator;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AddressFormattingInfoClass;
            }());
            Entities.AddressFormattingInfoClass = AddressFormattingInfoClass;
            var ScaleUnitConfigurationClass = (function () {
                function ScaleUnitConfigurationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.Name = odataObject.Name;
                    this.Region = odataObject.Region;
                }
                return ScaleUnitConfigurationClass;
            }());
            Entities.ScaleUnitConfigurationClass = ScaleUnitConfigurationClass;
            var HardwareConfigurationsClass = (function () {
                function HardwareConfigurationsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CashDrawerConfigurations = undefined;
                    if (odataObject.CashDrawerConfigurations) {
                        this.CashDrawerConfigurations = [];
                        for (var i = 0; i < odataObject.CashDrawerConfigurations.length; i++) {
                            if (odataObject.CashDrawerConfigurations[i] != null) {
                                if (odataObject.CashDrawerConfigurations[i]['@odata.type'] != null) {
                                    var className = odataObject.CashDrawerConfigurations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.CashDrawerConfigurations[i] = new Commerce.Proxy.Entities[className](odataObject.CashDrawerConfigurations[i]);
                                    }
                                }
                                else {
                                    this.CashDrawerConfigurations[i] = new HardwareConfigurationClass(odataObject.CashDrawerConfigurations[i]);
                                }
                            }
                            else {
                                this.CashDrawerConfigurations[i] = undefined;
                            }
                        }
                    }
                    this.PrinterConfigurations = undefined;
                    if (odataObject.PrinterConfigurations) {
                        this.PrinterConfigurations = [];
                        for (var i = 0; i < odataObject.PrinterConfigurations.length; i++) {
                            if (odataObject.PrinterConfigurations[i] != null) {
                                if (odataObject.PrinterConfigurations[i]['@odata.type'] != null) {
                                    var className = odataObject.PrinterConfigurations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.PrinterConfigurations[i] = new Commerce.Proxy.Entities[className](odataObject.PrinterConfigurations[i]);
                                    }
                                }
                                else {
                                    this.PrinterConfigurations[i] = new HardwareConfigurationClass(odataObject.PrinterConfigurations[i]);
                                }
                            }
                            else {
                                this.PrinterConfigurations[i] = undefined;
                            }
                        }
                    }
                    if (odataObject.PinPadConfiguration == null) {
                        this.PinPadConfiguration = undefined;
                    }
                    else if (odataObject.PinPadConfiguration['@odata.type'] == null) {
                        this.PinPadConfiguration = new HardwareConfigurationClass(odataObject.PinPadConfiguration);
                    }
                    else {
                        var className = odataObject.PinPadConfiguration['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.PinPadConfiguration = new Commerce.Proxy.Entities[className](odataObject.PinPadConfiguration);
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareConfigurationsClass;
            }());
            Entities.HardwareConfigurationsClass = HardwareConfigurationsClass;
            var HardwareConfigurationClass = (function () {
                function HardwareConfigurationClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.HardwareStationRecordId = (odataObject.HardwareStationRecordId != null) ? parseInt(odataObject.HardwareStationRecordId, 10) : undefined;
                    this.TerminalId = odataObject.TerminalId;
                    this.DeviceName = odataObject.DeviceName;
                    this.IPAddress = odataObject.IPAddress;
                    this.Port = odataObject.Port;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return HardwareConfigurationClass;
            }());
            Entities.HardwareConfigurationClass = HardwareConfigurationClass;
            var PaymentErrorClass = (function () {
                function PaymentErrorClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Code = odataObject.Code;
                    this.Message = odataObject.Message;
                    this.IsLocalized = odataObject.IsLocalized;
                }
                return PaymentErrorClass;
            }());
            Entities.PaymentErrorClass = PaymentErrorClass;
            var PrinterClass = (function () {
                function PrinterClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Name = odataObject.Name;
                    this.PrinterType = odataObject.PrinterType;
                    this.Terminal = (odataObject.Terminal != null) ? parseInt(odataObject.Terminal, 10) : undefined;
                    this.PrintBehaviorValue = odataObject.PrintBehaviorValue;
                    this.ReceiptLayoutId = odataObject.ReceiptLayoutId;
                    this.HardwareProfileId = odataObject.HardwareProfileId;
                    this.ReceiptType = odataObject.ReceiptType;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PrinterClass;
            }());
            Entities.PrinterClass = PrinterClass;
            var UnitOfMeasureConversionClass = (function () {
                function UnitOfMeasureConversionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.FromUnitOfMeasureId = odataObject.FromUnitOfMeasureId;
                    this.ToUnitOfMeasureId = odataObject.ToUnitOfMeasureId;
                    this.FromUnitOfMeasureSymbol = odataObject.FromUnitOfMeasureSymbol;
                    this.ToUnitOfMeasureSymbol = odataObject.ToUnitOfMeasureSymbol;
                    this.IsBackward = odataObject.IsBackward;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.Factor = (odataObject.Factor != null) ? parseFloat(odataObject.Factor) : undefined;
                    this.Numerator = odataObject.Numerator;
                    this.Denominator = odataObject.Denominator;
                    this.InnerOffset = (odataObject.InnerOffset != null) ? parseFloat(odataObject.InnerOffset) : undefined;
                    this.OuterOffset = (odataObject.OuterOffset != null) ? parseFloat(odataObject.OuterOffset) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return UnitOfMeasureConversionClass;
            }());
            Entities.UnitOfMeasureConversionClass = UnitOfMeasureConversionClass;
            var PriceLineClass = (function () {
                function PriceLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
                    this.PriceMethod = odataObject.PriceMethod;
                    this.OriginId = odataObject.OriginId;
                    this.PriceChangedByExtensions = odataObject.PriceChangedByExtensions;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return PriceLineClass;
            }());
            Entities.PriceLineClass = PriceLineClass;
            var BasePriceLineClass = (function (_super) {
                __extends(BasePriceLineClass, _super);
                function BasePriceLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine";
                    return _this;
                }
                return BasePriceLineClass;
            }(PriceLineClass));
            Entities.BasePriceLineClass = BasePriceLineClass;
            var PriceAdjustmentPriceLineClass = (function (_super) {
                __extends(PriceAdjustmentPriceLineClass, _super);
                function PriceAdjustmentPriceLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.IsCompoundable = odataObject.IsCompoundable;
                    _this.Concurrency = odataObject.Concurrency;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine";
                    return _this;
                }
                return PriceAdjustmentPriceLineClass;
            }(PriceLineClass));
            Entities.PriceAdjustmentPriceLineClass = PriceAdjustmentPriceLineClass;
            var TradeAgreementPriceLineClass = (function (_super) {
                __extends(TradeAgreementPriceLineClass, _super);
                function TradeAgreementPriceLineClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine";
                    return _this;
                }
                return TradeAgreementPriceLineClass;
            }(PriceLineClass));
            Entities.TradeAgreementPriceLineClass = TradeAgreementPriceLineClass;
            var ReturnLabelContentClass = (function () {
                function ReturnLabelContentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ReturnLocationText = odataObject.ReturnLocationText;
                    this.ReturnWarehouseText = odataObject.ReturnWarehouseText;
                    this.ReturnReasonText = odataObject.ReturnReasonText;
                    this.ReturnPalleteText = odataObject.ReturnPalleteText;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReturnLabelContentClass;
            }());
            Entities.ReturnLabelContentClass = ReturnLabelContentClass;
            var LoyaltyRewardPointLineClass = (function () {
                function LoyaltyRewardPointLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TransactionId = odataObject.TransactionId;
                    this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
                    this.LoyaltyGroupRecordId = (odataObject.LoyaltyGroupRecordId != null) ? parseInt(odataObject.LoyaltyGroupRecordId, 10) : undefined;
                    this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
                    this.CustomerAccount = odataObject.CustomerAccount;
                    this.EntryDate = (odataObject.EntryDate instanceof Date) ? odataObject.EntryDate
                        : (odataObject.EntryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EntryDate, "Edm.DateTimeOffset", false) : undefined;
                    this.EntryTime = odataObject.EntryTime;
                    this.EntryTypeValue = odataObject.EntryTypeValue;
                    this.ExpirationDate = (odataObject.ExpirationDate instanceof Date) ? odataObject.ExpirationDate
                        : (odataObject.ExpirationDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ExpirationDate, "Edm.DateTimeOffset", false) : undefined;
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.LoyaltyTierRecordId = (odataObject.LoyaltyTierRecordId != null) ? parseInt(odataObject.LoyaltyTierRecordId, 10) : undefined;
                    this.RewardPointRecordId = (odataObject.RewardPointRecordId != null) ? parseInt(odataObject.RewardPointRecordId, 10) : undefined;
                    this.RewardPointAmountQuantity = (odataObject.RewardPointAmountQuantity != null) ? parseFloat(odataObject.RewardPointAmountQuantity) : undefined;
                    this.RewardPointId = odataObject.RewardPointId;
                    this.RewardPointIsRedeemable = odataObject.RewardPointIsRedeemable;
                    this.RewardPointType = odataObject.RewardPointType;
                    this.RewardPointCurrency = odataObject.RewardPointCurrency;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LoyaltyRewardPointLineClass;
            }());
            Entities.LoyaltyRewardPointLineClass = LoyaltyRewardPointLineClass;
            var TransferOrderJournalLineClass = (function () {
                function TransferOrderJournalLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.ItemName = odataObject.ItemName;
                    this.InventDimId = odataObject.InventDimId;
                    this.TotalQuantityShipped = (odataObject.TotalQuantityShipped != null) ? parseFloat(odataObject.TotalQuantityShipped) : undefined;
                    this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
                    this.TransferQuantity = (odataObject.TransferQuantity != null) ? parseFloat(odataObject.TransferQuantity) : undefined;
                    this.UnitId = odataObject.UnitId;
                    this.ConfigId = odataObject.ConfigId;
                    this.InventSizeId = odataObject.InventSizeId;
                    this.InventColorId = odataObject.InventColorId;
                    this.InventStyleId = odataObject.InventStyleId;
                    this.DeliveryMethod = odataObject.DeliveryMethod;
                    this.Barcode = odataObject.Barcode;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TransferOrderJournalLineClass;
            }());
            Entities.TransferOrderJournalLineClass = TransferOrderJournalLineClass;
            var KitTransactionLineClass = (function () {
                function KitTransactionLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ItemId = odataObject.ItemId;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.InventoryDimensionId = odataObject.InventoryDimensionId;
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return KitTransactionLineClass;
            }());
            Entities.KitTransactionLineClass = KitTransactionLineClass;
            var TenderDetailClass = (function () {
                function TenderDetailClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.AmountInForeignCurrency = (odataObject.AmountInForeignCurrency != null) ? parseFloat(odataObject.AmountInForeignCurrency) : undefined;
                    this.ForeignCurrencyExchangeRate = (odataObject.ForeignCurrencyExchangeRate != null) ? parseFloat(odataObject.ForeignCurrencyExchangeRate) : undefined;
                    this.ForeignCurrency = odataObject.ForeignCurrency;
                    this.BankBagNumber = odataObject.BankBagNumber;
                    this.TenderTypeId = odataObject.TenderTypeId;
                    this.TenderRecount = odataObject.TenderRecount;
                    this.DenominationDetails = undefined;
                    if (odataObject.DenominationDetails) {
                        this.DenominationDetails = [];
                        for (var i = 0; i < odataObject.DenominationDetails.length; i++) {
                            if (odataObject.DenominationDetails[i] != null) {
                                if (odataObject.DenominationDetails[i]['@odata.type'] != null) {
                                    var className = odataObject.DenominationDetails[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.DenominationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.DenominationDetails[i]);
                                    }
                                }
                                else {
                                    this.DenominationDetails[i] = new DenominationDetailClass(odataObject.DenominationDetails[i]);
                                }
                            }
                            else {
                                this.DenominationDetails[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return TenderDetailClass;
            }());
            Entities.TenderDetailClass = TenderDetailClass;
            var DenominationDetailClass = (function () {
                function DenominationDetailClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Type = odataObject.Type;
                    this.Currency = odataObject.Currency;
                    this.DenominationAmount = (odataObject.DenominationAmount != null) ? parseFloat(odataObject.DenominationAmount) : undefined;
                    this.QuantityDeclared = odataObject.QuantityDeclared;
                    this.AmountDeclared = (odataObject.AmountDeclared != null) ? parseFloat(odataObject.AmountDeclared) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return DenominationDetailClass;
            }());
            Entities.DenominationDetailClass = DenominationDetailClass;
            var ButtonGridZoneClass = (function () {
                function ButtonGridZoneClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ButtonGridId = odataObject.ButtonGridId;
                    this.ZoneId = odataObject.ZoneId;
                    this.ZoneName = odataObject.ZoneName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ButtonGridZoneClass;
            }());
            Entities.ButtonGridZoneClass = ButtonGridZoneClass;
            var ImageZoneClass = (function () {
                function ImageZoneClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PictureId = odataObject.PictureId;
                    this.PictureAsBase64 = odataObject.PictureAsBase64;
                    this.ZoneId = odataObject.ZoneId;
                    this.ZoneName = odataObject.ZoneName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ImageZoneClass;
            }());
            Entities.ImageZoneClass = ImageZoneClass;
            var ReportZoneClass = (function () {
                function ReportZoneClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ReportRecordId = (odataObject.ReportRecordId != null) ? parseInt(odataObject.ReportRecordId, 10) : undefined;
                    this.ZoneId = odataObject.ZoneId;
                    this.ZoneName = odataObject.ZoneName;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReportZoneClass;
            }());
            Entities.ReportZoneClass = ReportZoneClass;
            var SalesInvoiceLineClass = (function () {
                function SalesInvoiceLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.ItemId = odataObject.ItemId;
                    this.ProductName = odataObject.ProductName;
                    this.InventDimensionId = odataObject.InventDimensionId;
                    this.InventTransactionId = odataObject.InventTransactionId;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
                    this.DiscountPercent = (odataObject.DiscountPercent != null) ? parseFloat(odataObject.DiscountPercent) : undefined;
                    this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
                    this.BatchId = odataObject.BatchId;
                    this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
                    this.Site = odataObject.Site;
                    this.Warehouse = odataObject.Warehouse;
                    this.SerialId = odataObject.SerialId;
                    this.ColorId = odataObject.ColorId;
                    this.SizeId = odataObject.SizeId;
                    this.StyleId = odataObject.StyleId;
                    this.ConfigId = odataObject.ConfigId;
                    this.ColorName = odataObject.ColorName;
                    this.SizeName = odataObject.SizeName;
                    this.StyleName = odataObject.StyleName;
                    this.ConfigName = odataObject.ConfigName;
                    this.SalesTaxGroup = odataObject.SalesTaxGroup;
                    this.ItemTaxGroup = odataObject.ItemTaxGroup;
                    this.SalesMarkup = (odataObject.SalesMarkup != null) ? parseFloat(odataObject.SalesMarkup) : undefined;
                    this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
                    this.TotalPercentageDiscount = (odataObject.TotalPercentageDiscount != null) ? parseFloat(odataObject.TotalPercentageDiscount) : undefined;
                    this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
                    this.PeriodicDiscount = (odataObject.PeriodicDiscount != null) ? parseFloat(odataObject.PeriodicDiscount) : undefined;
                    this.PeriodicPercentageDiscount = (odataObject.PeriodicPercentageDiscount != null) ? parseFloat(odataObject.PeriodicPercentageDiscount) : undefined;
                    this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
                    this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return SalesInvoiceLineClass;
            }());
            Entities.SalesInvoiceLineClass = SalesInvoiceLineClass;
            var ReportRowClass = (function () {
                function ReportRowClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RowData = undefined;
                    if (odataObject.RowData) {
                        this.RowData = [];
                        for (var i = 0; i < odataObject.RowData.length; i++) {
                            if (odataObject.RowData[i] != null) {
                                if (odataObject.RowData[i]['@odata.type'] != null) {
                                    var className = odataObject.RowData[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.RowData[i] = new Commerce.Proxy.Entities[className](odataObject.RowData[i]);
                                    }
                                }
                                else {
                                    this.RowData[i] = new CommercePropertyClass(odataObject.RowData[i]);
                                }
                            }
                            else {
                                this.RowData[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ReportRowClass;
            }());
            Entities.ReportRowClass = ReportRowClass;
            var FormAnnotationClass = (function (_super) {
                __extends(FormAnnotationClass, _super);
                function FormAnnotationClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.MenuItemLabel = odataObject.MenuItemLabel;
                    _this.MenuItemName = odataObject.MenuItemName;
                    _this.MenuItemType = odataObject.MenuItemType;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FormAnnotation";
                    return _this;
                }
                return FormAnnotationClass;
            }(AnnotationClass));
            Entities.FormAnnotationClass = FormAnnotationClass;
            var TaskGuideAnnotationClass = (function (_super) {
                __extends(TaskGuideAnnotationClass, _super);
                function TaskGuideAnnotationClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.RecordingValueType = odataObject.RecordingValueType;
                    _this.Title = odataObject.Title;
                    _this.ExampleText = odataObject.ExampleText;
                    _this.Hidden = odataObject.Hidden;
                    _this.GlobalId = odataObject.GlobalId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaskGuideAnnotation";
                    return _this;
                }
                return TaskGuideAnnotationClass;
            }(AnnotationClass));
            Entities.TaskGuideAnnotationClass = TaskGuideAnnotationClass;
            var CommandArgumentClass = (function () {
                function CommandArgumentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Value = odataObject.Value;
                    this.IsReference = odataObject.IsReference;
                }
                return CommandArgumentClass;
            }());
            Entities.CommandArgumentClass = CommandArgumentClass;
            var PropertyUserActionClass = (function (_super) {
                __extends(PropertyUserActionClass, _super);
                function PropertyUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Value = odataObject.Value;
                    _this.ValueLabel = odataObject.ValueLabel;
                    _this.PropertyName = odataObject.PropertyName;
                    _this.ControlName = odataObject.ControlName;
                    _this.ControlType = odataObject.ControlType;
                    _this.UserActionType = odataObject.UserActionType;
                    _this.IsReference = odataObject.IsReference;
                    _this.LabelId = odataObject.LabelId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.PropertyUserAction";
                    return _this;
                }
                return PropertyUserActionClass;
            }(FormUserActionClass));
            Entities.PropertyUserActionClass = PropertyUserActionClass;
            var InfoUserActionClass = (function (_super) {
                __extends(InfoUserActionClass, _super);
                function InfoUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.FormId = odataObject.FormId;
                    _this.ControlLabel = odataObject.ControlLabel;
                    _this.ControlLabelId = odataObject.ControlLabelId;
                    _this.ControlName = odataObject.ControlName;
                    _this.Text = odataObject.Text;
                    _this.Notes = odataObject.Notes;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.InfoUserAction";
                    return _this;
                }
                return InfoUserActionClass;
            }(UserActionClass));
            Entities.InfoUserActionClass = InfoUserActionClass;
            var MenuItemUserActionClass = (function (_super) {
                __extends(MenuItemUserActionClass, _super);
                function MenuItemUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.MenuItemName = odataObject.MenuItemName;
                    _this.MenuItemType = odataObject.MenuItemType;
                    _this.NavigationPath = undefined;
                    if (odataObject.NavigationPath) {
                        _this.NavigationPath = [];
                        for (var i = 0; i < odataObject.NavigationPath.length; i++) {
                            if (odataObject.NavigationPath[i] != null) {
                                _this.NavigationPath[i] = odataObject.NavigationPath[i];
                            }
                            else {
                                _this.NavigationPath[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.MenuItemUserAction";
                    return _this;
                }
                return MenuItemUserActionClass;
            }(UserActionClass));
            Entities.MenuItemUserActionClass = MenuItemUserActionClass;
            var ValidationUserActionClass = (function (_super) {
                __extends(ValidationUserActionClass, _super);
                function ValidationUserActionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.Name = odataObject.Name;
                    _this.Comment = odataObject.Comment;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationUserAction";
                    return _this;
                }
                return ValidationUserActionClass;
            }(UserActionClass));
            Entities.ValidationUserActionClass = ValidationUserActionClass;
            var ArtifactSummaryClass = (function () {
                function ArtifactSummaryClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ArtifactType = odataObject.ArtifactType;
                    this.LanguageTags = undefined;
                    if (odataObject.LanguageTags) {
                        this.LanguageTags = [];
                        for (var i = 0; i < odataObject.LanguageTags.length; i++) {
                            if (odataObject.LanguageTags[i] != null) {
                                this.LanguageTags[i] = odataObject.LanguageTags[i];
                            }
                            else {
                                this.LanguageTags[i] = undefined;
                            }
                        }
                    }
                }
                return ArtifactSummaryClass;
            }());
            Entities.ArtifactSummaryClass = ArtifactSummaryClass;
            var MetadataPropertyValueClass = (function () {
                function MetadataPropertyValueClass(odataObject) {
                    odataObject = odataObject || {};
                    this.PropertyId = odataObject.PropertyId;
                    this.SingleValue = odataObject.SingleValue;
                    this.MultiValue = undefined;
                    if (odataObject.MultiValue) {
                        this.MultiValue = [];
                        for (var i = 0; i < odataObject.MultiValue.length; i++) {
                            if (odataObject.MultiValue[i] != null) {
                                if (odataObject.MultiValue[i]['@odata.type'] != null) {
                                    var className = odataObject.MultiValue[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.MultiValue[i] = new Commerce.Proxy.Entities[className](odataObject.MultiValue[i]);
                                    }
                                }
                                else {
                                    this.MultiValue[i] = new MetadataTextClass(odataObject.MultiValue[i]);
                                }
                            }
                            else {
                                this.MultiValue[i] = undefined;
                            }
                        }
                    }
                    this.Tags = undefined;
                    if (odataObject.Tags) {
                        this.Tags = [];
                        for (var i = 0; i < odataObject.Tags.length; i++) {
                            if (odataObject.Tags[i] != null) {
                                this.Tags[i] = odataObject.Tags[i];
                            }
                            else {
                                this.Tags[i] = undefined;
                            }
                        }
                    }
                    this.ComboBox = odataObject.ComboBox;
                    this.MultiSelect = undefined;
                    if (odataObject.MultiSelect) {
                        this.MultiSelect = [];
                        for (var i = 0; i < odataObject.MultiSelect.length; i++) {
                            if (odataObject.MultiSelect[i] != null) {
                                this.MultiSelect[i] = odataObject.MultiSelect[i];
                            }
                            else {
                                this.MultiSelect[i] = undefined;
                            }
                        }
                    }
                    this.Links = undefined;
                    if (odataObject.Links) {
                        this.Links = [];
                        for (var i = 0; i < odataObject.Links.length; i++) {
                            if (odataObject.Links[i] != null) {
                                if (odataObject.Links[i]['@odata.type'] != null) {
                                    var className = odataObject.Links[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Links[i] = new Commerce.Proxy.Entities[className](odataObject.Links[i]);
                                    }
                                }
                                else {
                                    this.Links[i] = new MetadataHypertextLinkClass(odataObject.Links[i]);
                                }
                            }
                            else {
                                this.Links[i] = undefined;
                            }
                        }
                    }
                }
                return MetadataPropertyValueClass;
            }());
            Entities.MetadataPropertyValueClass = MetadataPropertyValueClass;
            var MetadataTextClass = (function () {
                function MetadataTextClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.Text = odataObject.Text;
                }
                return MetadataTextClass;
            }());
            Entities.MetadataTextClass = MetadataTextClass;
            var MetadataHypertextLinkClass = (function () {
                function MetadataHypertextLinkClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Id = odataObject.Id;
                    this.DisplayName = odataObject.DisplayName;
                    this.Url = odataObject.Url;
                }
                return MetadataHypertextLinkClass;
            }());
            Entities.MetadataHypertextLinkClass = MetadataHypertextLinkClass;
            var FormContextClass = (function () {
                function FormContextClass(odataObject) {
                    odataObject = odataObject || {};
                    this.FormID = odataObject.FormID;
                    this.FormName = odataObject.FormName;
                    this.RecordingName = odataObject.RecordingName;
                    this.HasMetadata = odataObject.HasMetadata;
                    this.Sequence = odataObject.Sequence;
                    this.Annotations = undefined;
                    if (odataObject.Annotations) {
                        this.Annotations = [];
                        for (var i = 0; i < odataObject.Annotations.length; i++) {
                            if (odataObject.Annotations[i] != null) {
                                if (odataObject.Annotations[i]['@odata.type'] != null) {
                                    var className = odataObject.Annotations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.Annotations[i] = new Commerce.Proxy.Entities[className](odataObject.Annotations[i]);
                                    }
                                }
                                else {
                                    this.Annotations[i] = new AnnotationClass(odataObject.Annotations[i]);
                                }
                            }
                            else {
                                this.Annotations[i] = undefined;
                            }
                        }
                    }
                }
                return FormContextClass;
            }());
            Entities.FormContextClass = FormContextClass;
            var FiscalTransactionTenderLineAdjustmentClass = (function () {
                function FiscalTransactionTenderLineAdjustmentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TenderLineNumber = (odataObject.TenderLineNumber != null) ? parseFloat(odataObject.TenderLineNumber) : undefined;
                    this.AdjustmentAmount = (odataObject.AdjustmentAmount != null) ? parseFloat(odataObject.AdjustmentAmount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalTransactionTenderLineAdjustmentClass;
            }());
            Entities.FiscalTransactionTenderLineAdjustmentClass = FiscalTransactionTenderLineAdjustmentClass;
            var FiscalTransactionSalesLineAdjustmentClass = (function () {
                function FiscalTransactionSalesLineAdjustmentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
                    this.Exclude = odataObject.Exclude;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalTransactionSalesLineAdjustmentClass;
            }());
            Entities.FiscalTransactionSalesLineAdjustmentClass = FiscalTransactionSalesLineAdjustmentClass;
            var SalesAffiliationLoyaltyTierClass = (function (_super) {
                __extends(SalesAffiliationLoyaltyTierClass, _super);
                function SalesAffiliationLoyaltyTierClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.TransactionId = odataObject.TransactionId;
                    _this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
                    _this.TerminalId = odataObject.TerminalId;
                    _this.ReceiptId = odataObject.ReceiptId;
                    _this.StaffId = odataObject.StaffId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesAffiliationLoyaltyTier";
                    return _this;
                }
                return SalesAffiliationLoyaltyTierClass;
            }(AffiliationLoyaltyTierClass));
            Entities.SalesAffiliationLoyaltyTierClass = SalesAffiliationLoyaltyTierClass;
            var TaxViewLineClass = (function () {
                function TaxViewLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TaxId = odataObject.TaxId;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                }
                return TaxViewLineClass;
            }());
            Entities.TaxViewLineClass = TaxViewLineClass;
            var CouponClass = (function () {
                function CouponClass(odataObject) {
                    odataObject = odataObject || {};
                    this.CodeId = odataObject.CodeId;
                    this.Code = odataObject.Code;
                    this.DiscountOfferId = odataObject.DiscountOfferId;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CouponClass;
            }());
            Entities.CouponClass = CouponClass;
            var CustomerAccountDepositLineClass = (function () {
                function CustomerAccountDepositLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
                    this.CustomerAccount = odataObject.CustomerAccount;
                    this.Comment = odataObject.Comment;
                    this.StoreNumber = odataObject.StoreNumber;
                    this.Terminal = odataObject.Terminal;
                    this.Shift = odataObject.Shift;
                    this.TransactionStatusValue = odataObject.TransactionStatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerAccountDepositLineClass;
            }());
            Entities.CustomerAccountDepositLineClass = CustomerAccountDepositLineClass;
            var CustomerAttributeClass = (function () {
                function CustomerAttributeClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.AttributeValue == null) {
                        this.AttributeValue = undefined;
                    }
                    else if (odataObject.AttributeValue['@odata.type'] == null) {
                        this.AttributeValue = new CommercePropertyValueClass(odataObject.AttributeValue);
                    }
                    else {
                        var className = odataObject.AttributeValue['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.AttributeValue = new Commerce.Proxy.Entities[className](odataObject.AttributeValue);
                        }
                    }
                    this.Units = odataObject.Units;
                    this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
                    this.Name = odataObject.Name;
                    this.KeyName = odataObject.KeyName;
                    this.DataTypeValue = odataObject.DataTypeValue;
                    this.NameTranslations = undefined;
                    if (odataObject.NameTranslations) {
                        this.NameTranslations = [];
                        for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                            if (odataObject.NameTranslations[i] != null) {
                                if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                                    var className = odataObject.NameTranslations[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i]);
                                    }
                                }
                                else {
                                    this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                                }
                            }
                            else {
                                this.NameTranslations[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return CustomerAttributeClass;
            }());
            Entities.CustomerAttributeClass = CustomerAttributeClass;
            var ShiftTaxLineClass = (function () {
                function ShiftTaxLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TaxCode = odataObject.TaxCode;
                    this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
                    this.TaxRate = (odataObject.TaxRate != null) ? parseFloat(odataObject.TaxRate) : undefined;
                    this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ShiftTaxLineClass;
            }());
            Entities.ShiftTaxLineClass = ShiftTaxLineClass;
            var LinkedProductClass = (function () {
                function LinkedProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.LinkedProductRecordId = (odataObject.LinkedProductRecordId != null) ? parseInt(odataObject.LinkedProductRecordId, 10) : undefined;
                    this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return LinkedProductClass;
            }());
            Entities.LinkedProductClass = LinkedProductClass;
            var RelatedProductClass = (function () {
                function RelatedProductClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
                    this.RelatedProductRecordId = (odataObject.RelatedProductRecordId != null) ? parseInt(odataObject.RelatedProductRecordId, 10) : undefined;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.RelationName = odataObject.RelationName;
                    this.IsExcludedRelation = odataObject.IsExcludedRelation;
                    this.IsDirectRelation = odataObject.IsDirectRelation;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return RelatedProductClass;
            }());
            Entities.RelatedProductClass = RelatedProductClass;
            var KitComponentClass = (function () {
                function KitComponentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return KitComponentClass;
            }());
            Entities.KitComponentClass = KitComponentClass;
            var ListingIdentityClass = (function () {
                function ListingIdentityClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
                    this.LanguageId = odataObject.LanguageId;
                    this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
                    this.Tag = odataObject.Tag;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return ListingIdentityClass;
            }());
            Entities.ListingIdentityClass = ListingIdentityClass;
            var RegularStoreHoursClass = (function () {
                function RegularStoreHoursClass(odataObject) {
                    odataObject = odataObject || {};
                    this.MondayOpenTime = odataObject.MondayOpenTime;
                    this.MondayCloseTime = odataObject.MondayCloseTime;
                    this.IsClosedOnMonday = odataObject.IsClosedOnMonday;
                    this.TuesdayOpenTime = odataObject.TuesdayOpenTime;
                    this.TuesdayCloseTime = odataObject.TuesdayCloseTime;
                    this.IsClosedOnTuesday = odataObject.IsClosedOnTuesday;
                    this.WednesdayOpenTime = odataObject.WednesdayOpenTime;
                    this.WednesdayCloseTime = odataObject.WednesdayCloseTime;
                    this.IsClosedOnWednesday = odataObject.IsClosedOnWednesday;
                    this.ThursdayOpenTime = odataObject.ThursdayOpenTime;
                    this.ThursdayCloseTime = odataObject.ThursdayCloseTime;
                    this.IsClosedOnThursday = odataObject.IsClosedOnThursday;
                    this.FridayOpenTime = odataObject.FridayOpenTime;
                    this.FridayCloseTime = odataObject.FridayCloseTime;
                    this.IsClosedOnFriday = odataObject.IsClosedOnFriday;
                    this.SaturdayOpenTime = odataObject.SaturdayOpenTime;
                    this.SaturdayCloseTime = odataObject.SaturdayCloseTime;
                    this.IsClosedOnSaturday = odataObject.IsClosedOnSaturday;
                    this.SundayOpenTime = odataObject.SundayOpenTime;
                    this.SundayCloseTime = odataObject.SundayCloseTime;
                    this.IsClosedOnSunday = odataObject.IsClosedOnSunday;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return RegularStoreHoursClass;
            }());
            Entities.RegularStoreHoursClass = RegularStoreHoursClass;
            var ExtensibleAuditEventTypeClass = (function (_super) {
                __extends(ExtensibleAuditEventTypeClass, _super);
                function ExtensibleAuditEventTypeClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType";
                    return _this;
                }
                return ExtensibleAuditEventTypeClass;
            }(ExtensibleEnumerationClass));
            Entities.ExtensibleAuditEventTypeClass = ExtensibleAuditEventTypeClass;
            var AuditEventFiscalTransactionClass = (function () {
                function AuditEventFiscalTransactionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.EventId = (odataObject.EventId != null) ? parseInt(odataObject.EventId, 10) : undefined;
                    this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
                    this.RegisterResponse = odataObject.RegisterResponse;
                    this.Store = odataObject.Store;
                    this.TransDateTime = (odataObject.TransDateTime instanceof Date) ? odataObject.TransDateTime
                        : (odataObject.TransDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TransDateTime, "Edm.DateTimeOffset", false) : undefined;
                    this.Terminal = odataObject.Terminal;
                    this.UploadType = odataObject.UploadType;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AuditEventFiscalTransactionClass;
            }());
            Entities.AuditEventFiscalTransactionClass = AuditEventFiscalTransactionClass;
            var NotificationDetailClass = (function () {
                function NotificationDetailClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ActionProperty = odataObject.ActionProperty;
                    this.ItemCount = (odataObject.ItemCount != null) ? parseInt(odataObject.ItemCount, 10) : undefined;
                    this.DisplayText = odataObject.DisplayText;
                    this.IsNew = odataObject.IsNew;
                    this.LastUpdatedDateTimeStr = odataObject.LastUpdatedDateTimeStr;
                    this.IsSuccess = odataObject.IsSuccess;
                    this.IsLiveContentOnly = odataObject.IsLiveContentOnly;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return NotificationDetailClass;
            }());
            Entities.NotificationDetailClass = NotificationDetailClass;
            var FiscalIntegrationDocumentContextClass = (function () {
                function FiscalIntegrationDocumentContextClass(odataObject) {
                    odataObject = odataObject || {};
                    if (odataObject.AuditEvent == null) {
                        this.AuditEvent = undefined;
                    }
                    else if (odataObject.AuditEvent['@odata.type'] == null) {
                        this.AuditEvent = new AuditEventClass(odataObject.AuditEvent);
                    }
                    else {
                        var className = odataObject.AuditEvent['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.AuditEvent = new Commerce.Proxy.Entities[className](odataObject.AuditEvent);
                        }
                    }
                }
                return FiscalIntegrationDocumentContextClass;
            }());
            Entities.FiscalIntegrationDocumentContextClass = FiscalIntegrationDocumentContextClass;
            var FiscalIntegrationDocumentAdjustmentClass = (function () {
                function FiscalIntegrationDocumentAdjustmentClass(odataObject) {
                    odataObject = odataObject || {};
                    this.TenderLineAdjustments = undefined;
                    if (odataObject.TenderLineAdjustments) {
                        this.TenderLineAdjustments = [];
                        for (var i = 0; i < odataObject.TenderLineAdjustments.length; i++) {
                            if (odataObject.TenderLineAdjustments[i] != null) {
                                if (odataObject.TenderLineAdjustments[i]['@odata.type'] != null) {
                                    var className = odataObject.TenderLineAdjustments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.TenderLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLineAdjustments[i]);
                                    }
                                }
                                else {
                                    this.TenderLineAdjustments[i] = new FiscalTransactionTenderLineAdjustmentClass(odataObject.TenderLineAdjustments[i]);
                                }
                            }
                            else {
                                this.TenderLineAdjustments[i] = undefined;
                            }
                        }
                    }
                    this.SalesLineAdjustments = undefined;
                    if (odataObject.SalesLineAdjustments) {
                        this.SalesLineAdjustments = [];
                        for (var i = 0; i < odataObject.SalesLineAdjustments.length; i++) {
                            if (odataObject.SalesLineAdjustments[i] != null) {
                                if (odataObject.SalesLineAdjustments[i]['@odata.type'] != null) {
                                    var className = odataObject.SalesLineAdjustments[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.SalesLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLineAdjustments[i]);
                                    }
                                }
                                else {
                                    this.SalesLineAdjustments[i] = new FiscalTransactionSalesLineAdjustmentClass(odataObject.SalesLineAdjustments[i]);
                                }
                            }
                            else {
                                this.SalesLineAdjustments[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationDocumentAdjustmentClass;
            }());
            Entities.FiscalIntegrationDocumentAdjustmentClass = FiscalIntegrationDocumentAdjustmentClass;
            var FiscalIntegrationRegistrationProcessLineClass = (function () {
                function FiscalIntegrationRegistrationProcessLineClass(odataObject) {
                    odataObject = odataObject || {};
                    this.RegistrationProcessId = odataObject.RegistrationProcessId;
                    this.SequenceNumber = odataObject.SequenceNumber;
                    this.Priority = odataObject.Priority;
                    this.ConnectorTypeValue = odataObject.ConnectorTypeValue;
                    this.FunctionalityProfileGroupId = odataObject.FunctionalityProfileGroupId;
                    this.AllowSkip = odataObject.AllowSkip;
                    this.AllowMarkAsRegistered = odataObject.AllowMarkAsRegistered;
                    if (odataObject.RegistrationSettings == null) {
                        this.RegistrationSettings = undefined;
                    }
                    else if (odataObject.RegistrationSettings['@odata.type'] == null) {
                        this.RegistrationSettings = new FiscalIntegrationRegistrationSettingsClass(odataObject.RegistrationSettings);
                    }
                    else {
                        var className = odataObject.RegistrationSettings['@odata.type'];
                        className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                        if (Commerce.Proxy.Entities[className]) {
                            this.RegistrationSettings = new Commerce.Proxy.Entities[className](odataObject.RegistrationSettings);
                        }
                    }
                    this.SupportedFiscalEventTypes = undefined;
                    if (odataObject.SupportedFiscalEventTypes) {
                        this.SupportedFiscalEventTypes = [];
                        for (var i = 0; i < odataObject.SupportedFiscalEventTypes.length; i++) {
                            if (odataObject.SupportedFiscalEventTypes[i] != null) {
                                this.SupportedFiscalEventTypes[i] = odataObject.SupportedFiscalEventTypes[i];
                            }
                            else {
                                this.SupportedFiscalEventTypes[i] = undefined;
                            }
                        }
                    }
                    this.SupportedNonFiscalEventTypes = undefined;
                    if (odataObject.SupportedNonFiscalEventTypes) {
                        this.SupportedNonFiscalEventTypes = [];
                        for (var i = 0; i < odataObject.SupportedNonFiscalEventTypes.length; i++) {
                            if (odataObject.SupportedNonFiscalEventTypes[i] != null) {
                                this.SupportedNonFiscalEventTypes[i] = odataObject.SupportedNonFiscalEventTypes[i];
                            }
                            else {
                                this.SupportedNonFiscalEventTypes[i] = undefined;
                            }
                        }
                    }
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return FiscalIntegrationRegistrationProcessLineClass;
            }());
            Entities.FiscalIntegrationRegistrationProcessLineClass = FiscalIntegrationRegistrationProcessLineClass;
            var FiscalIntegrationRegistrationSettingsClass = (function () {
                function FiscalIntegrationRegistrationSettingsClass(odataObject) {
                    odataObject = odataObject || {};
                    this.SkipReasonCode = odataObject.SkipReasonCode;
                    this.MarkAsRegisteredReasonCode = odataObject.MarkAsRegisteredReasonCode;
                }
                return FiscalIntegrationRegistrationSettingsClass;
            }());
            Entities.FiscalIntegrationRegistrationSettingsClass = FiscalIntegrationRegistrationSettingsClass;
            var AttachedServiceClass = (function () {
                function AttachedServiceClass(odataObject) {
                    odataObject = odataObject || {};
                    this.BaseUrl = odataObject.BaseUrl;
                    this.ServiceId = odataObject.ServiceId;
                    this.StatusValue = odataObject.StatusValue;
                    this.ExtensionProperties = undefined;
                    if (odataObject.ExtensionProperties) {
                        this.ExtensionProperties = [];
                        for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                            if (odataObject.ExtensionProperties[i] != null) {
                                if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                                    var className = odataObject.ExtensionProperties[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i]);
                                    }
                                }
                                else {
                                    this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                                }
                            }
                            else {
                                this.ExtensionProperties[i] = undefined;
                            }
                        }
                    }
                }
                return AttachedServiceClass;
            }());
            Entities.AttachedServiceClass = AttachedServiceClass;
            var ParameterSetClass = (function () {
                function ParameterSetClass(odataObject) {
                    odataObject = odataObject || {};
                }
                return ParameterSetClass;
            }());
            Entities.ParameterSetClass = ParameterSetClass;
            var CommerceExceptionClass = (function () {
                function CommerceExceptionClass(odataObject) {
                    odataObject = odataObject || {};
                    this.LocalizedMessage = odataObject.LocalizedMessage;
                    this.ErrorResourceId = odataObject.ErrorResourceId;
                }
                return CommerceExceptionClass;
            }());
            Entities.CommerceExceptionClass = CommerceExceptionClass;
            var DataValidationExceptionClass = (function (_super) {
                __extends(DataValidationExceptionClass, _super);
                function DataValidationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.ValidationResults = undefined;
                    if (odataObject.ValidationResults) {
                        _this.ValidationResults = [];
                        for (var i = 0; i < odataObject.ValidationResults.length; i++) {
                            if (odataObject.ValidationResults[i] != null) {
                                if (odataObject.ValidationResults[i]['@odata.type'] != null) {
                                    var className = odataObject.ValidationResults[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.ValidationResults[i] = new Commerce.Proxy.Entities[className](odataObject.ValidationResults[i]);
                                    }
                                }
                                else {
                                    _this.ValidationResults[i] = new DataValidationFailureClass(odataObject.ValidationResults[i]);
                                }
                            }
                            else {
                                _this.ValidationResults[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataValidationException";
                    return _this;
                }
                return DataValidationExceptionClass;
            }(CommerceExceptionClass));
            Entities.DataValidationExceptionClass = DataValidationExceptionClass;
            var MissingRequiredReasonCodeExceptionClass = (function (_super) {
                __extends(MissingRequiredReasonCodeExceptionClass, _super);
                function MissingRequiredReasonCodeExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.RequiredReasonCodes = undefined;
                    if (odataObject.RequiredReasonCodes) {
                        _this.RequiredReasonCodes = [];
                        for (var i = 0; i < odataObject.RequiredReasonCodes.length; i++) {
                            if (odataObject.RequiredReasonCodes[i] != null) {
                                if (odataObject.RequiredReasonCodes[i]['@odata.type'] != null) {
                                    var className = odataObject.RequiredReasonCodes[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.RequiredReasonCodes[i] = new Commerce.Proxy.Entities[className](odataObject.RequiredReasonCodes[i]);
                                    }
                                }
                                else {
                                    _this.RequiredReasonCodes[i] = new ReasonCodeClass(odataObject.RequiredReasonCodes[i]);
                                }
                            }
                            else {
                                _this.RequiredReasonCodes[i] = undefined;
                            }
                        }
                    }
                    _this.TransactionRequiredReasonCodeIds = undefined;
                    if (odataObject.TransactionRequiredReasonCodeIds) {
                        _this.TransactionRequiredReasonCodeIds = [];
                        for (var i = 0; i < odataObject.TransactionRequiredReasonCodeIds.length; i++) {
                            if (odataObject.TransactionRequiredReasonCodeIds[i] != null) {
                                _this.TransactionRequiredReasonCodeIds[i] = odataObject.TransactionRequiredReasonCodeIds[i];
                            }
                            else {
                                _this.TransactionRequiredReasonCodeIds[i] = undefined;
                            }
                        }
                    }
                    _this.ReasonCodeRequirements = undefined;
                    if (odataObject.ReasonCodeRequirements) {
                        _this.ReasonCodeRequirements = [];
                        for (var i = 0; i < odataObject.ReasonCodeRequirements.length; i++) {
                            if (odataObject.ReasonCodeRequirements[i] != null) {
                                if (odataObject.ReasonCodeRequirements[i]['@odata.type'] != null) {
                                    var className = odataObject.ReasonCodeRequirements[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.ReasonCodeRequirements[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeRequirements[i]);
                                    }
                                }
                                else {
                                    _this.ReasonCodeRequirements[i] = new ReasonCodeRequirementClass(odataObject.ReasonCodeRequirements[i]);
                                }
                            }
                            else {
                                _this.ReasonCodeRequirements[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.MissingRequiredReasonCodeException";
                    return _this;
                }
                return MissingRequiredReasonCodeExceptionClass;
            }(DataValidationExceptionClass));
            Entities.MissingRequiredReasonCodeExceptionClass = MissingRequiredReasonCodeExceptionClass;
            var SecurityExceptionClass = (function (_super) {
                __extends(SecurityExceptionClass, _super);
                function SecurityExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.SecurityException";
                    return _this;
                }
                return SecurityExceptionClass;
            }(CommerceExceptionClass));
            Entities.SecurityExceptionClass = SecurityExceptionClass;
            var DeviceAuthenticationExceptionClass = (function (_super) {
                __extends(DeviceAuthenticationExceptionClass, _super);
                function DeviceAuthenticationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DeviceAuthenticationException";
                    return _this;
                }
                return DeviceAuthenticationExceptionClass;
            }(SecurityExceptionClass));
            Entities.DeviceAuthenticationExceptionClass = DeviceAuthenticationExceptionClass;
            var HeadquarterTransactionServiceExceptionClass = (function (_super) {
                __extends(HeadquarterTransactionServiceExceptionClass, _super);
                function HeadquarterTransactionServiceExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.HeadquarterTransactionServiceException";
                    return _this;
                }
                return HeadquarterTransactionServiceExceptionClass;
            }(CommerceExceptionClass));
            Entities.HeadquarterTransactionServiceExceptionClass = HeadquarterTransactionServiceExceptionClass;
            var UserAuthenticationExceptionClass = (function (_super) {
                __extends(UserAuthenticationExceptionClass, _super);
                function UserAuthenticationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.UserAuthenticationException";
                    return _this;
                }
                return UserAuthenticationExceptionClass;
            }(SecurityExceptionClass));
            Entities.UserAuthenticationExceptionClass = UserAuthenticationExceptionClass;
            var UserAuthorizationExceptionClass = (function (_super) {
                __extends(UserAuthorizationExceptionClass, _super);
                function UserAuthorizationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.UserAuthorizationException";
                    return _this;
                }
                return UserAuthorizationExceptionClass;
            }(SecurityExceptionClass));
            Entities.UserAuthorizationExceptionClass = UserAuthorizationExceptionClass;
            var FeatureNotSupportedExceptionClass = (function (_super) {
                __extends(FeatureNotSupportedExceptionClass, _super);
                function FeatureNotSupportedExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.FeatureNotSupportedException";
                    return _this;
                }
                return FeatureNotSupportedExceptionClass;
            }(CommerceExceptionClass));
            Entities.FeatureNotSupportedExceptionClass = FeatureNotSupportedExceptionClass;
            var CartValidationExceptionClass = (function (_super) {
                __extends(CartValidationExceptionClass, _super);
                function CartValidationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.CartValidationException";
                    return _this;
                }
                return CartValidationExceptionClass;
            }(DataValidationExceptionClass));
            Entities.CartValidationExceptionClass = CartValidationExceptionClass;
            var TenderValidationExceptionClass = (function (_super) {
                __extends(TenderValidationExceptionClass, _super);
                function TenderValidationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.TenderTypeId = odataObject.TenderTypeId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.TenderValidationException";
                    return _this;
                }
                return TenderValidationExceptionClass;
            }(DataValidationExceptionClass));
            Entities.TenderValidationExceptionClass = TenderValidationExceptionClass;
            var PaymentExceptionClass = (function (_super) {
                __extends(PaymentExceptionClass, _super);
                function PaymentExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.PaymentSdkErrors = undefined;
                    if (odataObject.PaymentSdkErrors) {
                        _this.PaymentSdkErrors = [];
                        for (var i = 0; i < odataObject.PaymentSdkErrors.length; i++) {
                            if (odataObject.PaymentSdkErrors[i] != null) {
                                if (odataObject.PaymentSdkErrors[i]['@odata.type'] != null) {
                                    var className = odataObject.PaymentSdkErrors[i]['@odata.type'];
                                    className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                                    if (Commerce.Proxy.Entities[className]) {
                                        _this.PaymentSdkErrors[i] = new Commerce.Proxy.Entities[className](odataObject.PaymentSdkErrors[i]);
                                    }
                                }
                                else {
                                    _this.PaymentSdkErrors[i] = new PaymentErrorClass(odataObject.PaymentSdkErrors[i]);
                                }
                            }
                            else {
                                _this.PaymentSdkErrors[i] = undefined;
                            }
                        }
                    }
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.PaymentException";
                    return _this;
                }
                return PaymentExceptionClass;
            }(CommerceExceptionClass));
            Entities.PaymentExceptionClass = PaymentExceptionClass;
            var CommerceDataExchangeExceptionClass = (function (_super) {
                __extends(CommerceDataExchangeExceptionClass, _super);
                function CommerceDataExchangeExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.CommerceDataExchangeException";
                    return _this;
                }
                return CommerceDataExchangeExceptionClass;
            }(CommerceExceptionClass));
            Entities.CommerceDataExchangeExceptionClass = CommerceDataExchangeExceptionClass;
            var ExtensibleEnumerationExceptionClass = (function (_super) {
                __extends(ExtensibleEnumerationExceptionClass, _super);
                function ExtensibleEnumerationExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ExtensibleEnumerationException";
                    return _this;
                }
                return ExtensibleEnumerationExceptionClass;
            }(CommerceExceptionClass));
            Entities.ExtensibleEnumerationExceptionClass = ExtensibleEnumerationExceptionClass;
            var DataValidationFailureClass = (function () {
                function DataValidationFailureClass(odataObject) {
                    odataObject = odataObject || {};
                    this.ErrorContext = odataObject.ErrorContext;
                    this.ErrorResourceId = odataObject.ErrorResourceId;
                    this.MemberNames = undefined;
                    if (odataObject.MemberNames) {
                        this.MemberNames = [];
                        for (var i = 0; i < odataObject.MemberNames.length; i++) {
                            if (odataObject.MemberNames[i] != null) {
                                this.MemberNames[i] = odataObject.MemberNames[i];
                            }
                            else {
                                this.MemberNames[i] = undefined;
                            }
                        }
                    }
                    this.LocalizedMessage = odataObject.LocalizedMessage;
                }
                return DataValidationFailureClass;
            }());
            Entities.DataValidationFailureClass = DataValidationFailureClass;
            var ItemDiscontinuedExceptionClass = (function (_super) {
                __extends(ItemDiscontinuedExceptionClass, _super);
                function ItemDiscontinuedExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.RemovedUnavailableItemIds = odataObject.RemovedUnavailableItemIds;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ItemDiscontinuedException";
                    return _this;
                }
                return ItemDiscontinuedExceptionClass;
            }(CommerceExceptionClass));
            Entities.ItemDiscontinuedExceptionClass = ItemDiscontinuedExceptionClass;
            var InsufficientCredentialLengthExceptionClass = (function (_super) {
                __extends(InsufficientCredentialLengthExceptionClass, _super);
                function InsufficientCredentialLengthExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.ActualLength = odataObject.ActualLength;
                    _this.MinLength = odataObject.MinLength;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.InsufficientCredentialLengthException";
                    return _this;
                }
                return InsufficientCredentialLengthExceptionClass;
            }(DataValidationExceptionClass));
            Entities.InsufficientCredentialLengthExceptionClass = InsufficientCredentialLengthExceptionClass;
            var StaffPasswordExpiredExceptionClass = (function (_super) {
                __extends(StaffPasswordExpiredExceptionClass, _super);
                function StaffPasswordExpiredExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.StaffId = odataObject.StaffId;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.StaffPasswordExpiredException";
                    return _this;
                }
                return StaffPasswordExpiredExceptionClass;
            }(UserAuthenticationExceptionClass));
            Entities.StaffPasswordExpiredExceptionClass = StaffPasswordExpiredExceptionClass;
            var WrongEndpointExceptionClass = (function (_super) {
                __extends(WrongEndpointExceptionClass, _super);
                function WrongEndpointExceptionClass(odataObject) {
                    var _this = _super.call(this, odataObject) || this;
                    odataObject = odataObject || {};
                    _this.RedirectUri = odataObject.RedirectUri;
                    _this["@odata.type"] = "#Microsoft.Dynamics.Retail.RetailServerLibrary.WrongEndpointException";
                    return _this;
                }
                return WrongEndpointExceptionClass;
            }(CommerceExceptionClass));
            Entities.WrongEndpointExceptionClass = WrongEndpointExceptionClass;
        })(Entities = Proxy.Entities || (Proxy.Entities = {}));
    })(Proxy = Commerce.Proxy || (Commerce.Proxy = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ConnectionStatusType;
            (function (ConnectionStatusType) {
                ConnectionStatusType[ConnectionStatusType["Online"] = 0] = "Online";
                ConnectionStatusType[ConnectionStatusType["SeamlessOffline"] = 1] = "SeamlessOffline";
                ConnectionStatusType[ConnectionStatusType["ManualOffline"] = 2] = "ManualOffline";
            })(ConnectionStatusType = Entities.ConnectionStatusType || (Entities.ConnectionStatusType = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ExtensionError = (function (_super) {
                __extends(ExtensionError, _super);
                function ExtensionError(localizedMessage) {
                    var _this = _super.call(this) || this;
                    _this.__proto__ = ExtensionError.prototype;
                    _this.localizedMessage = localizedMessage;
                    return _this;
                }
                return ExtensionError;
            }(Error));
            Entities.ExtensionError = ExtensionError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var GiftCardEntryType;
            (function (GiftCardEntryType) {
                GiftCardEntryType[GiftCardEntryType["Keyboard"] = 0] = "Keyboard";
                GiftCardEntryType[GiftCardEntryType["Barcode"] = 1] = "Barcode";
                GiftCardEntryType[GiftCardEntryType["MagneticStripReader"] = 2] = "MagneticStripReader";
                GiftCardEntryType[GiftCardEntryType["PaymentTerminal"] = 3] = "PaymentTerminal";
            })(GiftCardEntryType = Entities.GiftCardEntryType || (Entities.GiftCardEntryType = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var GiftCardOperation;
            (function (GiftCardOperation) {
                GiftCardOperation[GiftCardOperation["None"] = 0] = "None";
                GiftCardOperation[GiftCardOperation["IssueNew"] = 1] = "IssueNew";
                GiftCardOperation[GiftCardOperation["AddExisting"] = 2] = "AddExisting";
                GiftCardOperation[GiftCardOperation["CheckBalance"] = 3] = "CheckBalance";
                GiftCardOperation[GiftCardOperation["Pay"] = 4] = "Pay";
                GiftCardOperation[GiftCardOperation["CashOut"] = 5] = "CashOut";
            })(GiftCardOperation = Entities.GiftCardOperation || (Entities.GiftCardOperation = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowJournalMode;
            (function (ShowJournalMode) {
                ShowJournalMode[ShowJournalMode["ShowJournal"] = 0] = "ShowJournal";
                ShowJournalMode[ShowJournalMode["CustomerSalesOrders"] = 1] = "CustomerSalesOrders";
                ShowJournalMode[ShowJournalMode["SingleCustomerSalesOrder"] = 2] = "SingleCustomerSalesOrder";
            })(ShowJournalMode = Entities.ShowJournalMode || (Entities.ShowJournalMode = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            var Dialogs;
            (function (Dialogs) {
                "use strict";
            })(Dialogs = Entities.Dialogs || (Entities.Dialogs = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowInputDialogError = (function (_super) {
                __extends(ShowInputDialogError, _super);
                function ShowInputDialogError(errorMessage, newDialogValue) {
                    var _this = _super.call(this, errorMessage) || this;
                    _this.__proto__ = ShowInputDialogError.prototype;
                    _this.newDialogValue = newDialogValue;
                    return _this;
                }
                return ShowInputDialogError;
            }(Client.Entities.ExtensionError));
            Entities.ShowInputDialogError = ShowInputDialogError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowAlphanumericInputDialogError = (function (_super) {
                __extends(ShowAlphanumericInputDialogError, _super);
                function ShowAlphanumericInputDialogError(errorMessage, newDialogValue) {
                    var _this = _super.call(this, errorMessage, newDialogValue) || this;
                    _this.__proto__ = ShowAlphanumericInputDialogError.prototype;
                    return _this;
                }
                return ShowAlphanumericInputDialogError;
            }(Client.Entities.ShowInputDialogError));
            Entities.ShowAlphanumericInputDialogError = ShowAlphanumericInputDialogError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowListInputDialogError = (function (_super) {
                __extends(ShowListInputDialogError, _super);
                function ShowListInputDialogError(errorMessage, newDialogValue) {
                    var _this = _super.call(this, errorMessage, newDialogValue) || this;
                    _this.__proto__ = ShowListInputDialogError.prototype;
                    return _this;
                }
                return ShowListInputDialogError;
            }(Client.Entities.ShowInputDialogError));
            Entities.ShowListInputDialogError = ShowListInputDialogError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowNumericInputDialogError = (function (_super) {
                __extends(ShowNumericInputDialogError, _super);
                function ShowNumericInputDialogError(errorMessage, newDialogValue) {
                    var _this = _super.call(this, errorMessage, newDialogValue) || this;
                    _this.__proto__ = ShowNumericInputDialogError.prototype;
                    return _this;
                }
                return ShowNumericInputDialogError;
            }(Client.Entities.ShowInputDialogError));
            Entities.ShowNumericInputDialogError = ShowNumericInputDialogError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var ShowTextInputDialogError = (function (_super) {
                __extends(ShowTextInputDialogError, _super);
                function ShowTextInputDialogError(errorMessage, newDialogValue) {
                    var _this = _super.call(this, errorMessage, newDialogValue) || this;
                    _this.__proto__ = ShowTextInputDialogError.prototype;
                    return _this;
                }
                return ShowTextInputDialogError;
            }(Client.Entities.ShowInputDialogError));
            Entities.ShowTextInputDialogError = ShowTextInputDialogError;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce_1) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var NavigationParameters = (function () {
                function NavigationParameters(correlationId) {
                    if (typeof correlationId !== "string" || correlationId === "" || correlationId.trim() === "") {
                        throw new Error("Invalid parameter provided to NavigationParameters constructor: correlationId must be a non-whitespace string.");
                    }
                    this.correlationId = correlationId;
                }
                NavigationParameters.generateCorrelationId = function () {
                    return Commerce.LoggerHelper.getNewCorrelationId();
                };
                return NavigationParameters;
            }());
            Entities.NavigationParameters = NavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce_1.Client || (Commerce_1.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var CartViewNavigationParameters = (function (_super) {
                __extends(CartViewNavigationParameters, _super);
                function CartViewNavigationParameters(correlationId) {
                    var _this = this;
                    correlationId = correlationId || Entities.NavigationParameters.generateCorrelationId();
                    _this = _super.call(this, correlationId) || this;
                    return _this;
                }
                return CartViewNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.CartViewNavigationParameters = CartViewNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var CustomerDetailsNavigationParameters = (function (_super) {
                __extends(CustomerDetailsNavigationParameters, _super);
                function CustomerDetailsNavigationParameters(accountNumber, correlationId) {
                    var _this = this;
                    correlationId = correlationId || Entities.NavigationParameters.generateCorrelationId();
                    _this = _super.call(this, correlationId) || this;
                    if (typeof accountNumber !== "string") {
                        throw new Error("Invalid parameter provided to CustomerDetailsNavigationParameters constructor: accountNumber must be a string.");
                    }
                    _this.accountNumber = accountNumber;
                    return _this;
                }
                return CustomerDetailsNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.CustomerDetailsNavigationParameters = CustomerDetailsNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var HomeViewNavigationParameters = (function (_super) {
                __extends(HomeViewNavigationParameters, _super);
                function HomeViewNavigationParameters() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return HomeViewNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.HomeViewNavigationParameters = HomeViewNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var InventoryLookupNavigationParameters = (function (_super) {
                __extends(InventoryLookupNavigationParameters, _super);
                function InventoryLookupNavigationParameters(correlationId, product) {
                    var _this = _super.call(this, correlationId) || this;
                    _this.product = product;
                    return _this;
                }
                return InventoryLookupNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.InventoryLookupNavigationParameters = InventoryLookupNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var SearchViewSearchEntity;
            (function (SearchViewSearchEntity) {
                SearchViewSearchEntity[SearchViewSearchEntity["Product"] = 0] = "Product";
                SearchViewSearchEntity[SearchViewSearchEntity["Customer"] = 1] = "Customer";
            })(SearchViewSearchEntity = Entities.SearchViewSearchEntity || (Entities.SearchViewSearchEntity = {}));
            var SearchNavigationParameters = (function (_super) {
                __extends(SearchNavigationParameters, _super);
                function SearchNavigationParameters(searchEntity, searchText, correlationId) {
                    var _this = this;
                    correlationId = correlationId || Entities.NavigationParameters.generateCorrelationId();
                    _this = _super.call(this, correlationId) || this;
                    if (searchEntity === null || typeof searchEntity === "undefined") {
                        throw new Error("Invalid parameter provided to SearchNavigationParameters constructor: searchEntity cannot be null or undefined.");
                    }
                    _this.searchEntity = searchEntity;
                    _this.searchText = searchText || "";
                    return _this;
                }
                return SearchNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.SearchNavigationParameters = SearchNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var SearchOrdersNavigationParameters = (function (_super) {
                __extends(SearchOrdersNavigationParameters, _super);
                function SearchOrdersNavigationParameters(correlationId, searchCriteria) {
                    var _this = _super.call(this, correlationId) || this;
                    _this.searchCriteria = searchCriteria;
                    return _this;
                }
                return SearchOrdersNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.SearchOrdersNavigationParameters = SearchOrdersNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var SimpleProductDetailsNavigationParameters = (function (_super) {
                __extends(SimpleProductDetailsNavigationParameters, _super);
                function SimpleProductDetailsNavigationParameters(productId, correlationId) {
                    var _this = this;
                    correlationId = correlationId || Entities.NavigationParameters.generateCorrelationId();
                    _this = _super.call(this, correlationId) || this;
                    if (typeof productId !== "number") {
                        throw new Error("Invalid parameter provided to SimpleProductDetailsNavigationParameters constructor: productId must be a number.");
                    }
                    _this.productId = productId;
                    return _this;
                }
                return SimpleProductDetailsNavigationParameters;
            }(Entities.NavigationParameters));
            Entities.SimpleProductDetailsNavigationParameters = SimpleProductDetailsNavigationParameters;
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Proxy;
    (function (Proxy) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Proxy.Entities || (Proxy.Entities = {}));
    })(Proxy = Commerce.Proxy || (Commerce.Proxy = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
            var PaymentSdkContentType;
            (function (PaymentSdkContentType) {
                PaymentSdkContentType[PaymentSdkContentType["Authorization"] = 0] = "Authorization";
                PaymentSdkContentType[PaymentSdkContentType["AuthorizationAndCardToken"] = 1] = "AuthorizationAndCardToken";
                PaymentSdkContentType[PaymentSdkContentType["CardToken"] = 2] = "CardToken";
            })(PaymentSdkContentType = Entities.PaymentSdkContentType || (Entities.PaymentSdkContentType = {}));
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
var Commerce;
(function (Commerce) {
    var Client;
    (function (Client) {
        var Entities;
        (function (Entities) {
            "use strict";
        })(Entities = Client.Entities || (Client.Entities = {}));
    })(Client = Commerce.Client || (Commerce.Client = {}));
})(Commerce || (Commerce = {}));
//# sourceMappingURL=Commerce.Entities.Public.js.map
// SIG // Begin signature block
// SIG // MIIkeAYJKoZIhvcNAQcCoIIkaTCCJGUCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // WwE0PxFO3BUdyeZBjSM0bFaBNTQ1XgWBcp8rBSvuKl6g
// SIG // gg2BMIIF/zCCA+egAwIBAgITMwAAAQNeJRyZH6MeuAAA
// SIG // AAABAzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTE4MDcxMjIwMDg0OFoX
// SIG // DTE5MDcyNjIwMDg0OFowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 0ZR2NuaGqzb+aflGfIuIUMuQcH+wVakkHX455wWfD6x7
// SIG // l7LOcwr71JskXBa1Od0bfjNsEfw7JvOYql1Ta6rD7BO4
// SIG // 0u/PV3/MZcuvTS4ysVYrTjQHif5pIb0+RPveEp2Fv3x2
// SIG // hn1ysXabYeaKZExGzrbVOox3k3dnIZy2WgZeR4b1PNEJ
// SIG // yg09zbLpoVB40YSI4gE8IvyvlgjMXZnA7eulWpiS9chA
// SIG // Tmpzr97jdHrTX0aXvOJnKHeZrMEOMRaPAA8B/kteVA/K
// SIG // xGU/CuOjRtv2LAM6Gb5oBRac5n80v6eHjWU5Jslj1O/F
// SIG // 3b0l/v0o9DSGeawq1V8wkTvkFGrrscoEIwIDAQABo4IB
// SIG // fjCCAXowHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFEe+wMvhpj/9ZdY48gNdt693
// SIG // 90D/MFAGA1UdEQRJMEekRTBDMSkwJwYDVQQLEyBNaWNy
// SIG // b3NvZnQgT3BlcmF0aW9ucyBQdWVydG8gUmljbzEWMBQG
// SIG // A1UEBRMNMjMwMDEyKzQzNzk2NTAfBgNVHSMEGDAWgBRI
// SIG // bmTlUAXTgqoXNzcitW2oynUClTBUBgNVHR8ETTBLMEmg
// SIG // R6BFhkNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtp
// SIG // b3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDct
// SIG // MDguY3JsMGEGCCsGAQUFBwEBBFUwUzBRBggrBgEFBQcw
// SIG // AoZFaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9w
// SIG // cy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDct
// SIG // MDguY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL
// SIG // BQADggIBAJ/1yVMNPw0m7KJE2A3Rn2OWBks/HlzFM6Ok
// SIG // w2yvH8ABuutl7J4zEA+nrFvUvZBhF+cx58MmtKz1J9NI
// SIG // k4aI/hI1kWQi0WstO6gsFZQp0jeW5jX/DM7IBhYWniSx
// SIG // 4jn5bg542AwbtilgJ3Y0JJvduZd1ywE7rYISFiKAiRWE
// SIG // u5hQILAXJoZJr859RRVDNJbPgVwYLNST8mer4nPIPaPN
// SIG // /DIeYBzpsBsw+yy7By6WhJNFKFRczZb9oNuB2LYwykOx
// SIG // 80jAskYcXV52Klif1O7y9PpITLVhi7CMQemquJ2Q9P9q
// SIG // Qg+5PukO7JT8jYC7eOMjp3hbsm0f+VnBfbbROcl54IMc
// SIG // YAraPbDR7Ta/RQfpGzZu5T07BQOn1KclEo/mdqMTs0Va
// SIG // QzGC2tiErrmwH3X19h19URE3J+i1NYRx91eqrvqJccmY
// SIG // 0p5aZHa+jMN9FWqR8RT08tk1Mbjbcvq0dciIm2q/mEXH
// SIG // ZrLX/86SkHXk6+aG0sgb2yfAW5VvSW9YXWkq3lNL+OjK
// SIG // e/ZsFfkDGQ8RhapPmr+qV91gxvVxIPRRqJrK6dHrNEc9
// SIG // dfoi7FU/ahk5axDpWj+O9CN4MLLypjjLNY2qmFkkQLg6
// SIG // Z6QHX6D+2DtJE/sM4e0LbYNQzvB/PuDZCOiMIUpBwt7r
// SIG // jlvuA8Mdbm7mVDVmZ3J8GupS9iLEcj+uMIIHejCCBWKg
// SIG // AwIBAgIKYQ6Q0gAAAAAAAzANBgkqhkiG9w0BAQsFADCB
// SIG // iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWlj
// SIG // cm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
// SIG // IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEw
// SIG // OTA5WjB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQD
// SIG // Ex9NaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDEx
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // q/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4Bjga
// SIG // BEm6f8MMHt03a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSH
// SIG // fpRgJGyvnkmc6Whe0t+bU7IKLMOv2akrrnoJr9eWWcpg
// SIG // GgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpc
// SIG // oRb0RrrgOGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnn
// SIG // Db6gE3e+lD3v++MrWhAfTVYoonpy4BI6t0le2O3tQ5GD
// SIG // 2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLT
// SIG // swM9sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOE
// SIG // y/S6A4aN91/w0FK/jJSHvMAhdCVfGCi2zCcoOCWYOUo2
// SIG // z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8k
// SIG // A/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL
// SIG // 5zmhD+kjSbwYuER8ReTBw3J64HLnJN+/RpnF78IcV9uD
// SIG // jexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmnEyim
// SIG // p31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8Hh
// SIG // hUSJxAlMxdSlQy90lfdu+HggWCwTXWCVmj5PM4TasIgX
// SIG // 3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0wggHpMBAG
// SIG // CSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXT
// SIG // gqoXNzcitW2oynUClTAZBgkrBgEEAYI3FAIEDB4KAFMA
// SIG // dQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw
// SIG // AwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx
// SIG // 0SOJNDBaBgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3Js
// SIG // Lm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9N
// SIG // aWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4G
// SIG // CCsGAQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNV
// SIG // HSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEF
// SIG // BQcCARYzaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3Br
// SIG // aW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsGAQUF
// SIG // BwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5
// SIG // AF8AcwB0AGEAdABlAG0AZQBuAHQALiAdMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKbC5YR4WOS
// SIG // mUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np
// SIG // 22O/IjWll11lhJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r
// SIG // 4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6I/MTfaaQdION
// SIG // 9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWlu
// SIG // WpiW5IP0wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiX
// SIG // mE0OPQvyCInWH8MyGOLwxS3OW560STkKxgrCxq2u5bLZ
// SIG // 2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNA
// SIG // BQamASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPD
// SIG // XVJihsMdYzaXht/a8/jyFqGaJ+HNpZfQ7l1jQeNbB5yH
// SIG // PgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ah
// SIG // XJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbS
// SIG // oqKfenoi+kiVH6v7RyOA9Z74v2u3S5fi63V4GuzqN5l5
// SIG // GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33VtY5E9
// SIG // 0Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZO
// SIG // SEXAQsmbdlsKgEhr/Xmfwb1tbWrJUnMTDXpQzTGCFk8w
// SIG // ghZLAgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQI
// SIG // EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
// SIG // HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAm
// SIG // BgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25pbmcgUENB
// SIG // IDIwMTECEzMAAAEDXiUcmR+jHrgAAAAAAQMwDQYJYIZI
// SIG // AWUDBAIBBQCggdAwGQYJKoZIhvcNAQkDMQwGCisGAQQB
// SIG // gjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcC
// SIG // ARUwLwYJKoZIhvcNAQkEMSIEIOA0Q/HzNM0T2rGl5uqN
// SIG // k/VgqxzCkyzRcM9Lyh4d19h2MGQGCisGAQQBgjcCAQwx
// SIG // VjBUoDaANABnAGwAbwBiAGEAbABpAHoAZQAuAGMAdQBs
// SIG // AHQAdQByAGUALgBsAHYALQBMAFYALgBqAHOhGoAYaHR0
// SIG // cDovL3d3dy5taWNyb3NvZnQuY29tMA0GCSqGSIb3DQEB
// SIG // AQUABIIBAGEtKAkxxqzsXqE71IHcy1dfI3fLuirymzX7
// SIG // 8SzPmsHTiO0o8SvfFgU5A7Dj/JfjVtCLm58yH5hDwqQq
// SIG // sc7sWsYRy8OJ83PL8HLCC2IJuhZG+K38rlRXR+ZEw5u5
// SIG // aVZ0nQg+Nu+QznqnbIUE5cV7oFaywGQ4AHoUxYG5s3Tp
// SIG // 981vuZAbWY0G2iJvkWxfRP8ZNRKBOwEi58HDf2g51Tmn
// SIG // qSDAy1uUyAlYr8k6Ra4v3knUXE8kby1GNOBSV1WEg+CM
// SIG // umGLZqN81xvWE97sL2cSUt/skSChLjr7lrlk4FKAG5iS
// SIG // IFSoiYLxRnDuaKuZCOqZ4aXlGIRq/4v6pRUakUJdOimh
// SIG // ghO3MIITswYKKwYBBAGCNwMDATGCE6MwghOfBgkqhkiG
// SIG // 9w0BBwKgghOQMIITjAIBAzEPMA0GCWCGSAFlAwQCAQUA
// SIG // MIIBWAYLKoZIhvcNAQkQAQSgggFHBIIBQzCCAT8CAQEG
// SIG // CisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQgXnfR
// SIG // yOvg4NMGUaDf5SsErVcifNuVI2CYkqDIwqT9jyoCBlx2
// SIG // 7wGATRgTMjAxOTAzMTIwOTU2MDQuNzM2WjAHAgEBgAIB
// SIG // 9KCB1KSB0TCBzjELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEpMCcG
// SIG // A1UECxMgTWljcm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRv
// SIG // IFJpY28xJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNOOkY1
// SIG // MjgtMzc3Ny04QTc2MSUwIwYDVQQDExxNaWNyb3NvZnQg
// SIG // VGltZS1TdGFtcCBTZXJ2aWNloIIPHzCCBPUwggPdoAMC
// SIG // AQICEzMAAADRmM/kPJklZIQAAAAAANEwDQYJKoZIhvcN
// SIG // AQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
// SIG // c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
// SIG // BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UE
// SIG // AxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAw
// SIG // HhcNMTgwODIzMjAyNjMzWhcNMTkxMTIzMjAyNjMzWjCB
// SIG // zjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEpMCcGA1UECxMgTWlj
// SIG // cm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xJjAk
// SIG // BgNVBAsTHVRoYWxlcyBUU1MgRVNOOkY1MjgtMzc3Ny04
// SIG // QTc2MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFt
// SIG // cCBTZXJ2aWNlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
// SIG // MIIBCgKCAQEA7wDOxEyGqfaSKQqEPfMK7QKtk1H+sj/k
// SIG // yTnn6kQtbiyktUBLYnmL2kiYX38v6EJYHX5UAGvU7pns
// SIG // kuxwvI1Af2H7jbm4PD+P02K9lx1iFAdLlpdQauWD6EEj
// SIG // TipN1VdUWIvPtCc504JBZZPfjG7CIMVJNTek0PfMFNTO
// SIG // C0cbYMe5n0pgIEFAjmH4OmlJOsiXaGs2iLaHTjy3rz6T
// SIG // MLNlvG1wMHkl2+c+SWYlbR6JoFQ0sNAEn6qKxGgR7kpd
// SIG // dQlu9wVKHjRLU8cXmEpJIxrZ3Owr7tTs31JcyVrlZg4a
// SIG // yFlIP04qI3NHbiLqA1jEfHaquR7FbqPYz84KPzNykyrH
// SIG // /wIDAQABo4IBGzCCARcwHQYDVR0OBBYEFIP7EkVwNv9n
// SIG // ibpQi93Jxj1U82oMMB8GA1UdIwQYMBaAFNVjOlyKMZDz
// SIG // Q3t8RhvFM2hahW1VMFYGA1UdHwRPME0wS6BJoEeGRWh0
// SIG // dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3By
// SIG // b2R1Y3RzL01pY1RpbVN0YVBDQV8yMDEwLTA3LTAxLmNy
// SIG // bDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljVGltU3RhUENBXzIwMTAtMDctMDEuY3J0MAwGA1Ud
// SIG // EwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwgwDQYJ
// SIG // KoZIhvcNAQELBQADggEBADrgMufapAT0iR6YGdEleg09
// SIG // nyLZRqYv1LLOfaQRHBW4FniWuU2Ndx3MYQXAqmfG3Dic
// SIG // dvB3JpTEN/bo27R9wYDT7xgmqKfFblG7yvS4ttuf/kMI
// SIG // SGegL94YS1CSBBULammK6Vr5STlFJOr8D3TGdPviOciA
// SIG // ZC4L22m3MubLcsdgEY5towI/EVpWR5r0EvzunGeTykYU
// SIG // X/Tr00UhkZvk6MwImCSrLJwcRv4qT4f8lPR+6rJ2SfwJ
// SIG // eTyWtX8x6GVr6MRwYtbYNIF0z0SmrzhmfjLDNT2zZGLr
// SIG // cp940BF++Qs1NaINHA+GiBXs7o7pjXvX7Vs6jhGCBYV1
// SIG // 8Bf8laWayigwggZxMIIEWaADAgECAgphCYEqAAAAAAAC
// SIG // MA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0
// SIG // aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0xMDA3MDEy
// SIG // MTM2NTVaFw0yNTA3MDEyMTQ2NTVaMHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwMIIBIjANBgkqhkiG9w0BAQEF
// SIG // AAOCAQ8AMIIBCgKCAQEAqR0NvHcRijog7PwTl/X6f2mU
// SIG // a3RUENWlCgCChfvtfGhLLF/Fw+Vhwna3PmYrW/AVUycE
// SIG // MR9BGxqVHc4JE458YTBZsTBED/FgiIRUQwzXTbg4CLNC
// SIG // 3ZOs1nMwVyaCo0UN0Or1R4HNvyRgMlhgRvJYR4YyhB50
// SIG // YWeRX4FUsc+TTJLBxKZd0WETbijGGvmGgLvfYfxGwScd
// SIG // JGcSchohiq9LZIlQYrFd/XcfPfBXday9ikJNQFHRD5wG
// SIG // Pmd/9WbAA5ZEfu/QS/1u5ZrKsajyeioKMfDaTgaRtogI
// SIG // Neh4HLDpmc085y9Euqf03GS9pAHBIAmTeM38vMDJRF1e
// SIG // FpwBBU8iTQIDAQABo4IB5jCCAeIwEAYJKwYBBAGCNxUB
// SIG // BAMCAQAwHQYDVR0OBBYEFNVjOlyKMZDzQ3t8RhvFM2ha
// SIG // hW1VMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsG
// SIG // A1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1Ud
// SIG // IwQYMBaAFNX2VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1Ud
// SIG // HwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0
// SIG // LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1
// SIG // dF8yMDEwLTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEww
// SIG // SgYIKwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0
// SIG // LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAt
// SIG // MDYtMjMuY3J0MIGgBgNVHSABAf8EgZUwgZIwgY8GCSsG
// SIG // AQQBgjcuAzCBgTA9BggrBgEFBQcCARYxaHR0cDovL3d3
// SIG // dy5taWNyb3NvZnQuY29tL1BLSS9kb2NzL0NQUy9kZWZh
// SIG // dWx0Lmh0bTBABggrBgEFBQcCAjA0HjIgHQBMAGUAZwBh
// SIG // AGwAXwBQAG8AbABpAGMAeQBfAFMAdABhAHQAZQBtAGUA
// SIG // bgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEAB+aIUQ3i
// SIG // xuCYP4FxAz2do6Ehb7Prpsz1Mb7PBeKp/vpXbRkws8LF
// SIG // Zslq3/Xn8Hi9x6ieJeP5vO1rVFcIK1GCRBL7uVOMzPRg
// SIG // Eop2zEBAQZvcXBf/XPleFzWYJFZLdO9CEMivv3/Gf/I3
// SIG // fVo/HPKZeUqRUgCvOA8X9S95gWXZqbVr5MfO9sp6AG9L
// SIG // MEQkIjzP7QOllo9ZKby2/QThcJ8ySif9Va8v/rbljjO7
// SIG // Yl+a21dA6fHOmWaQjP9qYn/dxUoLkSbiOewZSnFjnXsh
// SIG // bcOco6I8+n99lmqQeKZt0uGc+R38ONiU9MalCpaGpL2e
// SIG // Gq4EQoO4tYCbIjggtSXlZOz39L9+Y1klD3ouOVd2onGq
// SIG // BooPiRa6YacRy5rYDkeagMXQzafQ732D8OE7cQnfXXSY
// SIG // Ighh2rBQHm+98eEA3+cxB6STOvdlR3jo+KhIq/fecn5h
// SIG // a293qYHLpwmsObvsxsvYgrRyzR30uIUBHoD7G4kqVDmy
// SIG // W9rIDVWZeodzOwjmmC3qjeAzLhIp9cAvVCch98isTtoo
// SIG // uLGp25ayp0Kiyc8ZQU3ghvkqmqMRZjDTu3QyS99je/WZ
// SIG // ii8bxyGvWbWu3EQ8l1Bx16HSxVXjad5XwdHeMMD9zOZN
// SIG // +w2/XU/pnR4ZOC+8z1gFLu8NoFA12u8JJxzVs341Hgi6
// SIG // 2jbb01+P3nSISRKhggOtMIIClQIBATCB/qGB1KSB0TCB
// SIG // zjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEpMCcGA1UECxMgTWlj
// SIG // cm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xJjAk
// SIG // BgNVBAsTHVRoYWxlcyBUU1MgRVNOOkY1MjgtMzc3Ny04
// SIG // QTc2MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFt
// SIG // cCBTZXJ2aWNloiUKAQEwCQYFKw4DAhoFAAMVAEpczNJO
// SIG // r+lrEQJ6hpddUbl2tlTxoIHeMIHbpIHYMIHVMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQg
// SIG // T3BlcmF0aW9ucyBQdWVydG8gUmljbzEnMCUGA1UECxMe
// SIG // bkNpcGhlciBOVFMgRVNOOjRERTktMEM1RS0zRTA5MSsw
// SIG // KQYDVQQDEyJNaWNyb3NvZnQgVGltZSBTb3VyY2UgTWFz
// SIG // dGVyIENsb2NrMA0GCSqGSIb3DQEBBQUAAgUA4DDagzAi
// SIG // GA8yMDE5MDMxMTIxMDA1MVoYDzIwMTkwMzEyMjEwMDUx
// SIG // WjB0MDoGCisGAQQBhFkKBAExLDAqMAoCBQDgMNqDAgEA
// SIG // MAcCAQACAhM+MAcCAQACAhpWMAoCBQDgMiwDAgEAMDYG
// SIG // CisGAQQBhFkKBAIxKDAmMAwGCisGAQQBhFkKAwGgCjAI
// SIG // AgEAAgMW42ChCjAIAgEAAgMHoSAwDQYJKoZIhvcNAQEF
// SIG // BQADggEBAHtI8pCOqgqn2fwRm/RiNzZzDAE8xFBFk/HE
// SIG // 6kDsLtQS/cdfAeAWi/C0CMO4XD8hpYyz1RlsHKqO0xIQ
// SIG // QJWXAlf5ROPKB+PHgoc3M1Of8DXeD5KKsBw5Q15lkjVA
// SIG // KQ8Uww7drR82/YULsWZpyOZbjG3ZtpAj8n3hXyj5g/3Q
// SIG // tY1hbjC9xnpM43Q/BqNihVD+3/X5H4orF5keg8qbszD9
// SIG // L9IUizeaI9Bd+8skemaXsaGbzoQXsiDj5niDrzBcBLTV
// SIG // YSsm4yw/rx5fM4yeQ5jiMB1vDHFA3NwDFECycA35aCCb
// SIG // D8WZlfKmjreG9CWquicpkyXwbb9m7yXeyMjUtnXMFqIx
// SIG // ggL1MIIC8QIBATCBkzB8MQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQ
// SIG // Q0EgMjAxMAITMwAAANGYz+Q8mSVkhAAAAAAA0TANBglg
// SIG // hkgBZQMEAgEFAKCCATIwGgYJKoZIhvcNAQkDMQ0GCyqG
// SIG // SIb3DQEJEAEEMC8GCSqGSIb3DQEJBDEiBCAZC17zWPrA
// SIG // jwCASHEkxpAL/an/xyOXPEYYHxviPZwXOzCB4gYLKoZI
// SIG // hvcNAQkQAgwxgdIwgc8wgcwwgbEEFEpczNJOr+lrEQJ6
// SIG // hpddUbl2tlTxMIGYMIGApH4wfDELMAkGA1UEBhMCVVMx
// SIG // EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
// SIG // ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3Jh
// SIG // dGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3Rh
// SIG // bXAgUENBIDIwMTACEzMAAADRmM/kPJklZIQAAAAAANEw
// SIG // FgQU+eXLCm8j8sF7RUMmZ0DRTvghZLIwDQYJKoZIhvcN
// SIG // AQELBQAEggEA4YsJzfD7sqYbWUzxgTfSM8mBPwQu1iow
// SIG // nJA1/7aLo+IO+Nod49O2riULB/A1mLku1ruhthbwxiB8
// SIG // oIRBCvLsM9t0vQgr792Ko0hPUJmCjEC91g6UqT4rQ/wa
// SIG // HhH5m3eE7S0HL456WBABDveiWwtz25oORXKH1usVWioi
// SIG // II2eptJXi1J6fq6dVRDGrYdVTqBGYGkNsWfoJKOJ9D86
// SIG // j8P5GYWyQoh4O91C8BoaEZyR8Z22ZWwCTyITuJRrzgNK
// SIG // aflbeCb7XUzL43fwiFOfgO7vk9mb1QtugDVSh7V+Ym4E
// SIG // JTUgr4zgb3+fZy777ujCmXOtqlwiaLnetaMvY2hLgrm0/Q==
// SIG // End signature block
