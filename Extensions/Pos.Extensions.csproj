<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\BuildTools\Microsoft.Dynamics.RetailSdk.Build.props" />
  <Import Project="$(TypeScriptRootPath)\Build\build\Microsoft.TypeScript.MSBuild.props" Condition="Exists('$(TypeScriptRootPath)\Build\build\Microsoft.TypeScript.MSBuild.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props') And '$(MicrosoftCommonPropsHasBeenImported)' != 'true'" />
  <Import Project="..\..\BuildTools\Microsoft.Dynamics.RetailSdk.Build.settings" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <OutputPath>bin</OutputPath>
    <OutputType>Library</OutputType>
    <AssemblyName>$(AssemblyNamePrefix).Pos.Extensions</AssemblyName>
    <ProjectGuid>{59015AA8-6ACF-4C1E-B9E8-82DD508CCDC4}</ProjectGuid>
    <PosExtensionPackagesDropRoot>$(MsBuildThisFileDirectory)..\..\Pos\SharedApp\Extensions</PosExtensionPackagesDropRoot>
    <TypeReferencesDropFolder>typings\</TypeReferencesDropFolder>
    <JsonSchemaReferencesDropFolder>schemas\</JsonSchemaReferencesDropFolder>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TypeScriptToolsVersion>2.2</TypeScriptToolsVersion>
    <PosContractsDir>..\Contracts\</PosContractsDir>
  </PropertyGroup>
  <ItemGroup Label="Libraries">
    <TypeReferences Include="$(PosContractsDir)Pos.Types.d.ts">
      <Visible>false</Visible>
    </TypeReferences>
    <TypeReferences Include="$(PosContractsDir)Pos.Api.d.ts">
      <Visible>false</Visible>
    </TypeReferences>
    <TypeReferences Include="$(PosContractsDir)Pos.UI.Sdk.d.ts">
      <Visible>false</Visible>
    </TypeReferences>
    <TypeReferences Include="$(PosContractsDir)KnockoutJS.d.ts">
      <Visible>false</Visible>
    </TypeReferences>
    <TypeReferences Include="$(PosContractsDir)DataJS.d.ts">
      <Visible>false</Visible>
    </TypeReferences>
    <JsonSchemaReferences Include="$(PosContractsDir)manifestSchema.json">
      <Visible>false</Visible>
    </JsonSchemaReferences>
    <JsonSchemaReferences Include="$(PosContractsDir)cultureInfoSchema.json">
      <Visible>false</Visible>
    </JsonSchemaReferences>
  </ItemGroup>
  <ItemGroup>
    <None Include="DaxExtensions\manifest.json" />
    <None Include="readme.md" />
    <Content Include="DaxExtensions\ViewExtensions\CustomerDetailsPanel.html" />
    <Content Include="DaxExtensions\Views\GreetingsDataListView.html" />
    <Content Include="extensions.json" />
    <Content Include="tsconfig.json" />
  </ItemGroup>
  <Target Name="CopyPosExtensionsFiles" AfterTargets="AfterBuild">
    <ItemGroup>
      <JavaScriptFileList Include="@(TypeScriptCompile->'%(RelativeDir)%(Filename).js')">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </JavaScriptFileList>
      <HtmlFileList Include="@(Content)" Condition="'%(Extension)' == '.html'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </HtmlFileList>
      <CssFileList Include="@(Content)" Condition="'%(Extension)' == '.css'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </CssFileList>
      <CssFileList Include="@(None ->'%(RelativeDir)%(Filename).min.css')" Condition="'%(Extension)' == '.scss'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </CssFileList>
      <ScssFileList Include="@(None)" Condition="'%(Extension)' == '.scss'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </ScssFileList>
      <CssMapFileList Include="@(None ->'%(RelativeDir)%(Filename).min.css.map')" Condition="'%(Extension)' == '.scss'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </CssMapFileList>
      <JsonFileList Include="@(None);@(Content)" Condition="'%(Extension)' == '.json' And '%(Filename)' != 'tsconfig'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </JsonFileList>
      <ResjsonFileList Include="@(Content)" Condition="'%(Extension)' == '.resjson'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </ResjsonFileList>
      <PngFileList Include="@(Content)" Condition="'%(Extension)' == '.png'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </PngFileList>
      <JpgFileList Include="@(Content)" Condition="'%(Extension)' == '.jpg'">
        <InProject>false</InProject>
        <Visible>false</Visible>
      </JpgFileList>
    </ItemGroup>
    <Copy SourceFiles="@(JavaScriptFileList)" DestinationFiles="@(JavaScriptFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(HtmlFileList)" DestinationFiles="@(HtmlFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(ScssFileList)" DestinationFiles="@(ScssFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(CssFileList)" DestinationFiles="@(CssFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(CssMapFileList)" DestinationFiles="@(CssMapFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(JsonFileList)" DestinationFiles="@(JsonFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(ResjsonFileList)" DestinationFiles="@(ResjsonFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(PngFileList)" DestinationFiles="@(PngFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(JpgFileList)" DestinationFiles="@(JpgFileList->'$(PosExtensionPackagesDropRoot)\%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="CopyReferences" BeforeTargets="BeforeBuild" Inputs="@(TypeReferences);@(JsonSchemaReferences)" Outputs="@(TypeReferences->'$(TypeReferencesDropFolder)%(Filename)%(Extension)');@(JsonSchemaReferences->'$(JsonSchemaReferencesDropFolder)%(Filename)%(Extension)')">
    <Copy SourceFiles="@(TypeReferences)" DestinationFiles="@(TypeReferences->'$(TypeReferencesDropFolder)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(JsonSchemaReferences)" DestinationFiles="@(JsonSchemaReferences->'$(JsonSchemaReferencesDropFolder)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="DeleteTypeCopiedFiles" AfterTargets="Clean">
    <RemoveDir Directories="$(TypeReferencesDropFolder);$(JsonSchemaReferencesDropFolder);$(PosExtensionPackagesDropRoot)" />
  </Target>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(TypeScriptPath)\Microsoft.TypeScript.targets" Condition="Exists('$(TypeScriptPath)\Microsoft.TypeScript.targets')" />
  <Import Project="$(SdkRootPath)\BuildTools\Microsoft.Dynamics.RetailSdk.Build.targets" />
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <TypeScriptCompile Include="DaxExtensions\BaseClasses\KnockoutExtensionViewControllerBase.ts" />
    <TypeScriptCompile Include="DaxExtensions\BaseClasses\KnockoutExtensionViewModelBase.ts" />
    <TypeScriptCompile Include="DaxExtensions\DataServices\DataServiceEntities.ts" />
    <TypeScriptCompile Include="DaxExtensions\Dialogs\EmployeeDiscountMessageDialog.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\EmployeeDiscount\EmployeeDiscountOperationRequest.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\EmployeeDiscount\EmployeeDiscountOperationRequestFactory.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\EmployeeDiscount\EmployeeDiscountOperationRequestHandler.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\EmployeeDiscount\EmployeeDiscountOperationResponse.ts" />
    <TypeScriptCompile Include="DaxExtensions\DataServices\DataServiceRequests.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\GreetingsView\GreetingsViewOperationRequest.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\GreetingsView\GreetingsViewOperationRequestFactory.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\GreetingsView\GreetingsViewOperationRequestHandler.ts" />
    <TypeScriptCompile Include="DaxExtensions\Operations\GreetingsView\GreetingsViewOperationResponse.ts" />
    <TypeScriptCompile Include="DaxExtensions\TriggerHandlers\PreLogonTrigger.ts" />
    <TypeScriptCompile Include="DaxExtensions\TriggerHandlers\PreProductSaleTrigger.ts" />
    <TypeScriptCompile Include="DaxExtensions\ViewExtensions\CustomerDetailsPanel.ts" />
    <TypeScriptCompile Include="DaxExtensions\Views\GreetingsDataListView.ts" />
    <TypeScriptCompile Include="DaxExtensions\Views\GreetingsDataListViewModel.ts" />
  </ItemGroup>
</Project>